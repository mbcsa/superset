{"version":3,"file":"176f4eb204d71effd95c.chunk.js","mappings":"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","sources":["webpack://superset/./src/components/ImportModal/index.tsx","webpack://superset/./src/components/ListView/ActionsBar.tsx","webpack://superset/./src/views/CRUD/data/common.ts","webpack://superset/./src/views/CRUD/data/components/SyntaxHighlighterCopy/index.tsx","webpack://superset/./src/views/CRUD/data/hooks.ts","webpack://superset/./src/views/CRUD/data/savedquery/SavedQueryPreviewModal.tsx","webpack://superset/./src/views/CRUD/data/savedquery/SavedQueryList.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FunctionComponent, useEffect, useState } from 'react';\nimport { UploadChangeParam, UploadFile } from 'antd/lib/upload/interface';\nimport { styled, t } from '@superset-ui/core';\n\nimport Button from 'src/components/Button';\nimport Modal from 'src/components/Modal';\nimport { Upload } from 'src/components';\nimport { useImportResource } from 'src/views/CRUD/hooks';\nimport { ImportResourceName } from 'src/views/CRUD/types';\nimport ErrorAlert from './ErrorAlert';\n\nconst HelperMessage = styled.div`\n  display: block;\n  color: ${({ theme }) => theme.colors.grayscale.base};\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n`;\n\nconst StyledInputContainer = styled.div`\n  padding-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  padding-top: ${({ theme }) => theme.gridUnit * 2}px;\n\n  & > div {\n    margin: ${({ theme }) => theme.gridUnit}px 0;\n  }\n\n  &.extra-container {\n    padding-top: 8px;\n  }\n\n  .confirm-overwrite {\n    margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  .input-container {\n    display: flex;\n    align-items: center;\n\n    label {\n      display: flex;\n      margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n    }\n\n    i {\n      margin: 0 ${({ theme }) => theme.gridUnit}px;\n    }\n  }\n\n  input,\n  textarea {\n    flex: 1 1 auto;\n  }\n\n  textarea {\n    height: 160px;\n    resize: none;\n  }\n\n  input::placeholder,\n  textarea::placeholder {\n    color: ${({ theme }) => theme.colors.grayscale.light1};\n  }\n\n  textarea,\n  input[type='text'],\n  input[type='number'] {\n    padding: ${({ theme }) => theme.gridUnit * 1.5}px\n      ${({ theme }) => theme.gridUnit * 2}px;\n    border-style: none;\n    border: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-radius: ${({ theme }) => theme.gridUnit}px;\n\n    &[name='name'] {\n      flex: 0 1 auto;\n      width: 40%;\n    }\n\n    &[name='sqlalchemy_uri'] {\n      margin-right: ${({ theme }) => theme.gridUnit * 3}px;\n    }\n  }\n`;\n\nexport interface ImportModelsModalProps {\n  resourceName: ImportResourceName;\n  resourceLabel: string;\n  passwordsNeededMessage: string;\n  confirmOverwriteMessage: string;\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  onModelImport: () => void;\n  show: boolean;\n  onHide: () => void;\n  passwordFields?: string[];\n  setPasswordFields?: (passwordFields: string[]) => void;\n}\n\nconst ImportModelsModal: FunctionComponent<ImportModelsModalProps> = ({\n  resourceName,\n  resourceLabel,\n  passwordsNeededMessage,\n  confirmOverwriteMessage,\n  onModelImport,\n  show,\n  onHide,\n  passwordFields = [],\n  setPasswordFields = () => {},\n}) => {\n  const [isHidden, setIsHidden] = useState<boolean>(true);\n  const [passwords, setPasswords] = useState<Record<string, string>>({});\n  const [needsOverwriteConfirm, setNeedsOverwriteConfirm] =\n    useState<boolean>(false);\n  const [confirmedOverwrite, setConfirmedOverwrite] = useState<boolean>(false);\n  const [fileList, setFileList] = useState<UploadFile[]>([]);\n  const [importingModel, setImportingModel] = useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = useState<string>();\n\n  const clearModal = () => {\n    setFileList([]);\n    setPasswordFields([]);\n    setPasswords({});\n    setNeedsOverwriteConfirm(false);\n    setConfirmedOverwrite(false);\n    setImportingModel(false);\n    setErrorMessage('');\n  };\n\n  const handleErrorMsg = (msg: string) => {\n    setErrorMessage(msg);\n  };\n\n  const {\n    state: { alreadyExists, passwordsNeeded },\n    importResource,\n  } = useImportResource(resourceName, resourceLabel, handleErrorMsg);\n\n  useEffect(() => {\n    setPasswordFields(passwordsNeeded);\n    if (passwordsNeeded.length > 0) {\n      setImportingModel(false);\n    }\n  }, [passwordsNeeded, setPasswordFields]);\n\n  useEffect(() => {\n    setNeedsOverwriteConfirm(alreadyExists.length > 0);\n    if (alreadyExists.length > 0) {\n      setImportingModel(false);\n    }\n  }, [alreadyExists, setNeedsOverwriteConfirm]);\n\n  // Functions\n  const hide = () => {\n    setIsHidden(true);\n    onHide();\n    clearModal();\n  };\n\n  const onUpload = () => {\n    if (!(fileList[0]?.originFileObj instanceof File)) {\n      return;\n    }\n\n    setImportingModel(true);\n    importResource(\n      fileList[0].originFileObj,\n      passwords,\n      confirmedOverwrite,\n    ).then(result => {\n      if (result) {\n        clearModal();\n        onModelImport();\n      }\n    });\n  };\n\n  const changeFile = (info: UploadChangeParam) => {\n    setFileList([\n      {\n        ...info.file,\n        status: 'done',\n      },\n    ]);\n  };\n\n  const removeFile = (removedFile: UploadFile) => {\n    setFileList(fileList.filter(file => file.uid !== removedFile.uid));\n    return false;\n  };\n\n  const confirmOverwrite = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const targetValue = (event.currentTarget?.value as string) ?? '';\n    setConfirmedOverwrite(targetValue.toUpperCase() === t('OVERWRITE'));\n  };\n\n  const renderPasswordFields = () => {\n    if (passwordFields.length === 0) {\n      return null;\n    }\n\n    return (\n      <>\n        <h5>Database passwords</h5>\n        <HelperMessage>{passwordsNeededMessage}</HelperMessage>\n        {passwordFields.map(fileName => (\n          <StyledInputContainer key={`password-for-${fileName}`}>\n            <div className=\"control-label\">\n              {fileName}\n              <span className=\"required\">*</span>\n            </div>\n            <input\n              name={`password-${fileName}`}\n              autoComplete={`password-${fileName}`}\n              type=\"password\"\n              value={passwords[fileName]}\n              onChange={event =>\n                setPasswords({ ...passwords, [fileName]: event.target.value })\n              }\n            />\n          </StyledInputContainer>\n        ))}\n      </>\n    );\n  };\n\n  const renderOverwriteConfirmation = () => {\n    if (!needsOverwriteConfirm) {\n      return null;\n    }\n\n    return (\n      <>\n        <StyledInputContainer>\n          <div className=\"confirm-overwrite\">{confirmOverwriteMessage}</div>\n          <div className=\"control-label\">\n            {t('Type \"%s\" to confirm', t('OVERWRITE'))}\n          </div>\n          <input\n            data-test=\"overwrite-modal-input\"\n            id=\"overwrite\"\n            type=\"text\"\n            onChange={confirmOverwrite}\n          />\n        </StyledInputContainer>\n      </>\n    );\n  };\n\n  // Show/hide\n  if (isHidden && show) {\n    setIsHidden(false);\n  }\n\n  return (\n    <Modal\n      name=\"model\"\n      className=\"import-model-modal\"\n      disablePrimaryButton={\n        fileList.length === 0 ||\n        (needsOverwriteConfirm && !confirmedOverwrite) ||\n        importingModel\n      }\n      onHandledPrimaryAction={onUpload}\n      onHide={hide}\n      primaryButtonName={needsOverwriteConfirm ? t('Overwrite') : t('Import')}\n      primaryButtonType={needsOverwriteConfirm ? 'danger' : 'primary'}\n      width=\"750px\"\n      show={show}\n      title={<h4>{t('Import %s', resourceLabel)}</h4>}\n    >\n      <StyledInputContainer>\n        <Upload\n          name=\"modelFile\"\n          id=\"modelFile\"\n          data-test=\"model-file-input\"\n          accept=\".yaml,.json,.yml,.zip\"\n          fileList={fileList}\n          onChange={changeFile}\n          onRemove={removeFile}\n          // upload is handled by hook\n          customRequest={() => {}}\n          disabled={importingModel}\n        >\n          <Button loading={importingModel}>Select file</Button>\n        </Upload>\n      </StyledInputContainer>\n      {errorMessage && (\n        <ErrorAlert\n          errorMessage={errorMessage}\n          showDbInstallInstructions={passwordFields.length > 0}\n        />\n      )}\n      {renderPasswordFields()}\n      {renderOverwriteConfirmation()}\n    </Modal>\n  );\n};\n\nexport default ImportModelsModal;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { TooltipPlacement } from 'antd/lib/tooltip';\n\nexport type ActionProps = {\n  label: string;\n  tooltip?: string | React.ReactElement;\n  placement?: TooltipPlacement;\n  icon: string;\n  onClick: () => void;\n};\n\ninterface ActionsBarProps {\n  actions: Array<ActionProps>;\n}\n\nconst StyledActions = styled.span`\n  white-space: nowrap;\n  min-width: 100px;\n  svg,\n  i {\n    margin-right: 8px;\n\n    &:hover {\n      path {\n        fill: ${({ theme }) => theme.colors.primary.base};\n      }\n    }\n  }\n`;\n\nconst ActionWrapper = styled.span`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n`;\n\nexport default function ActionsBar({ actions }: ActionsBarProps) {\n  return (\n    <StyledActions className=\"actions\">\n      {actions.map((action, index) => {\n        const ActionIcon = Icons[action.icon];\n        if (action.tooltip) {\n          return (\n            <Tooltip\n              id={`${action.label}-tooltip`}\n              title={action.tooltip}\n              placement={action.placement}\n              key={index}\n            >\n              <ActionWrapper\n                role=\"button\"\n                tabIndex={0}\n                className=\"action-button\"\n                data-test={action.label}\n                onClick={action.onClick}\n              >\n                <ActionIcon />\n              </ActionWrapper>\n            </Tooltip>\n          );\n        }\n\n        return (\n          <ActionWrapper\n            role=\"button\"\n            tabIndex={0}\n            className=\"action-button\"\n            onClick={action.onClick}\n            data-test={action.label}\n            key={index}\n          >\n            <ActionIcon />\n          </ActionWrapper>\n        );\n      })}\n    </StyledActions>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\n\nexport const commonMenuData = {\n  name: t('Data'),\n  tabs: [\n    {\n      name: 'Databases',\n      label: t('Databases'),\n      url: '/databaseview/list/',\n      usesRouter: true,\n    },\n    {\n      name: 'Datasets',\n      label: t('Datasets'),\n      url: '/tablemodelview/list/',\n      usesRouter: true,\n    },\n    {\n      name: 'Saved queries',\n      label: t('Saved queries'),\n      url: '/savedqueryview/list/',\n      usesRouter: true,\n    },\n    {\n      name: 'Query history',\n      label: t('Query history'),\n      url: '/superset/sqllab/history/',\n      usesRouter: true,\n    },\n  ],\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { SyntaxHighlighterProps } from 'react-syntax-highlighter';\nimport sqlSyntax from 'react-syntax-highlighter/dist/cjs/languages/hljs/sql';\nimport htmlSyntax from 'react-syntax-highlighter/dist/cjs/languages/hljs/htmlbars';\nimport markdownSyntax from 'react-syntax-highlighter/dist/cjs/languages/hljs/markdown';\nimport jsonSyntax from 'react-syntax-highlighter/dist/cjs/languages/hljs/json';\nimport github from 'react-syntax-highlighter/dist/cjs/styles/hljs/github';\nimport SyntaxHighlighter from 'react-syntax-highlighter/dist/cjs/light';\nimport Icons from 'src/components/Icons';\nimport { ToastProps } from 'src/components/MessageToasts/withToasts';\nimport copyTextToClipboard from 'src/utils/copy';\n\nSyntaxHighlighter.registerLanguage('sql', sqlSyntax);\nSyntaxHighlighter.registerLanguage('markdown', markdownSyntax);\nSyntaxHighlighter.registerLanguage('html', htmlSyntax);\nSyntaxHighlighter.registerLanguage('json', jsonSyntax);\n\nconst SyntaxHighlighterWrapper = styled.div`\n  margin-top: -24px;\n\n  &:hover {\n    svg {\n      visibility: visible;\n    }\n  }\n\n  svg {\n    position: relative;\n    top: 40px;\n    left: 512px;\n    visibility: hidden;\n    margin: -4px;\n    color: ${({ theme }) => theme.colors.grayscale.base};\n  }\n`;\n\nexport default function SyntaxHighlighterCopy({\n  addDangerToast,\n  addSuccessToast,\n  children,\n  ...syntaxHighlighterProps\n}: SyntaxHighlighterProps & {\n  children: string;\n  addDangerToast?: ToastProps['addDangerToast'];\n  addSuccessToast?: ToastProps['addSuccessToast'];\n  language: 'sql' | 'markdown' | 'html' | 'json';\n}) {\n  function copyToClipboard(textToCopy: string) {\n    copyTextToClipboard(() => Promise.resolve(textToCopy))\n      .then(() => {\n        if (addSuccessToast) {\n          addSuccessToast(t('SQL Copied!'));\n        }\n      })\n      .catch(() => {\n        if (addDangerToast) {\n          addDangerToast(t('Sorry, your browser does not support copying.'));\n        }\n      });\n  }\n  return (\n    <SyntaxHighlighterWrapper>\n      <Icons.Copy\n        tabIndex={0}\n        role=\"button\"\n        onClick={e => {\n          e.preventDefault();\n          e.currentTarget.blur();\n          copyToClipboard(children);\n        }}\n      />\n      <SyntaxHighlighter style={github} {...syntaxHighlighterProps}>\n        {children}\n      </SyntaxHighlighter>\n    </SyntaxHighlighterWrapper>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState, useEffect } from 'react';\n\ntype BaseQueryObject = {\n  id: number;\n};\nexport function useQueryPreviewState<D extends BaseQueryObject = any>({\n  queries,\n  fetchData,\n  currentQueryId,\n}: {\n  queries: D[];\n  fetchData: (id: number) => any;\n  currentQueryId: number;\n}) {\n  const index = queries.findIndex(query => query.id === currentQueryId);\n  const [currentIndex, setCurrentIndex] = useState(index);\n  const [disablePrevious, setDisablePrevious] = useState(false);\n  const [disableNext, setDisableNext] = useState(false);\n\n  function checkIndex() {\n    setDisablePrevious(currentIndex === 0);\n    setDisableNext(currentIndex === queries.length - 1);\n  }\n\n  function handleDataChange(previous: boolean) {\n    const offset = previous ? -1 : 1;\n    const index = currentIndex + offset;\n    if (index >= 0 && index < queries.length) {\n      fetchData(queries[index].id);\n      setCurrentIndex(index);\n      checkIndex();\n    }\n  }\n\n  function handleKeyPress(ev: any) {\n    if (currentIndex >= 0 && currentIndex < queries.length) {\n      if (ev.key === 'ArrowDown' || ev.key === 'k') {\n        ev.preventDefault();\n        handleDataChange(false);\n      } else if (ev.key === 'ArrowUp' || ev.key === 'j') {\n        ev.preventDefault();\n        handleDataChange(true);\n      }\n    }\n  }\n\n  useEffect(() => {\n    checkIndex();\n  });\n\n  return {\n    handleKeyPress,\n    handleDataChange,\n    disablePrevious,\n    disableNext,\n  };\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FunctionComponent } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport Modal from 'src/components/Modal';\nimport Button from 'src/components/Button';\nimport SyntaxHighlighterCopy from 'src/views/CRUD/data/components/SyntaxHighlighterCopy';\nimport withToasts, {\n  ToastProps,\n} from 'src/components/MessageToasts/withToasts';\nimport { useQueryPreviewState } from 'src/views/CRUD/data/hooks';\n\nconst QueryTitle = styled.div`\n  color: ${({ theme }) => theme.colors.secondary.light2};\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  margin-bottom: 0;\n  text-transform: uppercase;\n`;\n\nconst QueryLabel = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.dark2};\n  font-size: ${({ theme }) => theme.typography.sizes.m}px;\n  padding: 4px 0 16px 0;\n`;\n\nconst StyledModal = styled(Modal)`\n  .ant-modal-content {\n  }\n\n  .ant-modal-body {\n    padding: 24px;\n  }\n\n  pre {\n    font-size: ${({ theme }) => theme.typography.sizes.xs}px;\n    font-weight: ${({ theme }) => theme.typography.weights.normal};\n    line-height: ${({ theme }) => theme.typography.sizes.l}px;\n    height: 375px;\n    border: none;\n  }\n`;\n\ntype SavedQueryObject = {\n  id: number;\n  label: string;\n  sql: string;\n};\n\ninterface SavedQueryPreviewModalProps extends ToastProps {\n  fetchData: (id: number) => {};\n  onHide: () => void;\n  openInSqlLab: (id: number) => {};\n  queries: Array<SavedQueryObject>;\n  savedQuery: SavedQueryObject;\n  show: boolean;\n}\n\nconst SavedQueryPreviewModal: FunctionComponent<SavedQueryPreviewModalProps> =\n  ({\n    fetchData,\n    onHide,\n    openInSqlLab,\n    queries,\n    savedQuery,\n    show,\n    addDangerToast,\n    addSuccessToast,\n  }) => {\n    const { handleKeyPress, handleDataChange, disablePrevious, disableNext } =\n      useQueryPreviewState<SavedQueryObject>({\n        queries,\n        currentQueryId: savedQuery.id,\n        fetchData,\n      });\n\n    return (\n      <div role=\"none\" onKeyUp={handleKeyPress}>\n        <StyledModal\n          onHide={onHide}\n          show={show}\n          title={t('Query preview')}\n          footer={\n            <>\n              <Button\n                data-test=\"previous-saved-query\"\n                key=\"previous-saved-query\"\n                disabled={disablePrevious}\n                onClick={() => handleDataChange(true)}\n              >\n                {t('Previous')}\n              </Button>\n              <Button\n                data-test=\"next-saved-query\"\n                key=\"next-saved-query\"\n                disabled={disableNext}\n                onClick={() => handleDataChange(false)}\n              >\n                {t('Next')}\n              </Button>\n              <Button\n                data-test=\"open-in-sql-lab\"\n                key=\"open-in-sql-lab\"\n                buttonStyle=\"primary\"\n                onClick={() => openInSqlLab(savedQuery.id)}\n              >\n                {t('Open in SQL Lab')}\n              </Button>\n            </>\n          }\n        >\n          <QueryTitle>{t('Query name')}</QueryTitle>\n          <QueryLabel>{savedQuery.label}</QueryLabel>\n          <SyntaxHighlighterCopy\n            language=\"sql\"\n            addDangerToast={addDangerToast}\n            addSuccessToast={addSuccessToast}\n          >\n            {savedQuery.sql || ''}\n          </SyntaxHighlighterCopy>\n        </StyledModal>\n      </div>\n    );\n  };\n\nexport default withToasts(SavedQueryPreviewModal);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { SupersetClient, t, styled } from '@superset-ui/core';\nimport React, { useState, useMemo, useCallback } from 'react';\nimport rison from 'rison';\nimport moment from 'moment';\nimport {\n  createFetchRelated,\n  createFetchDistinct,\n  createErrorHandler,\n} from 'src/views/CRUD/utils';\nimport Popover from 'src/components/Popover';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport handleResourceExport from 'src/utils/export';\nimport SubMenu, {\n  SubMenuProps,\n  ButtonProps,\n} from 'src/views/components/SubMenu';\nimport ListView, {\n  ListViewProps,\n  Filters,\n  FilterOperator,\n} from 'src/components/ListView';\nimport Loading from 'src/components/Loading';\nimport DeleteModal from 'src/components/DeleteModal';\nimport ActionsBar, { ActionProps } from 'src/components/ListView/ActionsBar';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { commonMenuData } from 'src/views/CRUD/data/common';\nimport { SavedQueryObject } from 'src/views/CRUD/types';\nimport copyTextToClipboard from 'src/utils/copy';\nimport { isFeatureEnabled, FeatureFlag } from 'src/featureFlags';\nimport ImportModelsModal from 'src/components/ImportModal/index';\nimport Icons from 'src/components/Icons';\nimport SavedQueryPreviewModal from './SavedQueryPreviewModal';\n\nconst PAGE_SIZE = 25;\nconst PASSWORDS_NEEDED_MESSAGE = t(\n  'The passwords for the databases below are needed in order to ' +\n    'import them together with the saved queries. Please note that the ' +\n    '\"Secure Extra\" and \"Certificate\" sections of ' +\n    'the database configuration are not present in export files, and ' +\n    'should be added manually after the import if they are needed.',\n);\nconst CONFIRM_OVERWRITE_MESSAGE = t(\n  'You are importing one or more saved queries that already exist. ' +\n    'Overwriting might cause you to lose some of your work. Are you ' +\n    'sure you want to overwrite?',\n);\n\ninterface SavedQueryListProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  user: {\n    userId: string | number;\n  };\n}\n\nconst StyledTableLabel = styled.div`\n  .count {\n    margin-left: 5px;\n    color: ${({ theme }) => theme.colors.primary.base};\n    text-decoration: underline;\n    cursor: pointer;\n  }\n`;\n\nconst StyledPopoverItem = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.dark2};\n`;\n\nfunction SavedQueryList({\n  addDangerToast,\n  addSuccessToast,\n}: SavedQueryListProps) {\n  const {\n    state: {\n      loading,\n      resourceCount: queryCount,\n      resourceCollection: queries,\n      bulkSelectEnabled,\n    },\n    hasPerm,\n    fetchData,\n    toggleBulkSelect,\n    refreshData,\n  } = useListViewResource<SavedQueryObject>(\n    'saved_query',\n    t('Saved queries'),\n    addDangerToast,\n  );\n  const [queryCurrentlyDeleting, setQueryCurrentlyDeleting] =\n    useState<SavedQueryObject | null>(null);\n  const [savedQueryCurrentlyPreviewing, setSavedQueryCurrentlyPreviewing] =\n    useState<SavedQueryObject | null>(null);\n  const [importingSavedQuery, showImportModal] = useState<boolean>(false);\n  const [passwordFields, setPasswordFields] = useState<string[]>([]);\n  const [preparingExport, setPreparingExport] = useState<boolean>(false);\n\n  const openSavedQueryImportModal = () => {\n    showImportModal(true);\n  };\n\n  const closeSavedQueryImportModal = () => {\n    showImportModal(false);\n  };\n\n  const handleSavedQueryImport = () => {\n    showImportModal(false);\n    refreshData();\n    addSuccessToast(t('Query imported'));\n  };\n\n  const canCreate = hasPerm('can_write');\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n  const canExport =\n    hasPerm('can_export') && isFeatureEnabled(FeatureFlag.VERSIONED_EXPORT);\n\n  const openNewQuery = () => {\n    window.open(`${window.location.origin}/superset/sqllab?new=true`);\n  };\n\n  const handleSavedQueryPreview = useCallback(\n    (id: number) => {\n      SupersetClient.get({\n        endpoint: `/api/v1/saved_query/${id}`,\n      }).then(\n        ({ json = {} }) => {\n          setSavedQueryCurrentlyPreviewing({ ...json.result });\n        },\n        createErrorHandler(errMsg =>\n          addDangerToast(\n            t('There was an issue previewing the selected query %s', errMsg),\n          ),\n        ),\n      );\n    },\n    [addDangerToast],\n  );\n\n  const menuData: SubMenuProps = {\n    activeChild: 'Saved queries',\n    ...commonMenuData,\n  };\n\n  const subMenuButtons: Array<ButtonProps> = [];\n\n  if (canDelete) {\n    subMenuButtons.push({\n      name: t('Bulk select'),\n      onClick: toggleBulkSelect,\n      buttonStyle: 'secondary',\n    });\n  }\n\n  subMenuButtons.push({\n    name: (\n      <>\n        <i className=\"fa fa-plus\" /> {t('Query')}\n      </>\n    ),\n    onClick: openNewQuery,\n    buttonStyle: 'primary',\n  });\n\n  if (canCreate && isFeatureEnabled(FeatureFlag.VERSIONED_EXPORT)) {\n    subMenuButtons.push({\n      name: (\n        <Tooltip\n          id=\"import-tooltip\"\n          title={t('Import queries')}\n          placement=\"bottomRight\"\n          data-test=\"import-tooltip-test\"\n        >\n          <Icons.Import data-test=\"import-icon\" />\n        </Tooltip>\n      ),\n      buttonStyle: 'link',\n      onClick: openSavedQueryImportModal,\n      'data-test': 'import-button',\n    });\n  }\n\n  menuData.buttons = subMenuButtons;\n\n  // Action methods\n  const openInSqlLab = (id: number) => {\n    window.open(`${window.location.origin}/superset/sqllab?savedQueryId=${id}`);\n  };\n\n  const copyQueryLink = useCallback(\n    (id: number) => {\n      copyTextToClipboard(() =>\n        Promise.resolve(\n          `${window.location.origin}/superset/sqllab?savedQueryId=${id}`,\n        ),\n      )\n        .then(() => {\n          addSuccessToast(t('Link Copied!'));\n        })\n        .catch(() => {\n          addDangerToast(t('Sorry, your browser does not support copying.'));\n        });\n    },\n    [addDangerToast, addSuccessToast],\n  );\n\n  const handleQueryDelete = ({ id, label }: SavedQueryObject) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/saved_query/${id}`,\n    }).then(\n      () => {\n        refreshData();\n        setQueryCurrentlyDeleting(null);\n        addSuccessToast(t('Deleted: %s', label));\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(t('There was an issue deleting %s: %s', label, errMsg)),\n      ),\n    );\n  };\n\n  const handleBulkSavedQueryExport = (\n    savedQueriesToExport: SavedQueryObject[],\n  ) => {\n    const ids = savedQueriesToExport.map(({ id }) => id);\n    handleResourceExport('saved_query', ids, () => {\n      setPreparingExport(false);\n    });\n    setPreparingExport(true);\n  };\n\n  const handleBulkQueryDelete = (queriesToDelete: SavedQueryObject[]) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/saved_query/?q=${rison.encode(\n        queriesToDelete.map(({ id }) => id),\n      )}`,\n    }).then(\n      ({ json = {} }) => {\n        refreshData();\n        addSuccessToast(json.message);\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('There was an issue deleting the selected queries: %s', errMsg),\n        ),\n      ),\n    );\n  };\n\n  const initialSort = [{ id: 'changed_on_delta_humanized', desc: true }];\n  const columns = useMemo(\n    () => [\n      {\n        accessor: 'label',\n        Header: t('Name'),\n      },\n      {\n        accessor: 'database.database_name',\n        Header: t('Database'),\n        size: 'xl',\n      },\n      {\n        accessor: 'database',\n        hidden: true,\n        disableSortBy: true,\n      },\n      {\n        accessor: 'schema',\n        Header: t('Schema'),\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { sql_tables: tables = [] },\n          },\n        }: any) => {\n          const names = tables.map((table: any) => table.table);\n          const main = names?.shift() || '';\n\n          if (names.length) {\n            return (\n              <StyledTableLabel>\n                <span>{main}</span>\n                <Popover\n                  placement=\"right\"\n                  title={t('TABLES')}\n                  trigger=\"click\"\n                  content={\n                    <>\n                      {names.map((name: string) => (\n                        <StyledPopoverItem key={name}>{name}</StyledPopoverItem>\n                      ))}\n                    </>\n                  }\n                >\n                  <span className=\"count\">(+{names.length})</span>\n                </Popover>\n              </StyledTableLabel>\n            );\n          }\n\n          return main;\n        },\n        accessor: 'sql_tables',\n        Header: t('Tables'),\n        size: 'xl',\n        disableSortBy: true,\n      },\n      {\n        Cell: ({\n          row: {\n            original: { created_on: createdOn },\n          },\n        }: any) => {\n          const date = new Date(createdOn);\n          const utc = new Date(\n            Date.UTC(\n              date.getFullYear(),\n              date.getMonth(),\n              date.getDate(),\n              date.getHours(),\n              date.getMinutes(),\n              date.getSeconds(),\n              date.getMilliseconds(),\n            ),\n          );\n\n          return moment(utc).fromNow();\n        },\n        Header: t('Created on'),\n        accessor: 'created_on',\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { changed_on_delta_humanized: changedOn },\n          },\n        }: any) => changedOn,\n        Header: t('Modified'),\n        accessor: 'changed_on_delta_humanized',\n        size: 'xl',\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const handlePreview = () => {\n            handleSavedQueryPreview(original.id);\n          };\n          const handleEdit = () => openInSqlLab(original.id);\n          const handleCopy = () => copyQueryLink(original.id);\n          const handleExport = () => handleBulkSavedQueryExport([original]);\n          const handleDelete = () => setQueryCurrentlyDeleting(original);\n\n          const actions = [\n            {\n              label: 'preview-action',\n              tooltip: t('Query preview'),\n              placement: 'bottom',\n              icon: 'Binoculars',\n              onClick: handlePreview,\n            },\n            canEdit && {\n              label: 'edit-action',\n              tooltip: t('Edit query'),\n              placement: 'bottom',\n              icon: 'Edit',\n              onClick: handleEdit,\n            },\n            {\n              label: 'copy-action',\n              tooltip: t('Copy query URL'),\n              placement: 'bottom',\n              icon: 'Copy',\n              onClick: handleCopy,\n            },\n            canExport && {\n              label: 'export-action',\n              tooltip: t('Export query'),\n              placement: 'bottom',\n              icon: 'Share',\n              onClick: handleExport,\n            },\n            canDelete && {\n              label: 'delete-action',\n              tooltip: t('Delete query'),\n              placement: 'bottom',\n              icon: 'Trash',\n              onClick: handleDelete,\n            },\n          ].filter(item => !!item);\n\n          return <ActionsBar actions={actions as ActionProps[]} />;\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        disableSortBy: true,\n      },\n    ],\n    [canDelete, canEdit, canExport, copyQueryLink, handleSavedQueryPreview],\n  );\n\n  const filters: Filters = useMemo(\n    () => [\n      {\n        Header: t('Database'),\n        id: 'database',\n        input: 'select',\n        operator: FilterOperator.relationOneMany,\n        unfilteredLabel: 'All',\n        fetchSelects: createFetchRelated(\n          'saved_query',\n          'database',\n          createErrorHandler(errMsg =>\n            addDangerToast(\n              t(\n                'An error occurred while fetching dataset datasource values: %s',\n                errMsg,\n              ),\n            ),\n          ),\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Schema'),\n        id: 'schema',\n        input: 'select',\n        operator: FilterOperator.equals,\n        unfilteredLabel: 'All',\n        fetchSelects: createFetchDistinct(\n          'saved_query',\n          'schema',\n          createErrorHandler(errMsg =>\n            addDangerToast(\n              t('An error occurred while fetching schema values: %s', errMsg),\n            ),\n          ),\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Search'),\n        id: 'label',\n        input: 'search',\n        operator: FilterOperator.allText,\n      },\n    ],\n    [addDangerToast],\n  );\n\n  return (\n    <>\n      <SubMenu {...menuData} />\n      {queryCurrentlyDeleting && (\n        <DeleteModal\n          description={t(\n            'This action will permanently delete the saved query.',\n          )}\n          onConfirm={() => {\n            if (queryCurrentlyDeleting) {\n              handleQueryDelete(queryCurrentlyDeleting);\n            }\n          }}\n          onHide={() => setQueryCurrentlyDeleting(null)}\n          open\n          title={t('Delete Query?')}\n        />\n      )}\n      {savedQueryCurrentlyPreviewing && (\n        <SavedQueryPreviewModal\n          fetchData={handleSavedQueryPreview}\n          onHide={() => setSavedQueryCurrentlyPreviewing(null)}\n          savedQuery={savedQueryCurrentlyPreviewing}\n          queries={queries}\n          openInSqlLab={openInSqlLab}\n          show\n        />\n      )}\n      <ConfirmStatusChange\n        title={t('Please confirm')}\n        description={t('Are you sure you want to delete the selected queries?')}\n        onConfirm={handleBulkQueryDelete}\n      >\n        {confirmDelete => {\n          const bulkActions: ListViewProps['bulkActions'] = [];\n          if (canDelete) {\n            bulkActions.push({\n              key: 'delete',\n              name: t('Delete'),\n              onSelect: confirmDelete,\n              type: 'danger',\n            });\n          }\n          if (canExport) {\n            bulkActions.push({\n              key: 'export',\n              name: t('Export'),\n              type: 'primary',\n              onSelect: handleBulkSavedQueryExport,\n            });\n          }\n          return (\n            <ListView<SavedQueryObject>\n              className=\"saved_query-list-view\"\n              columns={columns}\n              count={queryCount}\n              data={queries}\n              fetchData={fetchData}\n              filters={filters}\n              initialSort={initialSort}\n              loading={loading}\n              pageSize={PAGE_SIZE}\n              bulkActions={bulkActions}\n              bulkSelectEnabled={bulkSelectEnabled}\n              disableBulkSelect={toggleBulkSelect}\n              highlightRowId={savedQueryCurrentlyPreviewing?.id}\n            />\n          );\n        }}\n      </ConfirmStatusChange>\n\n      <ImportModelsModal\n        resourceName=\"saved_query\"\n        resourceLabel={t('queries')}\n        passwordsNeededMessage={PASSWORDS_NEEDED_MESSAGE}\n        confirmOverwriteMessage={CONFIRM_OVERWRITE_MESSAGE}\n        addDangerToast={addDangerToast}\n        addSuccessToast={addSuccessToast}\n        onModelImport={handleSavedQueryImport}\n        show={importingSavedQuery}\n        onHide={closeSavedQueryImportModal}\n        passwordFields={passwordFields}\n        setPasswordFields={setPasswordFields}\n      />\n      {preparingExport && <Loading />}\n    </>\n  );\n}\n\nexport default withToasts(SavedQueryList);\n"],"names":["HelperMessage","theme","colors","grayscale","base","typography","sizes","s","StyledInputContainer","gridUnit","light1","light2","resourceName","resourceLabel","passwordsNeededMessage","confirmOverwriteMessage","onModelImport","show","onHide","passwordFields","setPasswordFields","isHidden","setIsHidden","useState","passwords","setPasswords","needsOverwriteConfirm","setNeedsOverwriteConfirm","confirmedOverwrite","setConfirmedOverwrite","fileList","setFileList","importingModel","setImportingModel","errorMessage","setErrorMessage","clearModal","state","alreadyExists","passwordsNeeded","importResource","msg","useEffect","length","name","className","disablePrimaryButton","onHandledPrimaryAction","originFileObj","File","then","result","primaryButtonName","t","primaryButtonType","width","title","id","accept","onChange","info","file","status","onRemove","removedFile","filter","uid","customRequest","disabled","loading","showDbInstallInstructions","map","fileName","key","autoComplete","type","value","event","target","targetValue","currentTarget","toUpperCase","StyledActions","primary","ActionWrapper","ActionsBar","actions","action","index","ActionIcon","icon","tooltip","label","placement","role","tabIndex","onClick","commonMenuData","tabs","url","usesRouter","SyntaxHighlighterWrapper","SyntaxHighlighterCopy","addDangerToast","addSuccessToast","children","syntaxHighlighterProps","e","textToCopy","preventDefault","blur","Promise","resolve","catch","style","useQueryPreviewState","queries","fetchData","currentQueryId","findIndex","query","currentIndex","setCurrentIndex","disablePrevious","setDisablePrevious","disableNext","setDisableNext","checkIndex","handleDataChange","previous","handleKeyPress","ev","QueryTitle","secondary","QueryLabel","dark2","m","StyledModal","Modal","xs","weights","normal","l","withToasts","openInSqlLab","savedQuery","onKeyUp","footer","Button","buttonStyle","language","sql","PASSWORDS_NEEDED_MESSAGE","CONFIRM_OVERWRITE_MESSAGE","StyledTableLabel","StyledPopoverItem","resourceCount","queryCount","resourceCollection","bulkSelectEnabled","hasPerm","toggleBulkSelect","refreshData","queryCurrentlyDeleting","setQueryCurrentlyDeleting","savedQueryCurrentlyPreviewing","setSavedQueryCurrentlyPreviewing","importingSavedQuery","showImportModal","preparingExport","setPreparingExport","canCreate","canEdit","canDelete","canExport","handleSavedQueryPreview","useCallback","SupersetClient","endpoint","json","errMsg","menuData","activeChild","common","subMenuButtons","push","window","open","location","origin","Tooltip","Icons","buttons","copyQueryLink","copy","handleBulkSavedQueryExport","savedQueriesToExport","ids","initialSort","desc","columns","useMemo","accessor","Header","size","hidden","disableSortBy","Cell","row","original","sql_tables","tables","names","table","main","shift","Popover","trigger","content","created_on","createdOn","date","Date","utc","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","fromNow","changed_on_delta_humanized","changedOn","item","filters","input","operator","unfilteredLabel","fetchSelects","paginate","SubMenu","DeleteModal","description","onConfirm","handleQueryDelete","ConfirmStatusChange","queriesToDelete","message","confirmDelete","bulkActions","onSelect","ListView","count","data","pageSize","disableBulkSelect","highlightRowId","Loading"],"sourceRoot":""}