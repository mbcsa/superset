{"version":3,"file":"061d8fab733e28fb7bbd.chunk.js","mappings":"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","sources":["webpack://superset/./node_modules/match-sorter/dist/match-sorter.esm.js","webpack://superset/./node_modules/remove-accents/index.js","webpack://superset/./packages/superset-ui-core/src/utils/isDefined.ts","webpack://superset/./src/explore/exploreUtils/getParsedExploreURLParams.ts","webpack://superset/./src/components/CachedLabel/TooltipContent.tsx","webpack://superset/./src/components/CachedLabel/index.tsx","webpack://superset/./src/components/Timer/index.tsx","webpack://superset/./src/explore/components/ChartPills.tsx","webpack://superset/./src/explore/components/ExploreAlert.tsx","webpack://superset/./src/explore/components/ExploreChartPanel.jsx","webpack://superset/./src/explore/components/RunQueryButton/index.tsx","webpack://superset/./src/explore/components/ControlPanelsContainer.tsx","webpack://superset/./src/explore/components/SaveModal.tsx","webpack://superset/./src/explore/components/DatasourcePanel/DatasourcePanelDragOption/index.tsx","webpack://superset/./src/explore/components/DatasourcePanel/index.tsx","webpack://superset/./src/utils/getControlsForVizType.js","webpack://superset/./src/components/AlteredSliceTag/index.jsx","webpack://superset/./src/explore/components/ExploreChartHeader/index.jsx","webpack://superset/./src/explore/components/ExploreViewContainer/index.jsx","webpack://superset/./src/explore/fixtures.tsx","webpack://superset/./src/explore/ExplorePage.tsx","webpack://superset/./src/hooks/apiResources/charts.ts","webpack://superset/./src/hooks/apiResources/dashboards.ts"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport removeAccents from 'remove-accents';\n\nvar rankings = {\n  CASE_SENSITIVE_EQUAL: 7,\n  EQUAL: 6,\n  STARTS_WITH: 5,\n  WORD_STARTS_WITH: 4,\n  CONTAINS: 3,\n  ACRONYM: 2,\n  MATCHES: 1,\n  NO_MATCH: 0\n};\nmatchSorter.rankings = rankings;\n\nvar defaultBaseSortFn = function defaultBaseSortFn(a, b) {\n  return String(a.rankedValue).localeCompare(String(b.rankedValue));\n};\n/**\n * Takes an array of items and a value and returns a new array with the items that match the given value\n * @param {Array} items - the items to sort\n * @param {String} value - the value to use for ranking\n * @param {Object} options - Some options to configure the sorter\n * @return {Array} - the new sorted array\n */\n\n\nfunction matchSorter(items, value, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      keys = _options.keys,\n      _options$threshold = _options.threshold,\n      threshold = _options$threshold === void 0 ? rankings.MATCHES : _options$threshold,\n      _options$baseSort = _options.baseSort,\n      baseSort = _options$baseSort === void 0 ? defaultBaseSortFn : _options$baseSort,\n      _options$sorter = _options.sorter,\n      sorter = _options$sorter === void 0 ? function (matchedItems) {\n    return matchedItems.sort(function (a, b) {\n      return sortRankedValues(a, b, baseSort);\n    });\n  } : _options$sorter;\n  var matchedItems = items.reduce(reduceItemsToRanked, []);\n  return sorter(matchedItems).map(function (_ref) {\n    var item = _ref.item;\n    return item;\n  });\n\n  function reduceItemsToRanked(matches, item, index) {\n    var rankingInfo = getHighestRanking(item, keys, value, options);\n    var rank = rankingInfo.rank,\n        _rankingInfo$keyThres = rankingInfo.keyThreshold,\n        keyThreshold = _rankingInfo$keyThres === void 0 ? threshold : _rankingInfo$keyThres;\n\n    if (rank >= keyThreshold) {\n      matches.push(_extends({}, rankingInfo, {\n        item: item,\n        index: index\n      }));\n    }\n\n    return matches;\n  }\n}\n/**\n * Gets the highest ranking for value for the given item based on its values for the given keys\n * @param {*} item - the item to rank\n * @param {Array} keys - the keys to get values from the item for the ranking\n * @param {String} value - the value to rank against\n * @param {Object} options - options to control the ranking\n * @return {{rank: Number, keyIndex: Number, keyThreshold: Number}} - the highest ranking\n */\n\n\nfunction getHighestRanking(item, keys, value, options) {\n  if (!keys) {\n    // if keys is not specified, then we assume the item given is ready to be matched\n    var stringItem = item;\n    return {\n      // ends up being duplicate of 'item' in matches but consistent\n      rankedValue: stringItem,\n      rank: getMatchRanking(stringItem, value, options),\n      keyIndex: -1,\n      keyThreshold: options.threshold\n    };\n  }\n\n  var valuesToRank = getAllValuesToRank(item, keys);\n  return valuesToRank.reduce(function (_ref2, _ref3, i) {\n    var rank = _ref2.rank,\n        rankedValue = _ref2.rankedValue,\n        keyIndex = _ref2.keyIndex,\n        keyThreshold = _ref2.keyThreshold;\n    var itemValue = _ref3.itemValue,\n        attributes = _ref3.attributes;\n    var newRank = getMatchRanking(itemValue, value, options);\n    var newRankedValue = rankedValue;\n    var minRanking = attributes.minRanking,\n        maxRanking = attributes.maxRanking,\n        threshold = attributes.threshold;\n\n    if (newRank < minRanking && newRank >= rankings.MATCHES) {\n      newRank = minRanking;\n    } else if (newRank > maxRanking) {\n      newRank = maxRanking;\n    }\n\n    if (newRank > rank) {\n      rank = newRank;\n      keyIndex = i;\n      keyThreshold = threshold;\n      newRankedValue = itemValue;\n    }\n\n    return {\n      rankedValue: newRankedValue,\n      rank: rank,\n      keyIndex: keyIndex,\n      keyThreshold: keyThreshold\n    };\n  }, {\n    rankedValue: item,\n    rank: rankings.NO_MATCH,\n    keyIndex: -1,\n    keyThreshold: options.threshold\n  });\n}\n/**\n * Gives a rankings score based on how well the two strings match.\n * @param {String} testString - the string to test against\n * @param {String} stringToRank - the string to rank\n * @param {Object} options - options for the match (like keepDiacritics for comparison)\n * @returns {Number} the ranking for how well stringToRank matches testString\n */\n\n\nfunction getMatchRanking(testString, stringToRank, options) {\n  testString = prepareValueForComparison(testString, options);\n  stringToRank = prepareValueForComparison(stringToRank, options); // too long\n\n  if (stringToRank.length > testString.length) {\n    return rankings.NO_MATCH;\n  } // case sensitive equals\n\n\n  if (testString === stringToRank) {\n    return rankings.CASE_SENSITIVE_EQUAL;\n  } // Lower casing before further comparison\n\n\n  testString = testString.toLowerCase();\n  stringToRank = stringToRank.toLowerCase(); // case insensitive equals\n\n  if (testString === stringToRank) {\n    return rankings.EQUAL;\n  } // starts with\n\n\n  if (testString.startsWith(stringToRank)) {\n    return rankings.STARTS_WITH;\n  } // word starts with\n\n\n  if (testString.includes(\" \" + stringToRank)) {\n    return rankings.WORD_STARTS_WITH;\n  } // contains\n\n\n  if (testString.includes(stringToRank)) {\n    return rankings.CONTAINS;\n  } else if (stringToRank.length === 1) {\n    // If the only character in the given stringToRank\n    //   isn't even contained in the testString, then\n    //   it's definitely not a match.\n    return rankings.NO_MATCH;\n  } // acronym\n\n\n  if (getAcronym(testString).includes(stringToRank)) {\n    return rankings.ACRONYM;\n  } // will return a number between rankings.MATCHES and\n  // rankings.MATCHES + 1 depending  on how close of a match it is.\n\n\n  return getClosenessRanking(testString, stringToRank);\n}\n/**\n * Generates an acronym for a string.\n *\n * @param {String} string the string for which to produce the acronym\n * @returns {String} the acronym\n */\n\n\nfunction getAcronym(string) {\n  var acronym = '';\n  var wordsInString = string.split(' ');\n  wordsInString.forEach(function (wordInString) {\n    var splitByHyphenWords = wordInString.split('-');\n    splitByHyphenWords.forEach(function (splitByHyphenWord) {\n      acronym += splitByHyphenWord.substr(0, 1);\n    });\n  });\n  return acronym;\n}\n/**\n * Returns a score based on how spread apart the\n * characters from the stringToRank are within the testString.\n * A number close to rankings.MATCHES represents a loose match. A number close\n * to rankings.MATCHES + 1 represents a tighter match.\n * @param {String} testString - the string to test against\n * @param {String} stringToRank - the string to rank\n * @returns {Number} the number between rankings.MATCHES and\n * rankings.MATCHES + 1 for how well stringToRank matches testString\n */\n\n\nfunction getClosenessRanking(testString, stringToRank) {\n  var matchingInOrderCharCount = 0;\n  var charNumber = 0;\n\n  function findMatchingCharacter(matchChar, string, index) {\n    for (var j = index, J = string.length; j < J; j++) {\n      var stringChar = string[j];\n\n      if (stringChar === matchChar) {\n        matchingInOrderCharCount += 1;\n        return j + 1;\n      }\n    }\n\n    return -1;\n  }\n\n  function getRanking(spread) {\n    var spreadPercentage = 1 / spread;\n    var inOrderPercentage = matchingInOrderCharCount / stringToRank.length;\n    var ranking = rankings.MATCHES + inOrderPercentage * spreadPercentage;\n    return ranking;\n  }\n\n  var firstIndex = findMatchingCharacter(stringToRank[0], testString, 0);\n\n  if (firstIndex < 0) {\n    return rankings.NO_MATCH;\n  }\n\n  charNumber = firstIndex;\n\n  for (var i = 1, I = stringToRank.length; i < I; i++) {\n    var matchChar = stringToRank[i];\n    charNumber = findMatchingCharacter(matchChar, testString, charNumber);\n    var found = charNumber > -1;\n\n    if (!found) {\n      return rankings.NO_MATCH;\n    }\n  }\n\n  var spread = charNumber - firstIndex;\n  return getRanking(spread);\n}\n/**\n * Sorts items that have a rank, index, and keyIndex\n * @param {Object} a - the first item to sort\n * @param {Object} b - the second item to sort\n * @return {Number} -1 if a should come first, 1 if b should come first, 0 if equal\n */\n\n\nfunction sortRankedValues(a, b, baseSort) {\n  var aFirst = -1;\n  var bFirst = 1;\n  var aRank = a.rank,\n      aKeyIndex = a.keyIndex;\n  var bRank = b.rank,\n      bKeyIndex = b.keyIndex;\n  var same = aRank === bRank;\n\n  if (same) {\n    if (aKeyIndex === bKeyIndex) {\n      // use the base sort function as a tie-breaker\n      return baseSort(a, b);\n    } else {\n      return aKeyIndex < bKeyIndex ? aFirst : bFirst;\n    }\n  } else {\n    return aRank > bRank ? aFirst : bFirst;\n  }\n}\n/**\n * Prepares value for comparison by stringifying it, removing diacritics (if specified)\n * @param {String} value - the value to clean\n * @param {Object} options - {keepDiacritics: whether to remove diacritics}\n * @return {String} the prepared value\n */\n\n\nfunction prepareValueForComparison(value, _ref4) {\n  var keepDiacritics = _ref4.keepDiacritics;\n  // value might not actually be a string at this point (we don't get to choose)\n  // so part of preparing the value for comparison is ensure that it is a string\n  value = \"\" + value; // toString\n\n  if (!keepDiacritics) {\n    value = removeAccents(value);\n  }\n\n  return value;\n}\n/**\n * Gets value for key in item at arbitrarily nested keypath\n * @param {Object} item - the item\n * @param {Object|Function} key - the potentially nested keypath or property callback\n * @return {Array} - an array containing the value(s) at the nested keypath\n */\n\n\nfunction getItemValues(item, key) {\n  if (typeof key === 'object') {\n    key = key.key;\n  }\n\n  var value;\n\n  if (typeof key === 'function') {\n    value = key(item);\n  } else if (item == null) {\n    value = null;\n  } else if (Object.hasOwnProperty.call(item, key)) {\n    value = item[key];\n  } else if (key.includes('.')) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n    return getNestedValues(key, item);\n  } else {\n    value = null;\n  } // because `value` can also be undefined\n\n\n  if (value == null) {\n    return [];\n  }\n\n  if (Array.isArray(value)) {\n    return value;\n  }\n\n  return [String(value)];\n}\n/**\n * Given path: \"foo.bar.baz\"\n * And item: {foo: {bar: {baz: 'buzz'}}}\n *   -> 'buzz'\n * @param path a dot-separated set of keys\n * @param item the item to get the value from\n */\n\n\nfunction getNestedValues(path, item) {\n  var keys = path.split('.');\n  var values = [item];\n\n  for (var i = 0, I = keys.length; i < I; i++) {\n    var nestedKey = keys[i];\n    var nestedValues = [];\n\n    for (var j = 0, J = values.length; j < J; j++) {\n      var nestedItem = values[j];\n      if (nestedItem == null) continue;\n\n      if (Object.hasOwnProperty.call(nestedItem, nestedKey)) {\n        var nestedValue = nestedItem[nestedKey];\n\n        if (nestedValue != null) {\n          nestedValues.push(nestedValue);\n        }\n      } else if (nestedKey === '*') {\n        // ensure that values is an array\n        nestedValues = nestedValues.concat(nestedItem);\n      }\n    }\n\n    values = nestedValues;\n  }\n\n  if (Array.isArray(values[0])) {\n    // keep allowing the implicit wildcard for an array of strings at the end of\n    // the path; don't use `.flat()` because that's not available in node.js v10\n    var result = [];\n    return result.concat.apply(result, values);\n  } // Based on our logic it should be an array of strings by now...\n  // assuming the user's path terminated in strings\n\n\n  return values;\n}\n/**\n * Gets all the values for the given keys in the given item and returns an array of those values\n * @param item - the item from which the values will be retrieved\n * @param keys - the keys to use to retrieve the values\n * @return objects with {itemValue, attributes}\n */\n\n\nfunction getAllValuesToRank(item, keys) {\n  var allValues = [];\n\n  for (var j = 0, J = keys.length; j < J; j++) {\n    var key = keys[j];\n    var attributes = getKeyAttributes(key);\n    var itemValues = getItemValues(item, key);\n\n    for (var i = 0, I = itemValues.length; i < I; i++) {\n      allValues.push({\n        itemValue: itemValues[i],\n        attributes: attributes\n      });\n    }\n  }\n\n  return allValues;\n}\n\nvar defaultKeyAttributes = {\n  maxRanking: Infinity,\n  minRanking: -Infinity\n};\n/**\n * Gets all the attributes for the given key\n * @param key - the key from which the attributes will be retrieved\n * @return object containing the key's attributes\n */\n\nfunction getKeyAttributes(key) {\n  if (typeof key === 'string') {\n    return defaultKeyAttributes;\n  }\n\n  return _extends({}, defaultKeyAttributes, key);\n}\n/*\neslint\n  no-continue: \"off\",\n*/\n\nexport { defaultBaseSortFn, matchSorter, rankings };\n","var characterMap = {\r\n\t\"À\": \"A\",\r\n\t\"Á\": \"A\",\r\n\t\"Â\": \"A\",\r\n\t\"Ã\": \"A\",\r\n\t\"Ä\": \"A\",\r\n\t\"Å\": \"A\",\r\n\t\"Ấ\": \"A\",\r\n\t\"Ắ\": \"A\",\r\n\t\"Ẳ\": \"A\",\r\n\t\"Ẵ\": \"A\",\r\n\t\"Ặ\": \"A\",\r\n\t\"Æ\": \"AE\",\r\n\t\"Ầ\": \"A\",\r\n\t\"Ằ\": \"A\",\r\n\t\"Ȃ\": \"A\",\r\n\t\"Ç\": \"C\",\r\n\t\"Ḉ\": \"C\",\r\n\t\"È\": \"E\",\r\n\t\"É\": \"E\",\r\n\t\"Ê\": \"E\",\r\n\t\"Ë\": \"E\",\r\n\t\"Ế\": \"E\",\r\n\t\"Ḗ\": \"E\",\r\n\t\"Ề\": \"E\",\r\n\t\"Ḕ\": \"E\",\r\n\t\"Ḝ\": \"E\",\r\n\t\"Ȇ\": \"E\",\r\n\t\"Ì\": \"I\",\r\n\t\"Í\": \"I\",\r\n\t\"Î\": \"I\",\r\n\t\"Ï\": \"I\",\r\n\t\"Ḯ\": \"I\",\r\n\t\"Ȋ\": \"I\",\r\n\t\"Ð\": \"D\",\r\n\t\"Ñ\": \"N\",\r\n\t\"Ò\": \"O\",\r\n\t\"Ó\": \"O\",\r\n\t\"Ô\": \"O\",\r\n\t\"Õ\": \"O\",\r\n\t\"Ö\": \"O\",\r\n\t\"Ø\": \"O\",\r\n\t\"Ố\": \"O\",\r\n\t\"Ṍ\": \"O\",\r\n\t\"Ṓ\": \"O\",\r\n\t\"Ȏ\": \"O\",\r\n\t\"Ù\": \"U\",\r\n\t\"Ú\": \"U\",\r\n\t\"Û\": \"U\",\r\n\t\"Ü\": \"U\",\r\n\t\"Ý\": \"Y\",\r\n\t\"à\": \"a\",\r\n\t\"á\": \"a\",\r\n\t\"â\": \"a\",\r\n\t\"ã\": \"a\",\r\n\t\"ä\": \"a\",\r\n\t\"å\": \"a\",\r\n\t\"ấ\": \"a\",\r\n\t\"ắ\": \"a\",\r\n\t\"ẳ\": \"a\",\r\n\t\"ẵ\": \"a\",\r\n\t\"ặ\": \"a\",\r\n\t\"æ\": \"ae\",\r\n\t\"ầ\": \"a\",\r\n\t\"ằ\": \"a\",\r\n\t\"ȃ\": \"a\",\r\n\t\"ç\": \"c\",\r\n\t\"ḉ\": \"c\",\r\n\t\"è\": \"e\",\r\n\t\"é\": \"e\",\r\n\t\"ê\": \"e\",\r\n\t\"ë\": \"e\",\r\n\t\"ế\": \"e\",\r\n\t\"ḗ\": \"e\",\r\n\t\"ề\": \"e\",\r\n\t\"ḕ\": \"e\",\r\n\t\"ḝ\": \"e\",\r\n\t\"ȇ\": \"e\",\r\n\t\"ì\": \"i\",\r\n\t\"í\": \"i\",\r\n\t\"î\": \"i\",\r\n\t\"ï\": \"i\",\r\n\t\"ḯ\": \"i\",\r\n\t\"ȋ\": \"i\",\r\n\t\"ð\": \"d\",\r\n\t\"ñ\": \"n\",\r\n\t\"ò\": \"o\",\r\n\t\"ó\": \"o\",\r\n\t\"ô\": \"o\",\r\n\t\"õ\": \"o\",\r\n\t\"ö\": \"o\",\r\n\t\"ø\": \"o\",\r\n\t\"ố\": \"o\",\r\n\t\"ṍ\": \"o\",\r\n\t\"ṓ\": \"o\",\r\n\t\"ȏ\": \"o\",\r\n\t\"ù\": \"u\",\r\n\t\"ú\": \"u\",\r\n\t\"û\": \"u\",\r\n\t\"ü\": \"u\",\r\n\t\"ý\": \"y\",\r\n\t\"ÿ\": \"y\",\r\n\t\"Ā\": \"A\",\r\n\t\"ā\": \"a\",\r\n\t\"Ă\": \"A\",\r\n\t\"ă\": \"a\",\r\n\t\"Ą\": \"A\",\r\n\t\"ą\": \"a\",\r\n\t\"Ć\": \"C\",\r\n\t\"ć\": \"c\",\r\n\t\"Ĉ\": \"C\",\r\n\t\"ĉ\": \"c\",\r\n\t\"Ċ\": \"C\",\r\n\t\"ċ\": \"c\",\r\n\t\"Č\": \"C\",\r\n\t\"č\": \"c\",\r\n\t\"C̆\": \"C\",\r\n\t\"c̆\": \"c\",\r\n\t\"Ď\": \"D\",\r\n\t\"ď\": \"d\",\r\n\t\"Đ\": \"D\",\r\n\t\"đ\": \"d\",\r\n\t\"Ē\": \"E\",\r\n\t\"ē\": \"e\",\r\n\t\"Ĕ\": \"E\",\r\n\t\"ĕ\": \"e\",\r\n\t\"Ė\": \"E\",\r\n\t\"ė\": \"e\",\r\n\t\"Ę\": \"E\",\r\n\t\"ę\": \"e\",\r\n\t\"Ě\": \"E\",\r\n\t\"ě\": \"e\",\r\n\t\"Ĝ\": \"G\",\r\n\t\"Ǵ\": \"G\",\r\n\t\"ĝ\": \"g\",\r\n\t\"ǵ\": \"g\",\r\n\t\"Ğ\": \"G\",\r\n\t\"ğ\": \"g\",\r\n\t\"Ġ\": \"G\",\r\n\t\"ġ\": \"g\",\r\n\t\"Ģ\": \"G\",\r\n\t\"ģ\": \"g\",\r\n\t\"Ĥ\": \"H\",\r\n\t\"ĥ\": \"h\",\r\n\t\"Ħ\": \"H\",\r\n\t\"ħ\": \"h\",\r\n\t\"Ḫ\": \"H\",\r\n\t\"ḫ\": \"h\",\r\n\t\"Ĩ\": \"I\",\r\n\t\"ĩ\": \"i\",\r\n\t\"Ī\": \"I\",\r\n\t\"ī\": \"i\",\r\n\t\"Ĭ\": \"I\",\r\n\t\"ĭ\": \"i\",\r\n\t\"Į\": \"I\",\r\n\t\"į\": \"i\",\r\n\t\"İ\": \"I\",\r\n\t\"ı\": \"i\",\r\n\t\"Ĳ\": \"IJ\",\r\n\t\"ĳ\": \"ij\",\r\n\t\"Ĵ\": \"J\",\r\n\t\"ĵ\": \"j\",\r\n\t\"Ķ\": \"K\",\r\n\t\"ķ\": \"k\",\r\n\t\"Ḱ\": \"K\",\r\n\t\"ḱ\": \"k\",\r\n\t\"K̆\": \"K\",\r\n\t\"k̆\": \"k\",\r\n\t\"Ĺ\": \"L\",\r\n\t\"ĺ\": \"l\",\r\n\t\"Ļ\": \"L\",\r\n\t\"ļ\": \"l\",\r\n\t\"Ľ\": \"L\",\r\n\t\"ľ\": \"l\",\r\n\t\"Ŀ\": \"L\",\r\n\t\"ŀ\": \"l\",\r\n\t\"Ł\": \"l\",\r\n\t\"ł\": \"l\",\r\n\t\"Ḿ\": \"M\",\r\n\t\"ḿ\": \"m\",\r\n\t\"M̆\": \"M\",\r\n\t\"m̆\": \"m\",\r\n\t\"Ń\": \"N\",\r\n\t\"ń\": \"n\",\r\n\t\"Ņ\": \"N\",\r\n\t\"ņ\": \"n\",\r\n\t\"Ň\": \"N\",\r\n\t\"ň\": \"n\",\r\n\t\"ŉ\": \"n\",\r\n\t\"N̆\": \"N\",\r\n\t\"n̆\": \"n\",\r\n\t\"Ō\": \"O\",\r\n\t\"ō\": \"o\",\r\n\t\"Ŏ\": \"O\",\r\n\t\"ŏ\": \"o\",\r\n\t\"Ő\": \"O\",\r\n\t\"ő\": \"o\",\r\n\t\"Œ\": \"OE\",\r\n\t\"œ\": \"oe\",\r\n\t\"P̆\": \"P\",\r\n\t\"p̆\": \"p\",\r\n\t\"Ŕ\": \"R\",\r\n\t\"ŕ\": \"r\",\r\n\t\"Ŗ\": \"R\",\r\n\t\"ŗ\": \"r\",\r\n\t\"Ř\": \"R\",\r\n\t\"ř\": \"r\",\r\n\t\"R̆\": \"R\",\r\n\t\"r̆\": \"r\",\r\n\t\"Ȓ\": \"R\",\r\n\t\"ȓ\": \"r\",\r\n\t\"Ś\": \"S\",\r\n\t\"ś\": \"s\",\r\n\t\"Ŝ\": \"S\",\r\n\t\"ŝ\": \"s\",\r\n\t\"Ş\": \"S\",\r\n\t\"Ș\": \"S\",\r\n\t\"ș\": \"s\",\r\n\t\"ş\": \"s\",\r\n\t\"Š\": \"S\",\r\n\t\"š\": \"s\",\r\n\t\"Ţ\": \"T\",\r\n\t\"ţ\": \"t\",\r\n\t\"ț\": \"t\",\r\n\t\"Ț\": \"T\",\r\n\t\"Ť\": \"T\",\r\n\t\"ť\": \"t\",\r\n\t\"Ŧ\": \"T\",\r\n\t\"ŧ\": \"t\",\r\n\t\"T̆\": \"T\",\r\n\t\"t̆\": \"t\",\r\n\t\"Ũ\": \"U\",\r\n\t\"ũ\": \"u\",\r\n\t\"Ū\": \"U\",\r\n\t\"ū\": \"u\",\r\n\t\"Ŭ\": \"U\",\r\n\t\"ŭ\": \"u\",\r\n\t\"Ů\": \"U\",\r\n\t\"ů\": \"u\",\r\n\t\"Ű\": \"U\",\r\n\t\"ű\": \"u\",\r\n\t\"Ų\": \"U\",\r\n\t\"ų\": \"u\",\r\n\t\"Ȗ\": \"U\",\r\n\t\"ȗ\": \"u\",\r\n\t\"V̆\": \"V\",\r\n\t\"v̆\": \"v\",\r\n\t\"Ŵ\": \"W\",\r\n\t\"ŵ\": \"w\",\r\n\t\"Ẃ\": \"W\",\r\n\t\"ẃ\": \"w\",\r\n\t\"X̆\": \"X\",\r\n\t\"x̆\": \"x\",\r\n\t\"Ŷ\": \"Y\",\r\n\t\"ŷ\": \"y\",\r\n\t\"Ÿ\": \"Y\",\r\n\t\"Y̆\": \"Y\",\r\n\t\"y̆\": \"y\",\r\n\t\"Ź\": \"Z\",\r\n\t\"ź\": \"z\",\r\n\t\"Ż\": \"Z\",\r\n\t\"ż\": \"z\",\r\n\t\"Ž\": \"Z\",\r\n\t\"ž\": \"z\",\r\n\t\"ſ\": \"s\",\r\n\t\"ƒ\": \"f\",\r\n\t\"Ơ\": \"O\",\r\n\t\"ơ\": \"o\",\r\n\t\"Ư\": \"U\",\r\n\t\"ư\": \"u\",\r\n\t\"Ǎ\": \"A\",\r\n\t\"ǎ\": \"a\",\r\n\t\"Ǐ\": \"I\",\r\n\t\"ǐ\": \"i\",\r\n\t\"Ǒ\": \"O\",\r\n\t\"ǒ\": \"o\",\r\n\t\"Ǔ\": \"U\",\r\n\t\"ǔ\": \"u\",\r\n\t\"Ǖ\": \"U\",\r\n\t\"ǖ\": \"u\",\r\n\t\"Ǘ\": \"U\",\r\n\t\"ǘ\": \"u\",\r\n\t\"Ǚ\": \"U\",\r\n\t\"ǚ\": \"u\",\r\n\t\"Ǜ\": \"U\",\r\n\t\"ǜ\": \"u\",\r\n\t\"Ứ\": \"U\",\r\n\t\"ứ\": \"u\",\r\n\t\"Ṹ\": \"U\",\r\n\t\"ṹ\": \"u\",\r\n\t\"Ǻ\": \"A\",\r\n\t\"ǻ\": \"a\",\r\n\t\"Ǽ\": \"AE\",\r\n\t\"ǽ\": \"ae\",\r\n\t\"Ǿ\": \"O\",\r\n\t\"ǿ\": \"o\",\r\n\t\"Þ\": \"TH\",\r\n\t\"þ\": \"th\",\r\n\t\"Ṕ\": \"P\",\r\n\t\"ṕ\": \"p\",\r\n\t\"Ṥ\": \"S\",\r\n\t\"ṥ\": \"s\",\r\n\t\"X́\": \"X\",\r\n\t\"x́\": \"x\",\r\n\t\"Ѓ\": \"Г\",\r\n\t\"ѓ\": \"г\",\r\n\t\"Ќ\": \"К\",\r\n\t\"ќ\": \"к\",\r\n\t\"A̋\": \"A\",\r\n\t\"a̋\": \"a\",\r\n\t\"E̋\": \"E\",\r\n\t\"e̋\": \"e\",\r\n\t\"I̋\": \"I\",\r\n\t\"i̋\": \"i\",\r\n\t\"Ǹ\": \"N\",\r\n\t\"ǹ\": \"n\",\r\n\t\"Ồ\": \"O\",\r\n\t\"ồ\": \"o\",\r\n\t\"Ṑ\": \"O\",\r\n\t\"ṑ\": \"o\",\r\n\t\"Ừ\": \"U\",\r\n\t\"ừ\": \"u\",\r\n\t\"Ẁ\": \"W\",\r\n\t\"ẁ\": \"w\",\r\n\t\"Ỳ\": \"Y\",\r\n\t\"ỳ\": \"y\",\r\n\t\"Ȁ\": \"A\",\r\n\t\"ȁ\": \"a\",\r\n\t\"Ȅ\": \"E\",\r\n\t\"ȅ\": \"e\",\r\n\t\"Ȉ\": \"I\",\r\n\t\"ȉ\": \"i\",\r\n\t\"Ȍ\": \"O\",\r\n\t\"ȍ\": \"o\",\r\n\t\"Ȑ\": \"R\",\r\n\t\"ȑ\": \"r\",\r\n\t\"Ȕ\": \"U\",\r\n\t\"ȕ\": \"u\",\r\n\t\"B̌\": \"B\",\r\n\t\"b̌\": \"b\",\r\n\t\"Č̣\": \"C\",\r\n\t\"č̣\": \"c\",\r\n\t\"Ê̌\": \"E\",\r\n\t\"ê̌\": \"e\",\r\n\t\"F̌\": \"F\",\r\n\t\"f̌\": \"f\",\r\n\t\"Ǧ\": \"G\",\r\n\t\"ǧ\": \"g\",\r\n\t\"Ȟ\": \"H\",\r\n\t\"ȟ\": \"h\",\r\n\t\"J̌\": \"J\",\r\n\t\"ǰ\": \"j\",\r\n\t\"Ǩ\": \"K\",\r\n\t\"ǩ\": \"k\",\r\n\t\"M̌\": \"M\",\r\n\t\"m̌\": \"m\",\r\n\t\"P̌\": \"P\",\r\n\t\"p̌\": \"p\",\r\n\t\"Q̌\": \"Q\",\r\n\t\"q̌\": \"q\",\r\n\t\"Ř̩\": \"R\",\r\n\t\"ř̩\": \"r\",\r\n\t\"Ṧ\": \"S\",\r\n\t\"ṧ\": \"s\",\r\n\t\"V̌\": \"V\",\r\n\t\"v̌\": \"v\",\r\n\t\"W̌\": \"W\",\r\n\t\"w̌\": \"w\",\r\n\t\"X̌\": \"X\",\r\n\t\"x̌\": \"x\",\r\n\t\"Y̌\": \"Y\",\r\n\t\"y̌\": \"y\",\r\n\t\"A̧\": \"A\",\r\n\t\"a̧\": \"a\",\r\n\t\"B̧\": \"B\",\r\n\t\"b̧\": \"b\",\r\n\t\"Ḑ\": \"D\",\r\n\t\"ḑ\": \"d\",\r\n\t\"Ȩ\": \"E\",\r\n\t\"ȩ\": \"e\",\r\n\t\"Ɛ̧\": \"E\",\r\n\t\"ɛ̧\": \"e\",\r\n\t\"Ḩ\": \"H\",\r\n\t\"ḩ\": \"h\",\r\n\t\"I̧\": \"I\",\r\n\t\"i̧\": \"i\",\r\n\t\"Ɨ̧\": \"I\",\r\n\t\"ɨ̧\": \"i\",\r\n\t\"M̧\": \"M\",\r\n\t\"m̧\": \"m\",\r\n\t\"O̧\": \"O\",\r\n\t\"o̧\": \"o\",\r\n\t\"Q̧\": \"Q\",\r\n\t\"q̧\": \"q\",\r\n\t\"U̧\": \"U\",\r\n\t\"u̧\": \"u\",\r\n\t\"X̧\": \"X\",\r\n\t\"x̧\": \"x\",\r\n\t\"Z̧\": \"Z\",\r\n\t\"z̧\": \"z\",\r\n};\r\n\r\nvar chars = Object.keys(characterMap).join('|');\r\nvar allAccents = new RegExp(chars, 'g');\r\nvar firstAccent = new RegExp(chars, '');\r\n\r\nvar removeAccents = function(string) {\t\r\n\treturn string.replace(allAccents, function(match) {\r\n\t\treturn characterMap[match];\r\n\t});\r\n};\r\n\r\nvar hasAccents = function(string) {\r\n\treturn !!string.match(firstAccent);\r\n};\r\n\r\nmodule.exports = removeAccents;\r\nmodule.exports.has = hasAccents;\r\nmodule.exports.remove = removeAccents;\r\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nexport default function isDefined(x: unknown) {\n  return x !== null && x !== undefined;\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nexport interface Location {\n  search: string;\n  pathname: string;\n}\n\n// mapping { url_param: v1_explore_request_param }\nconst EXPLORE_URL_SEARCH_PARAMS = {\n  form_data: {\n    name: 'form_data',\n    parser: (formData: string) => {\n      const formDataObject = JSON.parse(formData);\n      if (formDataObject.datasource) {\n        const [dataset_id, dataset_type] =\n          formDataObject.datasource.split('__');\n        formDataObject.dataset_id = dataset_id;\n        formDataObject.dataset_type = dataset_type;\n        delete formDataObject.datasource;\n      }\n      return formDataObject;\n    },\n  },\n  slice_id: {\n    name: 'slice_id',\n  },\n  dataset_id: {\n    name: 'dataset_id',\n  },\n  dataset_type: {\n    name: 'dataset_type',\n  },\n  datasource: {\n    name: 'datasource',\n    parser: (datasource: string) => {\n      const [dataset_id, dataset_type] = datasource.split('__');\n      return { dataset_id, dataset_type };\n    },\n  },\n  form_data_key: {\n    name: 'form_data_key',\n  },\n  permalink_key: {\n    name: 'permalink_key',\n  },\n  viz_type: {\n    name: 'viz_type',\n  },\n  dashboard_id: {\n    name: 'dashboard_id',\n  },\n};\n\nconst EXPLORE_URL_PATH_PARAMS = {\n  p: 'permalink_key', // permalink\n  table: 'dataset_id',\n};\n\n// search params can be placed in form_data object\n// we need to \"flatten\" the search params to use them with /v1/explore endpoint\nconst getParsedExploreURLSearchParams = (search: string) => {\n  const urlSearchParams = new URLSearchParams(search);\n  return Object.keys(EXPLORE_URL_SEARCH_PARAMS).reduce((acc, currentParam) => {\n    const paramValue = urlSearchParams.get(currentParam);\n    if (paramValue === null) {\n      return acc;\n    }\n    let parsedParamValue;\n    try {\n      parsedParamValue =\n        EXPLORE_URL_SEARCH_PARAMS[currentParam].parser?.(paramValue) ??\n        paramValue;\n    } catch {\n      parsedParamValue = paramValue;\n    }\n    if (typeof parsedParamValue === 'object') {\n      return { ...acc, ...parsedParamValue };\n    }\n    return {\n      ...acc,\n      [EXPLORE_URL_SEARCH_PARAMS[currentParam].name]: parsedParamValue,\n    };\n  }, {});\n};\n\n// path params need to be transformed to search params to use them with /v1/explore endpoint\nconst getParsedExploreURLPathParams = (pathname: string) =>\n  Object.keys(EXPLORE_URL_PATH_PARAMS).reduce((acc, currentParam) => {\n    const re = new RegExp(`/(${currentParam})/(\\\\w+)`);\n    const pathGroups = pathname.match(re);\n    if (pathGroups && pathGroups[2]) {\n      return { ...acc, [EXPLORE_URL_PATH_PARAMS[currentParam]]: pathGroups[2] };\n    }\n    return acc;\n  }, {});\n\nexport const getParsedExploreURLParams = (\n  location: Location = window.location,\n) =>\n  new URLSearchParams(\n    Object.entries({\n      ...getParsedExploreURLSearchParams(location.search),\n      ...getParsedExploreURLPathParams(location.pathname),\n    })\n      .map(entry => entry.join('='))\n      .join('&'),\n  );\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport moment from 'moment';\nimport { t } from '@superset-ui/core';\n\ninterface Props {\n  cachedTimestamp?: string;\n}\nexport const TooltipContent: React.FC<Props> = ({ cachedTimestamp }) => {\n  const cachedText = cachedTimestamp ? (\n    <span>\n      {t('Loaded data cached')}\n      <b> {moment.utc(cachedTimestamp).fromNow()}</b>\n    </span>\n  ) : (\n    t('Loaded from cache')\n  );\n\n  return (\n    <span data-test=\"tooltip-content\">\n      {cachedText}. {t('Click to force-refresh')}\n    </span>\n  );\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { t } from '@superset-ui/core';\nimport Label from 'src/components/Label';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { TooltipContent } from './TooltipContent';\n\nexport interface CacheLabelProps {\n  onClick?: React.MouseEventHandler<HTMLElement>;\n  cachedTimestamp?: string;\n  className?: string;\n}\n\nconst CacheLabel: React.FC<CacheLabelProps> = ({\n  className,\n  onClick,\n  cachedTimestamp,\n}) => {\n  const [hovered, setHovered] = useState(false);\n\n  const labelType = hovered ? 'primary' : 'default';\n  return (\n    <Tooltip\n      title={<TooltipContent cachedTimestamp={cachedTimestamp} />}\n      id=\"cache-desc-tooltip\"\n    >\n      <Label\n        className={`${className}`}\n        type={labelType}\n        onClick={onClick}\n        onMouseOver={() => setHovered(true)}\n        onMouseOut={() => setHovered(false)}\n      >\n        {t('Cached')} <i className=\"fa fa-refresh\" />\n      </Label>\n    </Tooltip>\n  );\n};\n\nexport default CacheLabel;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { styled } from '@superset-ui/core';\nimport Label, { Type } from 'src/components/Label';\n\nimport { now, fDuration } from 'src/utils/dates';\n\nexport interface TimerProps {\n  endTime?: number;\n  isRunning: boolean;\n  startTime?: number;\n  status?: Type;\n}\n\nconst TimerLabel = styled(Label)`\n  text-align: left;\n`;\n\nexport default function Timer({\n  endTime,\n  isRunning,\n  startTime,\n  status = 'success',\n}: TimerProps) {\n  const [clockStr, setClockStr] = useState('00:00:00.00');\n  const timer = useRef<ReturnType<typeof setInterval>>();\n\n  useEffect(() => {\n    const stopTimer = () => {\n      if (timer.current) {\n        clearInterval(timer.current);\n        timer.current = undefined;\n      }\n    };\n\n    if (isRunning) {\n      timer.current = setInterval(() => {\n        if (startTime) {\n          const endDttm = endTime || now();\n          if (startTime < endDttm) {\n            setClockStr(fDuration(startTime, endDttm));\n          }\n          if (!isRunning) {\n            stopTimer();\n          }\n        }\n      }, 30);\n    }\n    return stopTimer;\n  }, [endTime, isRunning, startTime]);\n\n  return (\n    <TimerLabel type={status} role=\"timer\">\n      {clockStr}\n    </TimerLabel>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { forwardRef, RefObject } from 'react';\nimport { css, QueryData, SupersetTheme } from '@superset-ui/core';\nimport RowCountLabel from 'src/explore/components/RowCountLabel';\nimport CachedLabel from 'src/components/CachedLabel';\nimport Timer from 'src/components/Timer';\n\nenum CHART_STATUS_MAP {\n  failed = 'danger',\n  loading = 'warning',\n  success = 'success',\n}\n\nexport type ChartPillsProps = {\n  queriesResponse: QueryData[];\n  chartStatus: keyof typeof CHART_STATUS_MAP;\n  chartUpdateStartTime: number;\n  chartUpdateEndTime: number;\n  refreshCachedQuery: () => void;\n  rowLimit: string | number;\n};\n\nexport const ChartPills = forwardRef(\n  (\n    {\n      queriesResponse,\n      chartStatus,\n      chartUpdateStartTime,\n      chartUpdateEndTime,\n      refreshCachedQuery,\n      rowLimit,\n    }: ChartPillsProps,\n    ref: RefObject<HTMLDivElement>,\n  ) => {\n    const isLoading = chartStatus === 'loading';\n    const firstQueryResponse = queriesResponse?.[0];\n    return (\n      <div ref={ref}>\n        <div\n          css={(theme: SupersetTheme) => css`\n            display: flex;\n            justify-content: flex-end;\n            padding-bottom: ${theme.gridUnit * 4}px;\n            & .ant-tag:last-of-type {\n              margin: 0;\n            }\n          `}\n        >\n          {!isLoading && firstQueryResponse && (\n            <RowCountLabel\n              rowcount={Number(firstQueryResponse.rowcount) || 0}\n              limit={Number(rowLimit) || 0}\n            />\n          )}\n          {!isLoading && firstQueryResponse?.is_cached && (\n            <CachedLabel\n              onClick={refreshCachedQuery}\n              cachedTimestamp={firstQueryResponse.cached_dttm}\n            />\n          )}\n          <Timer\n            startTime={chartUpdateStartTime}\n            endTime={chartUpdateEndTime}\n            isRunning={isLoading}\n            status={CHART_STATUS_MAP[chartStatus]}\n          />\n        </div>\n      </div>\n    );\n  },\n);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { forwardRef, RefObject } from 'react';\nimport { css, styled } from '@superset-ui/core';\nimport Button from 'src/components/Button';\n\ninterface ControlPanelAlertProps {\n  title: string;\n  bodyText: string;\n  primaryButtonAction?: (e: React.MouseEvent) => void;\n  secondaryButtonAction?: (e: React.MouseEvent) => void;\n  primaryButtonText?: string;\n  secondaryButtonText?: string;\n  type: 'info' | 'warning' | 'error';\n  className?: string;\n}\n\nconst AlertContainer = styled.div`\n  ${({ theme }) => css`\n    margin: ${theme.gridUnit * 4}px;\n    padding: ${theme.gridUnit * 4}px;\n\n    border: 1px solid ${theme.colors.info.base};\n    background-color: ${theme.colors.info.light2};\n    border-radius: 2px;\n\n    color: ${theme.colors.info.dark2};\n    font-size: ${theme.typography.sizes.m}px;\n\n    p {\n      margin-bottom: ${theme.gridUnit}px;\n    }\n\n    & a,\n    & span[role='button'] {\n      color: inherit;\n      text-decoration: underline;\n      &:hover {\n        color: ${theme.colors.info.dark1};\n      }\n    }\n\n    &.alert-type-warning {\n      border-color: ${theme.colors.alert.base};\n      background-color: ${theme.colors.alert.light2};\n\n      p {\n        color: ${theme.colors.alert.dark2};\n      }\n\n      & a:hover,\n      & span[role='button']:hover {\n        color: ${theme.colors.alert.dark1};\n      }\n    }\n  `}\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  button {\n    line-height: 1;\n  }\n`;\n\nconst Title = styled.p`\n  font-weight: ${({ theme }) => theme.typography.weights.bold};\n`;\n\nconst typeChart = {\n  warning: 'warning',\n  danger: 'danger',\n};\n\nexport const ExploreAlert = forwardRef(\n  (\n    {\n      title,\n      bodyText,\n      primaryButtonAction,\n      secondaryButtonAction,\n      primaryButtonText,\n      secondaryButtonText,\n      type = 'info',\n      className = '',\n    }: ControlPanelAlertProps,\n    ref: RefObject<HTMLDivElement>,\n  ) => (\n    <AlertContainer className={`alert-type-${type} ${className}`} ref={ref}>\n      <Title>{title}</Title>\n      <p>{bodyText}</p>\n      {primaryButtonText && primaryButtonAction && (\n        <ButtonContainer>\n          {secondaryButtonAction && secondaryButtonText && (\n            <Button\n              buttonStyle=\"link\"\n              buttonSize=\"small\"\n              onClick={secondaryButtonAction}\n            >\n              {secondaryButtonText}\n            </Button>\n          )}\n          <Button\n            buttonStyle={type in typeChart ? typeChart[type] : 'primary'}\n            buttonSize=\"small\"\n            onClick={primaryButtonAction}\n          >\n            {primaryButtonText}\n          </Button>\n        </ButtonContainer>\n      )}\n    </AlertContainer>\n  ),\n);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport Split from 'react-split';\nimport {\n  css,\n  ensureIsArray,\n  styled,\n  SupersetClient,\n  t,\n  useTheme,\n  getChartMetadataRegistry,\n  DatasourceType,\n} from '@superset-ui/core';\nimport { useResizeDetector } from 'react-resize-detector';\nimport { chartPropShape } from 'src/dashboard/util/propShapes';\nimport ChartContainer from 'src/components/Chart/ChartContainer';\nimport {\n  getItem,\n  setItem,\n  LocalStorageKeys,\n} from 'src/utils/localStorageHelpers';\nimport Alert from 'src/components/Alert';\nimport { SaveDatasetModal } from 'src/SqlLab/components/SaveDatasetModal';\nimport { getDatasourceAsSaveableDataset } from 'src/utils/datasourceUtils';\nimport { DataTablesPane } from './DataTablesPane';\nimport { buildV1ChartDataPayload } from '../exploreUtils';\nimport { ChartPills } from './ChartPills';\nimport { ExploreAlert } from './ExploreAlert';\nimport { getChartRequiredFieldsMissingMessage } from '../../utils/getChartRequiredFieldsMissingMessage';\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  onQuery: PropTypes.func,\n  can_overwrite: PropTypes.bool.isRequired,\n  can_download: PropTypes.bool.isRequired,\n  datasource: PropTypes.object,\n  dashboardId: PropTypes.number,\n  column_formats: PropTypes.object,\n  containerId: PropTypes.string.isRequired,\n  isStarred: PropTypes.bool.isRequired,\n  slice: PropTypes.object,\n  sliceName: PropTypes.string,\n  table_name: PropTypes.string,\n  vizType: PropTypes.string.isRequired,\n  form_data: PropTypes.object,\n  ownState: PropTypes.object,\n  standalone: PropTypes.number,\n  force: PropTypes.bool,\n  timeout: PropTypes.number,\n  chartIsStale: PropTypes.bool,\n  chart: chartPropShape,\n  errorMessage: PropTypes.node,\n  triggerRender: PropTypes.bool,\n};\n\nconst GUTTER_SIZE_FACTOR = 1.25;\n\nconst INITIAL_SIZES = [100, 0];\nconst MIN_SIZES = [300, 65];\nconst DEFAULT_SOUTH_PANE_HEIGHT_PERCENT = 40;\n\nconst Styles = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  align-content: stretch;\n  overflow: auto;\n  box-shadow: none;\n  height: 100%;\n\n  & > div {\n    height: 100%;\n  }\n\n  .gutter {\n    border-top: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-bottom: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    width: ${({ theme }) => theme.gridUnit * 9}px;\n    margin: ${({ theme }) => theme.gridUnit * GUTTER_SIZE_FACTOR}px auto;\n  }\n\n  .gutter.gutter-vertical {\n    cursor: row-resize;\n  }\n\n  .ant-collapse {\n    .ant-tabs {\n      height: 100%;\n      .ant-tabs-nav {\n        padding-left: ${({ theme }) => theme.gridUnit * 5}px;\n        margin: 0;\n      }\n      .ant-tabs-content-holder {\n        overflow: hidden;\n        .ant-tabs-content {\n          height: 100%;\n        }\n      }\n    }\n  }\n`;\n\nconst ExploreChartPanel = ({\n  chart,\n  slice,\n  vizType,\n  ownState,\n  triggerRender,\n  force,\n  datasource,\n  errorMessage,\n  form_data: formData,\n  onQuery,\n  actions,\n  timeout,\n  standalone,\n  chartIsStale,\n  chartAlert,\n}) => {\n  const theme = useTheme();\n  const gutterMargin = theme.gridUnit * GUTTER_SIZE_FACTOR;\n  const gutterHeight = theme.gridUnit * GUTTER_SIZE_FACTOR;\n  const {\n    width: chartPanelWidth,\n    height: chartPanelHeight,\n    ref: chartPanelRef,\n  } = useResizeDetector({\n    refreshMode: 'debounce',\n    refreshRate: 300,\n  });\n  const [splitSizes, setSplitSizes] = useState(\n    getItem(LocalStorageKeys.chart_split_sizes, INITIAL_SIZES),\n  );\n\n  const [showDatasetModal, setShowDatasetModal] = useState(false);\n\n  const metaDataRegistry = getChartMetadataRegistry();\n  const { useLegacyApi } = metaDataRegistry.get(vizType);\n  const vizTypeNeedsDataset =\n    useLegacyApi && datasource.type !== DatasourceType.Table;\n  // added boolean column to below show boolean so that the errors aren't overlapping\n  const showAlertBanner =\n    !chartAlert &&\n    chartIsStale &&\n    !vizTypeNeedsDataset &&\n    chart.chartStatus !== 'failed' &&\n    ensureIsArray(chart.queriesResponse).length > 0;\n\n  const updateQueryContext = useCallback(\n    async function fetchChartData() {\n      if (slice && slice.query_context === null) {\n        const queryContext = buildV1ChartDataPayload({\n          formData: slice.form_data,\n          force,\n          resultFormat: 'json',\n          resultType: 'full',\n          setDataMask: null,\n          ownState: null,\n        });\n\n        await SupersetClient.put({\n          endpoint: `/api/v1/chart/${slice.slice_id}`,\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            query_context: JSON.stringify(queryContext),\n            query_context_generation: true,\n          }),\n        });\n      }\n    },\n    [slice],\n  );\n\n  useEffect(() => {\n    updateQueryContext();\n  }, [updateQueryContext]);\n\n  useEffect(() => {\n    setItem(LocalStorageKeys.chart_split_sizes, splitSizes);\n  }, [splitSizes]);\n\n  const onDragEnd = useCallback(sizes => {\n    setSplitSizes(sizes);\n  }, []);\n\n  const refreshCachedQuery = useCallback(() => {\n    actions.setForceQuery(true);\n    actions.postChartFormData(\n      formData,\n      true,\n      timeout,\n      chart.id,\n      undefined,\n      ownState,\n    );\n    actions.updateQueryFormData(formData, chart.id);\n  }, [actions, chart.id, formData, ownState, timeout]);\n\n  const onCollapseChange = useCallback(isOpen => {\n    let splitSizes;\n    if (!isOpen) {\n      splitSizes = INITIAL_SIZES;\n    } else {\n      splitSizes = [\n        100 - DEFAULT_SOUTH_PANE_HEIGHT_PERCENT,\n        DEFAULT_SOUTH_PANE_HEIGHT_PERCENT,\n      ];\n    }\n    setSplitSizes(splitSizes);\n  }, []);\n\n  const renderChart = useCallback(\n    () => (\n      <div\n        css={css`\n          min-height: 0;\n          flex: 1;\n          overflow: auto;\n        `}\n        ref={chartPanelRef}\n      >\n        {chartPanelWidth && chartPanelHeight && (\n          <ChartContainer\n            width={Math.floor(chartPanelWidth)}\n            height={chartPanelHeight}\n            ownState={ownState}\n            annotationData={chart.annotationData}\n            chartAlert={chart.chartAlert}\n            chartStackTrace={chart.chartStackTrace}\n            chartId={chart.id}\n            chartStatus={chart.chartStatus}\n            triggerRender={triggerRender}\n            force={force}\n            datasource={datasource}\n            errorMessage={errorMessage}\n            formData={formData}\n            latestQueryFormData={chart.latestQueryFormData}\n            onQuery={onQuery}\n            queriesResponse={chart.queriesResponse}\n            chartIsStale={chartIsStale}\n            setControlValue={actions.setControlValue}\n            timeout={timeout}\n            triggerQuery={chart.triggerQuery}\n            vizType={vizType}\n          />\n        )}\n      </div>\n    ),\n    [\n      actions.setControlValue,\n      chart.annotationData,\n      chart.chartAlert,\n      chart.chartStackTrace,\n      chart.chartStatus,\n      chart.id,\n      chart.latestQueryFormData,\n      chart.queriesResponse,\n      chart.triggerQuery,\n      chartIsStale,\n      chartPanelHeight,\n      chartPanelRef,\n      chartPanelWidth,\n      datasource,\n      errorMessage,\n      force,\n      formData,\n      onQuery,\n      ownState,\n      timeout,\n      triggerRender,\n      vizType,\n    ],\n  );\n\n  const panelBody = useMemo(\n    () => (\n      <div\n        className=\"panel-body\"\n        css={css`\n          display: flex;\n          flex-direction: column;\n        `}\n      >\n        {vizTypeNeedsDataset && (\n          <Alert\n            message={t('Chart type requires a dataset')}\n            type=\"error\"\n            css={theme => css`\n              margin: 0 0 ${theme.gridUnit * 4}px 0;\n            `}\n            description={\n              <>\n                {t(\n                  'This chart type is not supported when using an unsaved query as a chart source. ',\n                )}\n                <span\n                  role=\"button\"\n                  tabIndex={0}\n                  onClick={() => setShowDatasetModal(true)}\n                  css={{ textDecoration: 'underline' }}\n                >\n                  {t('Create a dataset')}\n                </span>\n                {t(' to visualize your data.')}\n              </>\n            }\n          />\n        )}\n        {showAlertBanner && (\n          <ExploreAlert\n            title={\n              errorMessage\n                ? t('Required control values have been removed')\n                : t('Your chart is not up to date')\n            }\n            bodyText={\n              errorMessage ? (\n                getChartRequiredFieldsMissingMessage(false)\n              ) : (\n                <span>\n                  {t(\n                    'You updated the values in the control panel, but the chart was not updated automatically. Run the query by clicking on the \"Update chart\" button or',\n                  )}{' '}\n                  <span role=\"button\" tabIndex={0} onClick={onQuery}>\n                    {t('click here')}\n                  </span>\n                  .\n                </span>\n              )\n            }\n            type=\"warning\"\n            css={theme => css`\n              margin: 0 0 ${theme.gridUnit * 4}px 0;\n            `}\n          />\n        )}\n        <ChartPills\n          queriesResponse={chart.queriesResponse}\n          chartStatus={chart.chartStatus}\n          chartUpdateStartTime={chart.chartUpdateStartTime}\n          chartUpdateEndTime={chart.chartUpdateEndTime}\n          refreshCachedQuery={refreshCachedQuery}\n          rowLimit={formData?.row_limit}\n        />\n        {renderChart()}\n      </div>\n    ),\n    [\n      showAlertBanner,\n      errorMessage,\n      onQuery,\n      chart.queriesResponse,\n      chart.chartStatus,\n      chart.chartUpdateStartTime,\n      chart.chartUpdateEndTime,\n      refreshCachedQuery,\n      formData?.row_limit,\n      renderChart,\n    ],\n  );\n\n  const standaloneChartBody = useMemo(() => renderChart(), [renderChart]);\n\n  const [queryFormData, setQueryFormData] = useState(chart.latestQueryFormData);\n\n  useEffect(() => {\n    // only update when `latestQueryFormData` changes AND `triggerRender`\n    // is false. No update should be done when only `triggerRender` changes,\n    // as this can trigger a query downstream based on incomplete form data.\n    // (`latestQueryFormData` is only updated when a a valid request has been\n    // triggered).\n    if (!triggerRender) {\n      setQueryFormData(chart.latestQueryFormData);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [chart.latestQueryFormData]);\n\n  const elementStyle = useCallback(\n    (dimension, elementSize, gutterSize) => ({\n      [dimension]: `calc(${elementSize}% - ${gutterSize + gutterMargin}px)`,\n    }),\n    [gutterMargin],\n  );\n\n  if (standalone) {\n    // dom manipulation hack to get rid of the boostrap theme's body background\n    const standaloneClass = 'background-transparent';\n    const bodyClasses = document.body.className.split(' ');\n    if (!bodyClasses.includes(standaloneClass)) {\n      document.body.className += ` ${standaloneClass}`;\n    }\n    return standaloneChartBody;\n  }\n\n  return (\n    <Styles className=\"panel panel-default chart-container\">\n      {vizType === 'filter_box' ? (\n        panelBody\n      ) : (\n        <Split\n          sizes={splitSizes}\n          minSize={MIN_SIZES}\n          direction=\"vertical\"\n          gutterSize={gutterHeight}\n          onDragEnd={onDragEnd}\n          elementStyle={elementStyle}\n          expandToMin\n        >\n          {panelBody}\n          <DataTablesPane\n            ownState={ownState}\n            queryFormData={queryFormData}\n            datasource={datasource}\n            queryForce={force}\n            onCollapseChange={onCollapseChange}\n            chartStatus={chart.chartStatus}\n            errorMessage={errorMessage}\n            actions={actions}\n          />\n        </Split>\n      )}\n      {showDatasetModal && (\n        <SaveDatasetModal\n          visible={showDatasetModal}\n          onHide={() => setShowDatasetModal(false)}\n          buttonTextOnSave={t('Save')}\n          buttonTextOnOverwrite={t('Overwrite')}\n          datasource={getDatasourceAsSaveableDataset(datasource)}\n          openWindow={false}\n          formData={formData}\n        />\n      )}\n    </Styles>\n  );\n};\n\nExploreChartPanel.propTypes = propTypes;\n\nexport default ExploreChartPanel;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { ReactNode } from 'react';\nimport { t } from '@superset-ui/core';\nimport Button from 'src/components/Button';\n\nexport type RunQueryButtonProps = {\n  loading: boolean;\n  onQuery: () => void;\n  onStop: () => void;\n  errorMessage: ReactNode;\n  isNewChart: boolean;\n  canStopQuery: boolean;\n  chartIsStale: boolean;\n};\n\nexport const RunQueryButton = ({\n  loading,\n  onQuery,\n  onStop,\n  errorMessage,\n  isNewChart,\n  canStopQuery,\n  chartIsStale,\n}: RunQueryButtonProps) =>\n  loading ? (\n    <Button onClick={onStop} buttonStyle=\"warning\" disabled={!canStopQuery}>\n      <i className=\"fa fa-stop-circle-o\" /> {t('Stop')}\n    </Button>\n  ) : (\n    <Button\n      onClick={onQuery}\n      buttonStyle={chartIsStale ? 'primary' : 'secondary'}\n      disabled={!!errorMessage}\n      data-test=\"run-query-button\"\n    >\n      {isNewChart ? t('Create chart') : t('Update chart')}\n    </Button>\n  );\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint camelcase: 0 */\nimport React, {\n  ReactNode,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  ensureIsArray,\n  t,\n  styled,\n  getChartControlPanelRegistry,\n  QueryFormData,\n  DatasourceType,\n  css,\n  SupersetTheme,\n} from '@superset-ui/core';\nimport {\n  ControlPanelSectionConfig,\n  ControlState,\n  CustomControlItem,\n  Dataset,\n  ExpandedControlItem,\n  InfoTooltipWithTrigger,\n  sections,\n} from '@superset-ui/chart-controls';\n\nimport Collapse from 'src/components/Collapse';\nimport Tabs from 'src/components/Tabs';\nimport { PluginContext } from 'src/components/DynamicPlugins';\nimport Loading from 'src/components/Loading';\n\nimport { usePrevious } from 'src/hooks/usePrevious';\nimport { getSectionsToRender } from 'src/explore/controlUtils';\nimport { ExploreActions } from 'src/explore/actions/exploreActions';\nimport { ChartState, ExplorePageState } from 'src/explore/types';\nimport { Tooltip } from 'src/components/Tooltip';\n\nimport { rgba } from 'emotion-rgba';\nimport ControlRow from './ControlRow';\nimport Control from './Control';\nimport { ExploreAlert } from './ExploreAlert';\nimport { RunQueryButton } from './RunQueryButton';\n\nexport type ControlPanelsContainerProps = {\n  exploreState: ExplorePageState['explore'];\n  actions: ExploreActions;\n  datasource_type: DatasourceType;\n  chart: ChartState;\n  controls: Record<string, ControlState>;\n  form_data: QueryFormData;\n  isDatasourceMetaLoading: boolean;\n  errorMessage: ReactNode;\n  onQuery: () => void;\n  onStop: () => void;\n  canStopQuery: boolean;\n  chartIsStale: boolean;\n};\n\nexport type ExpandedControlPanelSectionConfig = Omit<\n  ControlPanelSectionConfig,\n  'controlSetRows'\n> & {\n  controlSetRows: ExpandedControlItem[][];\n};\n\nconst actionButtonsContainerStyles = (theme: SupersetTheme) => css`\n  display: flex;\n  position: sticky;\n  bottom: 0;\n  flex-direction: column;\n  align-items: center;\n  padding: ${theme.gridUnit * 4}px;\n  z-index: 999;\n  background: linear-gradient(\n    ${rgba(theme.colors.grayscale.light5, 0)},\n    ${theme.colors.grayscale.light5} ${theme.opacity.mediumLight}\n  );\n\n  & > button {\n    min-width: 156px;\n  }\n`;\n\nconst Styles = styled.div`\n  position: relative;\n  height: 100%;\n  width: 100%;\n\n  // Resizable add overflow-y: auto as a style to this div\n  // To override it, we need to use !important\n  overflow: visible !important;\n  #controlSections {\n    height: 100%;\n    overflow: visible;\n  }\n  .nav-tabs {\n    flex: 0 0 1;\n  }\n  .tab-content {\n    overflow: auto;\n    flex: 1 1 100%;\n  }\n  .Select__menu {\n    max-width: 100%;\n  }\n  .type-label {\n    margin-right: ${({ theme }) => theme.gridUnit * 3}px;\n    width: ${({ theme }) => theme.gridUnit * 7}px;\n    display: inline-block;\n    text-align: center;\n    font-weight: ${({ theme }) => theme.typography.weights.bold};\n  }\n`;\n\nconst ControlPanelsTabs = styled(Tabs)`\n  ${({ theme, fullWidth }) => css`\n    height: 100%;\n    overflow: visible;\n    .ant-tabs-nav {\n      margin-bottom: 0;\n    }\n    .ant-tabs-nav-list {\n      width: ${fullWidth ? '100%' : '50%'};\n    }\n    .ant-tabs-tabpane {\n      height: 100%;\n    }\n    .ant-tabs-content-holder {\n      padding-top: ${theme.gridUnit * 4}px;\n    }\n\n    .ant-collapse-ghost > .ant-collapse-item {\n      &:not(:last-child) {\n        border-bottom: 1px solid ${theme.colors.grayscale.light3};\n      }\n\n      & > .ant-collapse-header {\n        font-size: ${theme.typography.sizes.s}px;\n      }\n\n      & > .ant-collapse-content > .ant-collapse-content-box {\n        padding-bottom: 0;\n        font-size: ${theme.typography.sizes.s}px;\n      }\n    }\n  `}\n`;\n\nconst isTimeSection = (section: ControlPanelSectionConfig): boolean =>\n  !!section.label &&\n  (sections.legacyRegularTime.label === section.label ||\n    sections.legacyTimeseriesTime.label === section.label);\n\nconst hasTimeColumn = (datasource: Dataset): boolean =>\n  datasource?.columns?.some(c => c.is_dttm);\nconst sectionsToExpand = (\n  sections: ControlPanelSectionConfig[],\n  datasource: Dataset,\n): string[] =>\n  // avoid expanding time section if datasource doesn't include time column\n  sections.reduce(\n    (acc, section) =>\n      section.expanded && (!isTimeSection(section) || hasTimeColumn(datasource))\n        ? [...acc, String(section.label)]\n        : acc,\n    [] as string[],\n  );\n\nfunction getState(\n  vizType: string,\n  datasource: Dataset,\n  datasourceType: DatasourceType,\n) {\n  const querySections: ControlPanelSectionConfig[] = [];\n  const customizeSections: ControlPanelSectionConfig[] = [];\n\n  getSectionsToRender(vizType, datasourceType).forEach(section => {\n    // if at least one control in the section is not `renderTrigger`\n    // or asks to be displayed at the Data tab\n    if (\n      section.tabOverride === 'data' ||\n      section.controlSetRows.some(rows =>\n        rows.some(\n          control =>\n            control &&\n            typeof control === 'object' &&\n            'config' in control &&\n            control.config &&\n            (!control.config.renderTrigger ||\n              control.config.tabOverride === 'data'),\n        ),\n      )\n    ) {\n      querySections.push(section);\n    } else {\n      customizeSections.push(section);\n    }\n  });\n  const expandedQuerySections: string[] = sectionsToExpand(\n    querySections,\n    datasource,\n  );\n  const expandedCustomizeSections: string[] = sectionsToExpand(\n    customizeSections,\n    datasource,\n  );\n  return {\n    expandedQuerySections,\n    expandedCustomizeSections,\n    querySections,\n    customizeSections,\n  };\n}\n\nexport const ControlPanelsContainer = (props: ControlPanelsContainerProps) => {\n  const pluginContext = useContext(PluginContext);\n\n  const prevState = usePrevious(props.exploreState);\n  const prevDatasource = usePrevious(props.exploreState.datasource);\n\n  const [showDatasourceAlert, setShowDatasourceAlert] = useState(false);\n\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (\n      prevDatasource &&\n      (props.exploreState.datasource?.id !== prevDatasource.id ||\n        props.exploreState.datasource?.type !== prevDatasource.type)\n    ) {\n      setShowDatasourceAlert(true);\n      containerRef.current?.scrollTo(0, 0);\n    }\n  }, [\n    props.exploreState.datasource?.id,\n    props.exploreState.datasource?.type,\n    prevDatasource,\n  ]);\n\n  const {\n    expandedQuerySections,\n    expandedCustomizeSections,\n    querySections,\n    customizeSections,\n  } = useMemo(\n    () =>\n      getState(\n        props.form_data.viz_type,\n        props.exploreState.datasource,\n        props.datasource_type,\n      ),\n    [\n      props.exploreState.datasource,\n      props.form_data.viz_type,\n      props.datasource_type,\n    ],\n  );\n\n  const resetTransferredControls = useCallback(() => {\n    ensureIsArray(props.exploreState.controlsTransferred).forEach(controlName =>\n      props.actions.setControlValue(\n        controlName,\n        props.controls[controlName].default,\n      ),\n    );\n  }, [props.actions, props.exploreState.controlsTransferred, props.controls]);\n\n  const handleClearFormClick = useCallback(() => {\n    resetTransferredControls();\n    setShowDatasourceAlert(false);\n  }, [resetTransferredControls]);\n\n  const handleContinueClick = useCallback(() => {\n    setShowDatasourceAlert(false);\n  }, []);\n\n  const shouldRecalculateControlState = ({\n    name,\n    config,\n  }: CustomControlItem): boolean => {\n    const { controls, chart, exploreState } = props;\n\n    return Boolean(\n      config.shouldMapStateToProps?.(\n        prevState || exploreState,\n        exploreState,\n        controls[name],\n        chart,\n      ),\n    );\n  };\n\n  const renderControl = ({ name, config }: CustomControlItem) => {\n    const { controls, chart, exploreState } = props;\n    const { visibility } = config;\n\n    // If the control item is not an object, we have to look up the control data from\n    // the centralized controls file.\n    // When it is an object we read control data straight from `config` instead\n    const controlData = {\n      ...config,\n      ...controls[name],\n      ...(shouldRecalculateControlState({ name, config })\n        ? config?.mapStateToProps?.(exploreState, controls[name], chart)\n        : // for other controls, `mapStateToProps` is already run in\n          // controlUtils/getControlState.ts\n          undefined),\n      name,\n    };\n    const {\n      validationErrors,\n      label: baseLabel,\n      description: baseDescription,\n      ...restProps\n    } = controlData as ControlState & {\n      validationErrors?: any[];\n    };\n\n    const isVisible = visibility\n      ? visibility.call(config, props, controlData)\n      : undefined;\n\n    const label =\n      typeof baseLabel === 'function'\n        ? baseLabel(exploreState, controls[name], chart)\n        : baseLabel;\n\n    const description =\n      typeof baseDescription === 'function'\n        ? baseDescription(exploreState, controls[name], chart)\n        : baseDescription;\n\n    return (\n      <Control\n        key={`control-${name}`}\n        name={name}\n        label={label}\n        description={description}\n        validationErrors={validationErrors}\n        actions={props.actions}\n        isVisible={isVisible}\n        {...restProps}\n      />\n    );\n  };\n\n  const renderControlPanelSection = (\n    section: ExpandedControlPanelSectionConfig,\n  ) => {\n    const { controls } = props;\n    const { label, description } = section;\n\n    // Section label can be a ReactNode but in some places we want to\n    // have a string ID. Using forced type conversion for now,\n    // should probably add a `id` field to sections in the future.\n    const sectionId = String(label);\n\n    const hasErrors = section.controlSetRows.some(rows =>\n      rows.some(item => {\n        const controlName =\n          typeof item === 'string'\n            ? item\n            : item && 'name' in item\n            ? item.name\n            : null;\n        return (\n          controlName &&\n          controlName in controls &&\n          controls[controlName].validationErrors &&\n          controls[controlName].validationErrors.length > 0\n        );\n      }),\n    );\n    const PanelHeader = () => (\n      <span data-test=\"collapsible-control-panel-header\">\n        <span\n          css={(theme: SupersetTheme) => css`\n            font-size: ${theme.typography.sizes.m}px;\n            line-height: 1.3;\n          `}\n        >\n          {label}\n        </span>{' '}\n        {description && (\n          // label is only used in tooltip id (should probably call this prop `id`)\n          <InfoTooltipWithTrigger label={sectionId} tooltip={description} />\n        )}\n        {hasErrors && (\n          <InfoTooltipWithTrigger\n            label=\"validation-errors\"\n            bsStyle=\"danger\"\n            tooltip=\"This section contains validation errors\"\n          />\n        )}\n      </span>\n    );\n\n    return (\n      <Collapse.Panel\n        css={theme => css`\n          margin-bottom: 0;\n          box-shadow: none;\n\n          &:last-child {\n            padding-bottom: ${theme.gridUnit * 16}px;\n            border-bottom: 0;\n          }\n\n          .panel-body {\n            margin-left: ${theme.gridUnit * 4}px;\n            padding-bottom: 0;\n          }\n\n          span.label {\n            display: inline-block;\n          }\n        `}\n        header={<PanelHeader />}\n        key={sectionId}\n      >\n        {section.controlSetRows.map((controlSets, i) => {\n          const renderedControls = controlSets\n            .map(controlItem => {\n              if (!controlItem) {\n                // When the item is invalid\n                return null;\n              }\n              if (React.isValidElement(controlItem)) {\n                // When the item is a React element\n                return controlItem;\n              }\n              if (\n                controlItem.name &&\n                controlItem.config &&\n                controlItem.name !== 'datasource'\n              ) {\n                return renderControl(controlItem);\n              }\n              return null;\n            })\n            .filter(x => x !== null);\n          // don't show the row if it is empty\n          if (renderedControls.length === 0) {\n            return null;\n          }\n          return (\n            <ControlRow\n              key={`controlsetrow-${i}`}\n              controls={renderedControls}\n            />\n          );\n        })}\n      </Collapse.Panel>\n    );\n  };\n\n  const hasControlsTransferred =\n    ensureIsArray(props.exploreState.controlsTransferred).length > 0;\n\n  const DatasourceAlert = useCallback(\n    () =>\n      hasControlsTransferred ? (\n        <ExploreAlert\n          title={t('Keep control settings?')}\n          bodyText={t(\n            \"You've changed datasets. Any controls with data (columns, metrics) that match this new dataset have been retained.\",\n          )}\n          primaryButtonAction={handleContinueClick}\n          secondaryButtonAction={handleClearFormClick}\n          primaryButtonText={t('Continue')}\n          secondaryButtonText={t('Clear form')}\n          type=\"info\"\n        />\n      ) : (\n        <ExploreAlert\n          title={t('No form settings were maintained')}\n          bodyText={t(\n            'We were unable to carry over any controls when switching to this new dataset.',\n          )}\n          primaryButtonAction={handleContinueClick}\n          primaryButtonText={t('Continue')}\n          type=\"warning\"\n        />\n      ),\n    [handleClearFormClick, handleContinueClick, hasControlsTransferred],\n  );\n\n  const dataTabTitle = useMemo(\n    () => (\n      <>\n        <span>{t('Data')}</span>\n        {props.errorMessage && (\n          <span\n            css={(theme: SupersetTheme) => css`\n              font-size: ${theme.typography.sizes.xs}px;\n              margin-left: ${theme.gridUnit * 2}px;\n            `}\n          >\n            {' '}\n            <Tooltip\n              id=\"query-error-tooltip\"\n              placement=\"right\"\n              title={props.errorMessage}\n            >\n              <i className=\"fa fa-exclamation-circle text-danger fa-lg\" />\n            </Tooltip>\n          </span>\n        )}\n      </>\n    ),\n    [props.errorMessage],\n  );\n\n  const controlPanelRegistry = getChartControlPanelRegistry();\n  if (\n    !controlPanelRegistry.has(props.form_data.viz_type) &&\n    pluginContext.loading\n  ) {\n    return <Loading />;\n  }\n\n  const showCustomizeTab = customizeSections.length > 0;\n\n  return (\n    <Styles ref={containerRef}>\n      <ControlPanelsTabs\n        id=\"controlSections\"\n        data-test=\"control-tabs\"\n        fullWidth={showCustomizeTab}\n        allowOverflow={false}\n      >\n        <Tabs.TabPane key=\"query\" tab={dataTabTitle}>\n          <Collapse\n            defaultActiveKey={expandedQuerySections}\n            expandIconPosition=\"right\"\n            ghost\n          >\n            {showDatasourceAlert && <DatasourceAlert />}\n            {querySections.map(renderControlPanelSection)}\n          </Collapse>\n        </Tabs.TabPane>\n        {showCustomizeTab && (\n          <Tabs.TabPane key=\"display\" tab={t('Customize')}>\n            <Collapse\n              defaultActiveKey={expandedCustomizeSections}\n              expandIconPosition=\"right\"\n              ghost\n            >\n              {customizeSections.map(renderControlPanelSection)}\n            </Collapse>\n          </Tabs.TabPane>\n        )}\n      </ControlPanelsTabs>\n      <div css={actionButtonsContainerStyles}>\n        <RunQueryButton\n          onQuery={props.onQuery}\n          onStop={props.onStop}\n          errorMessage={props.errorMessage}\n          loading={props.chart.chartStatus === 'loading'}\n          isNewChart={!props.chart.queriesResponse}\n          canStopQuery={props.canStopQuery}\n          chartIsStale={props.chartIsStale}\n        />\n      </div>\n    </Styles>\n  );\n};\n\nexport default ControlPanelsContainer;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint camelcase: 0 */\nimport React from 'react';\nimport { Input } from 'src/components/Input';\nimport { Form, FormItem } from 'src/components/Form';\nimport Alert from 'src/components/Alert';\nimport { t, styled } from '@superset-ui/core';\nimport ReactMarkdown from 'react-markdown';\nimport Modal from 'src/components/Modal';\nimport { Radio } from 'src/components/Radio';\nimport Button from 'src/components/Button';\nimport { Select } from 'src/components';\nimport { SelectValue } from 'antd/lib/select';\nimport { connect } from 'react-redux';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\n// Session storage key for recent dashboard\nconst SK_DASHBOARD_ID = 'save_chart_recent_dashboard';\nconst SELECT_PLACEHOLDER = t('**Select** a dashboard OR **create** a new one');\n\ninterface SaveModalProps extends RouteComponentProps {\n  onHide: () => void;\n  actions: Record<string, any>;\n  form_data?: Record<string, any>;\n  userId: number;\n  dashboards: Array<any>;\n  alert?: string;\n  sliceName?: string;\n  slice?: Record<string, any>;\n  datasource?: Record<string, any>;\n  dashboardId: '' | number | null;\n  sliceDashboards: number[];\n}\n\ntype ActionType = 'overwrite' | 'saveas';\n\ntype SaveModalState = {\n  saveToDashboardId: number | string | null;\n  newSliceName?: string;\n  newDashboardName?: string;\n  alert: string | null;\n  action: ActionType;\n};\n\nexport const StyledModal = styled(Modal)`\n  .ant-modal-body {\n    overflow: visible;\n  }\n`;\n\nclass SaveModal extends React.Component<SaveModalProps, SaveModalState> {\n  constructor(props: SaveModalProps) {\n    super(props);\n    this.state = {\n      saveToDashboardId: null,\n      newSliceName: props.sliceName,\n      alert: null,\n      action: this.canOverwriteSlice() ? 'overwrite' : 'saveas',\n    };\n    this.onDashboardSelectChange = this.onDashboardSelectChange.bind(this);\n    this.onSliceNameChange = this.onSliceNameChange.bind(this);\n    this.changeAction = this.changeAction.bind(this);\n    this.saveOrOverwrite = this.saveOrOverwrite.bind(this);\n    this.isNewDashboard = this.isNewDashboard.bind(this);\n  }\n\n  isNewDashboard(): boolean {\n    return !!(!this.state.saveToDashboardId && this.state.newDashboardName);\n  }\n\n  canOverwriteSlice(): boolean {\n    return (\n      this.props.slice?.owners?.includes(this.props.userId) &&\n      !this.props.slice?.is_managed_externally\n    );\n  }\n\n  componentDidMount() {\n    this.props.actions.fetchDashboards(this.props.userId).then(() => {\n      const dashboardIds = this.props.dashboards.map(\n        dashboard => dashboard.value,\n      );\n      const lastDashboard = sessionStorage.getItem(SK_DASHBOARD_ID);\n      let recentDashboard = lastDashboard && parseInt(lastDashboard, 10);\n\n      if (this.props.dashboardId) {\n        recentDashboard = this.props.dashboardId;\n      }\n\n      if (\n        recentDashboard !== null &&\n        dashboardIds.indexOf(recentDashboard) !== -1\n      ) {\n        this.setState({\n          saveToDashboardId: recentDashboard,\n        });\n      }\n    });\n  }\n\n  onSliceNameChange(event: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({ newSliceName: event.target.value });\n  }\n\n  onDashboardSelectChange(selected: SelectValue) {\n    const newDashboardName = selected ? String(selected) : undefined;\n    const saveToDashboardId =\n      selected && typeof selected === 'number' ? selected : null;\n    this.setState({ saveToDashboardId, newDashboardName });\n  }\n\n  changeAction(action: ActionType) {\n    this.setState({ action });\n  }\n\n  saveOrOverwrite(gotodash: boolean) {\n    this.setState({ alert: null });\n    this.props.actions.removeSaveModalAlert();\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { url_params, ...formData } = this.props.form_data || {};\n\n    let promise = Promise.resolve();\n\n    //  Create or retrieve dashboard\n    type DashboardGetResponse = {\n      id: number;\n      url: string;\n      dashboard_title: string;\n    };\n\n    let dashboard: DashboardGetResponse | null = null;\n    if (this.state.newDashboardName || this.state.saveToDashboardId) {\n      let saveToDashboardId = this.state.saveToDashboardId || null;\n      if (!this.state.saveToDashboardId) {\n        promise = promise\n          .then(() =>\n            this.props.actions.createDashboard(this.state.newDashboardName),\n          )\n          .then((response: { id: number }) => {\n            saveToDashboardId = response.id;\n          });\n      }\n\n      promise = promise\n        .then(() => this.props.actions.getDashboard(saveToDashboardId))\n        .then((response: { result: DashboardGetResponse }) => {\n          dashboard = response.result;\n          const dashboards = new Set<number>(this.props.sliceDashboards);\n          dashboards.add(dashboard.id);\n          formData.dashboards = Array.from(dashboards);\n        });\n    }\n\n    //  Update or create slice\n    if (this.state.action === 'overwrite') {\n      promise = promise.then(() =>\n        this.props.actions.updateSlice(\n          this.props.slice,\n          this.state.newSliceName,\n          formData,\n          dashboard\n            ? {\n                title: dashboard.dashboard_title,\n                new: !this.state.saveToDashboardId,\n              }\n            : null,\n        ),\n      );\n    } else {\n      promise = promise.then(() =>\n        this.props.actions.createSlice(\n          this.state.newSliceName,\n          formData,\n          dashboard\n            ? {\n                title: dashboard.dashboard_title,\n                new: !this.state.saveToDashboardId,\n              }\n            : null,\n        ),\n      );\n    }\n\n    promise.then(((value: { id: number }) => {\n      //  Update recent dashboard\n      if (dashboard) {\n        sessionStorage.setItem(SK_DASHBOARD_ID, `${dashboard.id}`);\n      } else {\n        sessionStorage.removeItem(SK_DASHBOARD_ID);\n      }\n\n      // Go to new dashboard url\n      if (gotodash && dashboard) {\n        this.props.history.push(dashboard.url);\n        return;\n      }\n\n      const searchParams = new URLSearchParams(this.props.location.search);\n      searchParams.set('save_action', this.state.action);\n      searchParams.delete('form_data_key');\n      if (this.state.action === 'saveas') {\n        searchParams.set('slice_id', value.id.toString());\n      }\n      this.props.history.replace(`/explore/?${searchParams.toString()}`);\n    }) as (value: any) => void);\n\n    this.props.onHide();\n  }\n\n  removeAlert() {\n    if (this.props.alert) {\n      this.props.actions.removeSaveModalAlert();\n    }\n    this.setState({ alert: null });\n  }\n\n  render() {\n    const dashboardSelectValue =\n      this.state.saveToDashboardId || this.state.newDashboardName;\n    return (\n      <StyledModal\n        show\n        onHide={this.props.onHide}\n        title={t('Save chart')}\n        footer={\n          <div data-test=\"save-modal-footer\">\n            <Button\n              id=\"btn_cancel\"\n              buttonSize=\"small\"\n              onClick={this.props.onHide}\n            >\n              {t('Cancel')}\n            </Button>\n            <Button\n              id=\"btn_modal_save_goto_dash\"\n              buttonSize=\"small\"\n              disabled={\n                !this.state.newSliceName ||\n                (!this.state.saveToDashboardId && !this.state.newDashboardName)\n              }\n              onClick={() => this.saveOrOverwrite(true)}\n            >\n              {this.isNewDashboard()\n                ? t('Save & go to new dashboard')\n                : t('Save & go to dashboard')}\n            </Button>\n            <Button\n              id=\"btn_modal_save\"\n              buttonSize=\"small\"\n              buttonStyle=\"primary\"\n              onClick={() => this.saveOrOverwrite(false)}\n              disabled={!this.state.newSliceName}\n              data-test=\"btn-modal-save\"\n            >\n              {!this.canOverwriteSlice() && this.props.slice\n                ? t('Save as new chart')\n                : this.isNewDashboard()\n                ? t('Save to new dashboard')\n                : t('Save')}\n            </Button>\n          </div>\n        }\n      >\n        <Form data-test=\"save-modal-body\" layout=\"vertical\">\n          {(this.state.alert || this.props.alert) && (\n            <Alert\n              type=\"warning\"\n              message={\n                <>\n                  {this.state.alert ? this.state.alert : this.props.alert}\n                  <i\n                    role=\"button\"\n                    aria-label=\"Remove alert\"\n                    tabIndex={0}\n                    className=\"fa fa-close pull-right\"\n                    onClick={this.removeAlert.bind(this)}\n                    style={{ cursor: 'pointer' }}\n                  />\n                </>\n              }\n            />\n          )}\n          <FormItem data-test=\"radio-group\">\n            <Radio\n              id=\"overwrite-radio\"\n              disabled={!this.canOverwriteSlice()}\n              checked={this.state.action === 'overwrite'}\n              onChange={() => this.changeAction('overwrite')}\n              data-test=\"save-overwrite-radio\"\n            >\n              {t('Save (Overwrite)')}\n            </Radio>\n            <Radio\n              id=\"saveas-radio\"\n              data-test=\"saveas-radio\"\n              checked={this.state.action === 'saveas'}\n              onChange={() => this.changeAction('saveas')}\n            >\n              {t('Save as...')}\n            </Radio>\n          </FormItem>\n          <hr />\n          <FormItem label={t('Chart name')} required>\n            <Input\n              name=\"new_slice_name\"\n              type=\"text\"\n              placeholder=\"Name\"\n              value={this.state.newSliceName}\n              onChange={this.onSliceNameChange}\n              data-test=\"new-chart-name\"\n            />\n          </FormItem>\n          <FormItem\n            label={t('Add to dashboard')}\n            data-test=\"save-chart-modal-select-dashboard-form\"\n          >\n            <Select\n              allowClear\n              allowNewOptions\n              ariaLabel={t('Select a dashboard')}\n              options={this.props.dashboards}\n              onChange={this.onDashboardSelectChange}\n              value={dashboardSelectValue || undefined}\n              placeholder={\n                // Using markdown to allow for good i18n\n                <ReactMarkdown\n                  source={SELECT_PLACEHOLDER}\n                  renderers={{ paragraph: 'span' }}\n                />\n              }\n            />\n          </FormItem>\n        </Form>\n      </StyledModal>\n    );\n  }\n}\n\ninterface StateProps {\n  datasource: any;\n  slice: any;\n  userId: any;\n  dashboards: any;\n  alert: any;\n}\n\nfunction mapStateToProps({\n  explore,\n  saveModal,\n  user,\n}: Record<string, any>): StateProps {\n  return {\n    datasource: explore.datasource,\n    slice: explore.slice,\n    userId: user?.userId,\n    dashboards: saveModal.dashboards,\n    alert: saveModal.saveModalAlert,\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, () => ({}))(SaveModal));\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { useDrag } from 'react-dnd';\nimport { css, Metric, styled } from '@superset-ui/core';\nimport { ColumnMeta } from '@superset-ui/chart-controls';\nimport { DndItemType } from 'src/explore/components/DndItemType';\nimport {\n  StyledColumnOption,\n  StyledMetricOption,\n} from 'src/explore/components/optionRenderers';\nimport Icons from 'src/components/Icons';\n\nimport { DatasourcePanelDndItem } from '../types';\n\nconst DatasourceItemContainer = styled.div`\n  ${({ theme }) => css`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n    height: ${theme.gridUnit * 6}px;\n    padding: 0 ${theme.gridUnit}px;\n\n    // hack to make the drag preview image corners rounded\n    transform: translate(0, 0);\n    background-color: inherit;\n    border-radius: 4px;\n\n    > div {\n      min-width: 0;\n      margin-right: ${theme.gridUnit * 2}px;\n    }\n  `}\n`;\n\ninterface DatasourcePanelDragOptionProps extends DatasourcePanelDndItem {\n  labelRef?: React.RefObject<any>;\n  showTooltip?: boolean;\n}\n\ntype MetricOption = Omit<Metric, 'id'> & {\n  label?: string;\n};\n\nexport default function DatasourcePanelDragOption(\n  props: DatasourcePanelDragOptionProps,\n) {\n  const { labelRef, showTooltip, type, value } = props;\n  const [{ isDragging }, drag] = useDrag({\n    item: {\n      value: props.value,\n      type: props.type,\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  const optionProps = {\n    labelRef,\n    showTooltip: !isDragging && showTooltip,\n    showType: true,\n  };\n\n  return (\n    <DatasourceItemContainer data-test=\"DatasourcePanelDragOption\" ref={drag}>\n      {type === DndItemType.Column ? (\n        <StyledColumnOption column={value as ColumnMeta} {...optionProps} />\n      ) : (\n        <StyledMetricOption metric={value as MetricOption} {...optionProps} />\n      )}\n      <Icons.Drag />\n    </DatasourceItemContainer>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport {\n  css,\n  styled,\n  t,\n  DatasourceType,\n  Metric,\n  QueryFormData,\n} from '@superset-ui/core';\n\nimport { ControlConfig, ColumnMeta } from '@superset-ui/chart-controls';\n\nimport { debounce, isArray } from 'lodash';\nimport { matchSorter, rankings } from 'match-sorter';\nimport Collapse from 'src/components/Collapse';\nimport Alert from 'src/components/Alert';\nimport { SaveDatasetModal } from 'src/SqlLab/components/SaveDatasetModal';\nimport { getDatasourceAsSaveableDataset } from 'src/utils/datasourceUtils';\nimport { Input } from 'src/components/Input';\nimport { FAST_DEBOUNCE } from 'src/constants';\nimport { FeatureFlag, isFeatureEnabled } from 'src/featureFlags';\nimport { ExploreActions } from 'src/explore/actions/exploreActions';\nimport Control from 'src/explore/components/Control';\nimport DatasourcePanelDragOption from './DatasourcePanelDragOption';\nimport { DndItemType } from '../DndItemType';\nimport { StyledColumnOption, StyledMetricOption } from '../optionRenderers';\nimport { DndItemValue } from './types';\n\ninterface DatasourceControl extends ControlConfig {\n  datasource?: IDatasource;\n}\n\nexport interface DataSourcePanelColumn {\n  is_dttm?: boolean | null;\n  description?: string | null;\n  expression?: string | null;\n  is_certified?: number | null;\n  column_name?: string | null;\n  name?: string | null;\n  type?: string;\n}\nexport interface IDatasource {\n  metrics: Metric[];\n  columns: DataSourcePanelColumn[];\n  id: number;\n  type: DatasourceType;\n  database: {\n    id: number;\n  };\n  sql?: string | null;\n  datasource_name?: string | null;\n  name?: string | null;\n  schema?: string | null;\n}\n\nexport interface Props {\n  datasource: IDatasource;\n  controls: {\n    datasource: DatasourceControl;\n  };\n  actions: Partial<ExploreActions> & Pick<ExploreActions, 'setControlValue'>;\n  // we use this props control force update when this panel resize\n  shouldForceUpdate?: number;\n  formData?: QueryFormData;\n}\n\nconst enableExploreDnd = isFeatureEnabled(\n  FeatureFlag.ENABLE_EXPLORE_DRAG_AND_DROP,\n);\n\nconst Button = styled.button`\n  background: none;\n  border: none;\n  text-decoration: underline;\n  color: ${({ theme }) => theme.colors.primary.dark1};\n`;\n\nconst ButtonContainer = styled.div`\n  text-align: center;\n  padding-top: 2px;\n`;\n\nconst DatasourceContainer = styled.div`\n  ${({ theme }) => css`\n    background-color: ${theme.colors.grayscale.light5};\n    position: relative;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    max-height: 100%;\n    .ant-collapse {\n      height: auto;\n    }\n    .field-selections {\n      padding: 0 0 ${4 * theme.gridUnit}px;\n      overflow: auto;\n    }\n    .field-length {\n      margin-bottom: ${theme.gridUnit * 2}px;\n      font-size: ${theme.typography.sizes.s}px;\n      color: ${theme.colors.grayscale.light1};\n    }\n    .form-control.input-md {\n      width: calc(100% - ${theme.gridUnit * 8}px);\n      height: ${theme.gridUnit * 8}px;\n      margin: ${theme.gridUnit * 2}px auto;\n    }\n    .type-label {\n      font-size: ${theme.typography.sizes.s}px;\n      color: ${theme.colors.grayscale.base};\n    }\n    .Control {\n      padding-bottom: 0;\n    }\n  `};\n`;\n\nconst LabelWrapper = styled.div`\n  ${({ theme }) => css`\n    overflow: hidden;\n    text-overflow: ellipsis;\n    font-size: ${theme.typography.sizes.s}px;\n    background-color: ${theme.colors.grayscale.light4};\n    margin: ${theme.gridUnit * 2}px 0;\n    border-radius: 4px;\n    padding: 0 ${theme.gridUnit}px;\n\n    &:first-of-type {\n      margin-top: 0;\n    }\n    &:last-of-type {\n      margin-bottom: 0;\n    }\n\n    ${enableExploreDnd &&\n    css`\n      padding: 0;\n      cursor: pointer;\n      &:hover {\n        background-color: ${theme.colors.grayscale.light3};\n      }\n    `}\n\n    & > span {\n      white-space: nowrap;\n    }\n\n    .option-label {\n      display: inline;\n    }\n\n    .metric-option {\n      & > svg {\n        min-width: ${theme.gridUnit * 4}px;\n      }\n      & > .option-label {\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n    }\n  `}\n`;\n\nconst SectionHeader = styled.span`\n  ${({ theme }) => `\n    font-size: ${theme.typography.sizes.m}px;\n    line-height: 1.3;\n  `}\n`;\n\nconst StyledInfoboxWrapper = styled.div`\n  ${({ theme }) => css`\n    margin: 0 ${theme.gridUnit * 2.5}px;\n\n    span {\n      text-decoration: underline;\n    }\n  `}\n`;\n\nconst LabelContainer = (props: {\n  children: React.ReactElement;\n  className: string;\n}) => {\n  const labelRef = useRef<HTMLDivElement>(null);\n  const extendedProps = {\n    labelRef,\n  };\n  return (\n    <LabelWrapper className={props.className}>\n      {React.cloneElement(props.children, extendedProps)}\n    </LabelWrapper>\n  );\n};\n\nexport default function DataSourcePanel({\n  datasource,\n  formData,\n  controls: { datasource: datasourceControl },\n  actions,\n  shouldForceUpdate,\n}: Props) {\n  const { columns: _columns, metrics } = datasource;\n  // display temporal column first\n  const columns = useMemo(\n    () =>\n      [...(isArray(_columns) ? _columns : [])].sort((col1, col2) => {\n        if (col1?.is_dttm && !col2?.is_dttm) {\n          return -1;\n        }\n        if (col2?.is_dttm && !col1?.is_dttm) {\n          return 1;\n        }\n        return 0;\n      }),\n    [_columns],\n  );\n\n  const [showSaveDatasetModal, setShowSaveDatasetModal] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n  const [lists, setList] = useState({\n    columns,\n    metrics,\n  });\n  const [showAllMetrics, setShowAllMetrics] = useState(false);\n  const [showAllColumns, setShowAllColumns] = useState(false);\n\n  const DEFAULT_MAX_COLUMNS_LENGTH = 50;\n  const DEFAULT_MAX_METRICS_LENGTH = 50;\n\n  const search = useMemo(\n    () =>\n      debounce((value: string) => {\n        if (value === '') {\n          setList({ columns, metrics });\n          return;\n        }\n        setList({\n          columns: matchSorter(columns, value, {\n            keys: [\n              {\n                key: 'verbose_name',\n                threshold: rankings.CONTAINS,\n              },\n              {\n                key: 'column_name',\n                threshold: rankings.CONTAINS,\n              },\n              {\n                key: item =>\n                  [item?.description ?? '', item?.expression ?? ''].map(\n                    x => x?.replace(/[_\\n\\s]+/g, ' ') || '',\n                  ),\n                threshold: rankings.CONTAINS,\n                maxRanking: rankings.CONTAINS,\n              },\n            ],\n            keepDiacritics: true,\n          }),\n          metrics: matchSorter(metrics, value, {\n            keys: [\n              {\n                key: 'verbose_name',\n                threshold: rankings.CONTAINS,\n              },\n              {\n                key: 'metric_name',\n                threshold: rankings.CONTAINS,\n              },\n              {\n                key: item =>\n                  [item?.description ?? '', item?.expression ?? ''].map(\n                    x => x?.replace(/[_\\n\\s]+/g, ' ') || '',\n                  ),\n                threshold: rankings.CONTAINS,\n                maxRanking: rankings.CONTAINS,\n              },\n            ],\n            keepDiacritics: true,\n            baseSort: (a, b) =>\n              Number(b?.item?.is_certified ?? 0) -\n                Number(a?.item?.is_certified ?? 0) ||\n              String(a?.rankedValue ?? '').localeCompare(b?.rankedValue ?? ''),\n          }),\n        });\n      }, FAST_DEBOUNCE),\n    [columns, metrics],\n  );\n\n  useEffect(() => {\n    setList({\n      columns,\n      metrics,\n    });\n    setInputValue('');\n  }, [columns, datasource, metrics]);\n\n  const sortCertifiedFirst = (slice: DataSourcePanelColumn[]) =>\n    slice.sort((a, b) => (b?.is_certified ?? 0) - (a?.is_certified ?? 0));\n\n  const metricSlice = useMemo(\n    () =>\n      showAllMetrics\n        ? lists?.metrics\n        : lists?.metrics?.slice?.(0, DEFAULT_MAX_METRICS_LENGTH),\n    [lists?.metrics, showAllMetrics],\n  );\n\n  const columnSlice = useMemo(\n    () =>\n      showAllColumns\n        ? sortCertifiedFirst(lists?.columns)\n        : sortCertifiedFirst(\n            lists?.columns?.slice?.(0, DEFAULT_MAX_COLUMNS_LENGTH),\n          ),\n    [lists.columns, showAllColumns],\n  );\n\n  const showInfoboxCheck = () => {\n    if (sessionStorage.getItem('showInfobox') === 'false') return false;\n    return true;\n  };\n\n  const saveableDatasets = {\n    query: DatasourceType.Query,\n    saved_query: DatasourceType.SavedQuery,\n  };\n\n  const datasourceIsSaveable =\n    datasource.type && saveableDatasets[datasource.type];\n\n  const mainBody = useMemo(\n    () => (\n      <>\n        <Input\n          allowClear\n          onChange={evt => {\n            setInputValue(evt.target.value);\n            search(evt.target.value);\n          }}\n          value={inputValue}\n          className=\"form-control input-md\"\n          placeholder={t('Search Metrics & Columns')}\n        />\n        <div className=\"field-selections\">\n          {datasourceIsSaveable && showInfoboxCheck() && (\n            <StyledInfoboxWrapper>\n              <Alert\n                closable\n                onClose={() => sessionStorage.setItem('showInfobox', 'false')}\n                type=\"info\"\n                message=\"\"\n                description={\n                  <>\n                    <span\n                      role=\"button\"\n                      tabIndex={0}\n                      onClick={() => setShowSaveDatasetModal(true)}\n                      className=\"add-dataset-alert-description\"\n                    >\n                      {t('Create a dataset')}\n                    </span>\n                    {t(' to edit or add columns and metrics.')}\n                  </>\n                }\n              />\n            </StyledInfoboxWrapper>\n          )}\n          <Collapse\n            defaultActiveKey={['metrics', 'column']}\n            expandIconPosition=\"right\"\n            ghost\n          >\n            {metrics?.length && (\n              <Collapse.Panel\n                header={<SectionHeader>{t('Metrics')}</SectionHeader>}\n                key=\"metrics\"\n              >\n                <div className=\"field-length\">\n                  {t(\n                    `Showing %s of %s`,\n                    metricSlice?.length,\n                    lists?.metrics.length,\n                  )}\n                </div>\n                {metricSlice?.map?.((m: Metric) => (\n                  <LabelContainer\n                    key={m.metric_name + String(shouldForceUpdate)}\n                    className=\"column\"\n                  >\n                    {enableExploreDnd ? (\n                      <DatasourcePanelDragOption\n                        value={m}\n                        type={DndItemType.Metric}\n                      />\n                    ) : (\n                      <StyledMetricOption metric={m} showType />\n                    )}\n                  </LabelContainer>\n                ))}\n                {lists?.metrics?.length > DEFAULT_MAX_METRICS_LENGTH ? (\n                  <ButtonContainer>\n                    <Button onClick={() => setShowAllMetrics(!showAllMetrics)}>\n                      {showAllMetrics ? t('Show less...') : t('Show all...')}\n                    </Button>\n                  </ButtonContainer>\n                ) : (\n                  <></>\n                )}\n              </Collapse.Panel>\n            )}\n            <Collapse.Panel\n              header={<SectionHeader>{t('Columns')}</SectionHeader>}\n              key=\"column\"\n            >\n              <div className=\"field-length\">\n                {t(\n                  `Showing %s of %s`,\n                  columnSlice.length,\n                  lists.columns.length,\n                )}\n              </div>\n              {columnSlice.map(col => (\n                <LabelContainer\n                  key={col.column_name + String(shouldForceUpdate)}\n                  className=\"column\"\n                >\n                  {enableExploreDnd ? (\n                    <DatasourcePanelDragOption\n                      value={col as DndItemValue}\n                      type={DndItemType.Column}\n                    />\n                  ) : (\n                    <StyledColumnOption column={col as ColumnMeta} showType />\n                  )}\n                </LabelContainer>\n              ))}\n              {lists.columns.length > DEFAULT_MAX_COLUMNS_LENGTH ? (\n                <ButtonContainer>\n                  <Button onClick={() => setShowAllColumns(!showAllColumns)}>\n                    {showAllColumns ? t('Show Less...') : t('Show all...')}\n                  </Button>\n                </ButtonContainer>\n              ) : (\n                <></>\n              )}\n            </Collapse.Panel>\n          </Collapse>\n        </div>\n      </>\n    ),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      columnSlice,\n      inputValue,\n      lists.columns.length,\n      lists?.metrics?.length,\n      metricSlice,\n      search,\n      showAllColumns,\n      showAllMetrics,\n      datasourceIsSaveable,\n      shouldForceUpdate,\n    ],\n  );\n\n  return (\n    <DatasourceContainer>\n      {datasourceIsSaveable && showSaveDatasetModal && (\n        <SaveDatasetModal\n          visible={showSaveDatasetModal}\n          onHide={() => setShowSaveDatasetModal(false)}\n          buttonTextOnSave={t('Save')}\n          buttonTextOnOverwrite={t('Overwrite')}\n          datasource={getDatasourceAsSaveableDataset(datasource)}\n          openWindow={false}\n          formData={formData}\n        />\n      )}\n      <Control {...datasourceControl} name=\"datasource\" actions={actions} />\n      {datasource.id != null && mainBody}\n    </DatasourceContainer>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport memoize from 'lodash/memoize';\nimport { isControlPanelSectionConfig } from '@superset-ui/chart-controls';\nimport { getChartControlPanelRegistry } from '@superset-ui/core';\nimport { controls } from '../explore/controls';\n\nconst memoizedControls = memoize((vizType, controlPanel) => {\n  const controlsMap = {};\n  (controlPanel?.controlPanelSections || [])\n    .filter(isControlPanelSectionConfig)\n    .forEach(section => {\n      section.controlSetRows.forEach(row => {\n        row.forEach(control => {\n          if (!control) return;\n          if (typeof control === 'string') {\n            // For now, we have to look in controls.jsx to get the config for some controls.\n            // Once everything is migrated out, delete this if statement.\n            controlsMap[control] = controls[control];\n          } else if (control.name && control.config) {\n            // condition needed because there are elements, e.g. <hr /> in some control configs (I'm looking at you, FilterBox!)\n            controlsMap[control.name] = control.config;\n          }\n        });\n      });\n    });\n  return controlsMap;\n});\n\nconst getControlsForVizType = vizType => {\n  const controlPanel = getChartControlPanelRegistry().get(vizType);\n  return memoizedControls(vizType, controlPanel);\n};\n\nexport default getControlsForVizType;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isEqual, isEmpty } from 'lodash';\nimport { styled, t } from '@superset-ui/core';\nimport { sanitizeFormData } from 'src/explore/exploreUtils/formData';\nimport getControlsForVizType from 'src/utils/getControlsForVizType';\nimport { safeStringify } from 'src/utils/safeStringify';\nimport { Tooltip } from 'src/components/Tooltip';\nimport ModalTrigger from '../ModalTrigger';\nimport TableView from '../TableView';\n\nconst propTypes = {\n  origFormData: PropTypes.object.isRequired,\n  currentFormData: PropTypes.object.isRequired,\n};\n\nconst StyledLabel = styled.span`\n  ${({ theme }) => `\n    font-size: ${theme.typography.sizes.s}px;\n    color: ${theme.colors.grayscale.dark1};\n    background-color: ${theme.colors.alert.base};\n\n    &: hover {\n      background-color: ${theme.colors.alert.dark1};\n    }\n  `}\n`;\n\nfunction alterForComparison(value) {\n  // Considering `[]`, `{}`, `null` and `undefined` as identical\n  // for this purpose\n  if (value === undefined || value === null || value === '') {\n    return null;\n  }\n  if (typeof value === 'object') {\n    if (Array.isArray(value) && value.length === 0) {\n      return null;\n    }\n    const keys = Object.keys(value);\n    if (keys && keys.length === 0) {\n      return null;\n    }\n  }\n  return value;\n}\n\nexport default class AlteredSliceTag extends React.Component {\n  constructor(props) {\n    super(props);\n    const diffs = this.getDiffs(props);\n    const controlsMap = getControlsForVizType(this.props.origFormData.viz_type);\n    const rows = this.getRowsFromDiffs(diffs, controlsMap);\n\n    this.state = { rows, hasDiffs: !isEmpty(diffs), controlsMap };\n  }\n\n  UNSAFE_componentWillReceiveProps(newProps) {\n    // Update differences if need be\n    if (isEqual(this.props, newProps)) {\n      return;\n    }\n    const diffs = this.getDiffs(newProps);\n    this.setState(prevState => ({\n      rows: this.getRowsFromDiffs(diffs, prevState.controlsMap),\n      hasDiffs: !isEmpty(diffs),\n    }));\n  }\n\n  getRowsFromDiffs(diffs, controlsMap) {\n    return Object.entries(diffs).map(([key, diff]) => ({\n      control: (controlsMap[key] && controlsMap[key].label) || key,\n      before: this.formatValue(diff.before, key, controlsMap),\n      after: this.formatValue(diff.after, key, controlsMap),\n    }));\n  }\n\n  getDiffs(props) {\n    // Returns all properties that differ in the\n    // current form data and the saved form data\n    const ofd = sanitizeFormData(props.origFormData);\n    const cfd = sanitizeFormData(props.currentFormData);\n\n    const fdKeys = Object.keys(cfd);\n    const diffs = {};\n    fdKeys.forEach(fdKey => {\n      if (!ofd[fdKey] && !cfd[fdKey]) {\n        return;\n      }\n      if (['filters', 'having', 'having_filters', 'where'].includes(fdKey)) {\n        return;\n      }\n      if (!this.isEqualish(ofd[fdKey], cfd[fdKey])) {\n        diffs[fdKey] = { before: ofd[fdKey], after: cfd[fdKey] };\n      }\n    });\n    return diffs;\n  }\n\n  isEqualish(val1, val2) {\n    return isEqual(alterForComparison(val1), alterForComparison(val2));\n  }\n\n  formatValue(value, key, controlsMap) {\n    // Format display value based on the control type\n    // or the value type\n    if (value === undefined) {\n      return 'N/A';\n    }\n    if (value === null) {\n      return 'null';\n    }\n    if (controlsMap[key]?.type === 'AdhocFilterControl') {\n      if (!value.length) {\n        return '[]';\n      }\n      return value\n        .map(v => {\n          const filterVal =\n            v.comparator && v.comparator.constructor === Array\n              ? `[${v.comparator.join(', ')}]`\n              : v.comparator;\n          return `${v.subject} ${v.operator} ${filterVal}`;\n        })\n        .join(', ');\n    }\n    if (controlsMap[key]?.type === 'BoundsControl') {\n      return `Min: ${value[0]}, Max: ${value[1]}`;\n    }\n    if (controlsMap[key]?.type === 'CollectionControl') {\n      return value.map(v => safeStringify(v)).join(', ');\n    }\n    if (\n      controlsMap[key]?.type === 'MetricsControl' &&\n      value.constructor === Array\n    ) {\n      const formattedValue = value.map(v => v?.label ?? v);\n      return formattedValue.length ? formattedValue.join(', ') : '[]';\n    }\n    if (typeof value === 'boolean') {\n      return value ? 'true' : 'false';\n    }\n    if (value.constructor === Array) {\n      const formattedValue = value.map(v => v?.label ?? v);\n      return formattedValue.length ? formattedValue.join(', ') : '[]';\n    }\n    if (typeof value === 'string' || typeof value === 'number') {\n      return value;\n    }\n    return safeStringify(value);\n  }\n\n  renderModalBody() {\n    const columns = [\n      {\n        accessor: 'control',\n        Header: 'Control',\n      },\n      {\n        accessor: 'before',\n        Header: 'Before',\n      },\n      {\n        accessor: 'after',\n        Header: 'After',\n      },\n    ];\n    // set the wrap text in the specific columns.\n    const columnsForWrapText = ['Control', 'Before', 'After'];\n\n    return (\n      <TableView\n        columns={columns}\n        data={this.state.rows}\n        pageSize={50}\n        className=\"table-condensed\"\n        columnsForWrapText={columnsForWrapText}\n      />\n    );\n  }\n\n  renderTriggerNode() {\n    return (\n      <Tooltip id=\"difference-tooltip\" title={t('Click to see difference')}>\n        <StyledLabel className=\"label\">{t('Altered')}</StyledLabel>\n      </Tooltip>\n    );\n  }\n\n  render() {\n    // Return nothing if there are no differences\n    if (!this.state.hasDiffs) {\n      return null;\n    }\n    // Render the label-warning 'Altered' tag which the user may\n    // click to open a modal containing a table summarizing the\n    // differences in the slice\n    return (\n      <ModalTrigger\n        triggerNode={this.renderTriggerNode()}\n        modalTitle={t('Chart changes')}\n        modalBody={this.renderModalBody()}\n        responsive\n      />\n    );\n  }\n}\n\nAlteredSliceTag.propTypes = propTypes;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { Tooltip } from 'src/components/Tooltip';\nimport {\n  CategoricalColorNamespace,\n  css,\n  SupersetClient,\n  t,\n} from '@superset-ui/core';\nimport { toggleActive, deleteActiveReport } from 'src/reports/actions/reports';\nimport { chartPropShape } from 'src/dashboard/util/propShapes';\nimport AlteredSliceTag from 'src/components/AlteredSliceTag';\nimport Button from 'src/components/Button';\nimport Icons from 'src/components/Icons';\nimport PropertiesModal from 'src/explore/components/PropertiesModal';\nimport { sliceUpdated } from 'src/explore/actions/exploreActions';\nimport { PageHeaderWithActions } from 'src/components/PageHeaderWithActions';\nimport { useExploreAdditionalActionsMenu } from '../useExploreAdditionalActionsMenu';\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  canOverwrite: PropTypes.bool.isRequired,\n  canDownload: PropTypes.bool.isRequired,\n  dashboardId: PropTypes.number,\n  isStarred: PropTypes.bool.isRequired,\n  slice: PropTypes.object,\n  sliceName: PropTypes.string,\n  table_name: PropTypes.string,\n  formData: PropTypes.object,\n  ownState: PropTypes.object,\n  timeout: PropTypes.number,\n  chart: chartPropShape,\n  saveDisabled: PropTypes.bool,\n};\n\nconst saveButtonStyles = theme => css`\n  color: ${theme.colors.primary.dark2};\n  & > span[role='img'] {\n    margin-right: 0;\n  }\n`;\n\nexport const ExploreChartHeader = ({\n  dashboardId,\n  slice,\n  actions,\n  formData,\n  ownState,\n  chart,\n  user,\n  canOverwrite,\n  canDownload,\n  isStarred,\n  sliceUpdated,\n  sliceName,\n  onSaveChart,\n  saveDisabled,\n}) => {\n  const { latestQueryFormData, sliceFormData } = chart;\n  const [isPropertiesModalOpen, setIsPropertiesModalOpen] = useState(false);\n\n  const fetchChartDashboardData = async () => {\n    await SupersetClient.get({\n      endpoint: `/api/v1/chart/${slice.slice_id}`,\n    })\n      .then(res => {\n        const response = res?.json?.result;\n        if (response && response.dashboards && response.dashboards.length) {\n          const { dashboards } = response;\n          const dashboard =\n            dashboardId &&\n            dashboards.length &&\n            dashboards.find(d => d.id === dashboardId);\n\n          if (dashboard && dashboard.json_metadata) {\n            // setting the chart to use the dashboard custom label colors if any\n            const metadata = JSON.parse(dashboard.json_metadata);\n            const sharedLabelColors = metadata.shared_label_colors || {};\n            const customLabelColors = metadata.label_colors || {};\n            const mergedLabelColors = {\n              ...sharedLabelColors,\n              ...customLabelColors,\n            };\n\n            const categoricalNamespace =\n              CategoricalColorNamespace.getNamespace();\n\n            Object.keys(mergedLabelColors).forEach(label => {\n              categoricalNamespace.setColor(\n                label,\n                mergedLabelColors[label],\n                metadata.color_scheme,\n              );\n            });\n          }\n        }\n      })\n      .catch(() => {});\n  };\n\n  useEffect(() => {\n    if (dashboardId) {\n      fetchChartDashboardData();\n    }\n  }, []);\n\n  const openPropertiesModal = () => {\n    setIsPropertiesModalOpen(true);\n  };\n\n  const closePropertiesModal = () => {\n    setIsPropertiesModalOpen(false);\n  };\n\n  const [menu, isDropdownVisible, setIsDropdownVisible] =\n    useExploreAdditionalActionsMenu(\n      latestQueryFormData,\n      canDownload,\n      slice,\n      actions.redirectSQLLab,\n      openPropertiesModal,\n      ownState,\n    );\n\n  const oldSliceName = slice?.slice_name;\n  return (\n    <>\n      <PageHeaderWithActions\n        editableTitleProps={{\n          title: sliceName,\n          canEdit:\n            !slice ||\n            canOverwrite ||\n            (slice?.owners || []).includes(user?.userId),\n          onSave: actions.updateChartTitle,\n          placeholder: t('Add the name of the chart'),\n          label: t('Chart title'),\n        }}\n        showTitlePanelItems={!!slice}\n        certificatiedBadgeProps={{\n          certifiedBy: slice?.certified_by,\n          details: slice?.certification_details,\n        }}\n        showFaveStar={!!user?.userId}\n        faveStarProps={{\n          itemId: slice?.slice_id,\n          fetchFaveStar: actions.fetchFaveStar,\n          saveFaveStar: actions.saveFaveStar,\n          isStarred,\n          showTooltip: true,\n        }}\n        titlePanelAdditionalItems={\n          sliceFormData ? (\n            <AlteredSliceTag\n              className=\"altered\"\n              origFormData={{\n                ...sliceFormData,\n                chartTitle: oldSliceName,\n              }}\n              currentFormData={{ ...formData, chartTitle: sliceName }}\n            />\n          ) : null\n        }\n        rightPanelAdditionalItems={\n          <Tooltip\n            title={\n              saveDisabled\n                ? t('Add required control values to save chart')\n                : null\n            }\n          >\n            {/* needed to wrap button in a div - antd tooltip doesn't work with disabled button */}\n            <div>\n              <Button\n                buttonStyle=\"secondary\"\n                onClick={onSaveChart}\n                disabled={saveDisabled}\n                data-test=\"query-save-button\"\n                css={saveButtonStyles}\n              >\n                <Icons.SaveOutlined iconSize=\"l\" />\n                {t('Save')}\n              </Button>\n            </div>\n          </Tooltip>\n        }\n        additionalActionsMenu={menu}\n        menuDropdownProps={{\n          visible: isDropdownVisible,\n          onVisibleChange: setIsDropdownVisible,\n        }}\n      />\n      {isPropertiesModalOpen && (\n        <PropertiesModal\n          show={isPropertiesModalOpen}\n          onHide={closePropertiesModal}\n          onSave={sliceUpdated}\n          slice={slice}\n        />\n      )}\n    </>\n  );\n};\n\nExploreChartHeader.propTypes = propTypes;\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    { sliceUpdated, toggleActive, deleteActiveReport },\n    dispatch,\n  );\n}\n\nexport default connect(null, mapDispatchToProps)(ExploreChartHeader);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint camelcase: 0 */\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { styled, t, css, useTheme, logging } from '@superset-ui/core';\nimport { debounce, pick } from 'lodash';\nimport { Resizable } from 're-resizable';\nimport { useChangeEffect } from 'src/hooks/useChangeEffect';\nimport { usePluginContext } from 'src/components/DynamicPlugins';\nimport { Global } from '@emotion/react';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { usePrevious } from 'src/hooks/usePrevious';\nimport { useComponentDidMount } from 'src/hooks/useComponentDidMount';\nimport Icons from 'src/components/Icons';\nimport {\n  getItem,\n  setItem,\n  LocalStorageKeys,\n} from 'src/utils/localStorageHelpers';\nimport { RESERVED_CHART_URL_PARAMS, URL_PARAMS } from 'src/constants';\nimport { areObjectsEqual } from 'src/reduxUtils';\nimport * as logActions from 'src/logger/actions';\nimport {\n  LOG_ACTIONS_MOUNT_EXPLORER,\n  LOG_ACTIONS_CHANGE_EXPLORE_CONTROLS,\n} from 'src/logger/LogUtils';\nimport { getUrlParam } from 'src/utils/urlUtils';\nimport cx from 'classnames';\nimport * as chartActions from 'src/components/Chart/chartAction';\nimport { fetchDatasourceMetadata } from 'src/dashboard/util/fetchDatasourceMetadata';\nimport { chartPropShape } from 'src/dashboard/util/propShapes';\nimport { mergeExtraFormData } from 'src/dashboard/components/nativeFilters/utils';\nimport { postFormData, putFormData } from 'src/explore/exploreUtils/formData';\nimport { mountExploreUrl } from 'src/explore/exploreUtils';\nimport { getFormDataFromControls } from 'src/explore/controlUtils';\nimport * as exploreActions from 'src/explore/actions/exploreActions';\nimport * as saveModalActions from 'src/explore/actions/saveModalActions';\nimport { useTabId } from 'src/hooks/useTabId';\nimport ExploreChartPanel from '../ExploreChartPanel';\nimport ConnectedControlPanelsContainer from '../ControlPanelsContainer';\nimport SaveModal from '../SaveModal';\nimport DataSourcePanel from '../DatasourcePanel';\nimport ConnectedExploreChartHeader from '../ExploreChartHeader';\n\nconst propTypes = {\n  ...ExploreChartPanel.propTypes,\n  actions: PropTypes.object.isRequired,\n  datasource_type: PropTypes.string.isRequired,\n  dashboardId: PropTypes.number,\n  isDatasourceMetaLoading: PropTypes.bool.isRequired,\n  chart: chartPropShape.isRequired,\n  slice: PropTypes.object,\n  sliceName: PropTypes.string,\n  controls: PropTypes.object.isRequired,\n  forcedHeight: PropTypes.string,\n  form_data: PropTypes.object.isRequired,\n  standalone: PropTypes.number.isRequired,\n  force: PropTypes.bool,\n  timeout: PropTypes.number,\n  impressionId: PropTypes.string,\n  vizType: PropTypes.string,\n};\n\nconst ExploreContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  min-height: 0;\n`;\n\nconst ExplorePanelContainer = styled.div`\n  ${({ theme }) => css`\n    background: ${theme.colors.grayscale.light5};\n    text-align: left;\n    position: relative;\n    width: 100%;\n    max-height: 100%;\n    min-height: 0;\n    display: flex;\n    flex: 1;\n    flex-wrap: nowrap;\n    border-top: 1px solid ${theme.colors.grayscale.light2};\n    .explore-column {\n      display: flex;\n      flex-direction: column;\n      padding: ${theme.gridUnit * 2}px 0;\n      max-height: 100%;\n    }\n    .data-source-selection {\n      background-color: ${theme.colors.grayscale.light5};\n      padding: ${theme.gridUnit * 2}px 0;\n      border-right: 1px solid ${theme.colors.grayscale.light2};\n    }\n    .main-explore-content {\n      flex: 1;\n      min-width: ${theme.gridUnit * 128}px;\n      border-left: 1px solid ${theme.colors.grayscale.light2};\n      padding: 0 ${theme.gridUnit * 4}px;\n      .panel {\n        margin-bottom: 0;\n      }\n    }\n    .controls-column {\n      align-self: flex-start;\n      padding: 0;\n    }\n    .title-container {\n      position: relative;\n      display: flex;\n      flex-direction: row;\n      padding: 0 ${theme.gridUnit * 2}px 0 ${theme.gridUnit * 4}px;\n      justify-content: space-between;\n      .horizontal-text {\n        font-size: ${theme.typography.sizes.m}px;\n      }\n    }\n    .no-show {\n      display: none;\n    }\n    .vertical-text {\n      writing-mode: vertical-rl;\n      text-orientation: mixed;\n    }\n    .sidebar {\n      height: 100%;\n      background-color: ${theme.colors.grayscale.light4};\n      padding: ${theme.gridUnit * 2}px;\n      width: ${theme.gridUnit * 8}px;\n    }\n    .collapse-icon > svg {\n      color: ${theme.colors.primary.base};\n    }\n  `};\n`;\n\nconst updateHistory = debounce(\n  async (\n    formData,\n    datasourceId,\n    datasourceType,\n    isReplace,\n    standalone,\n    force,\n    title,\n    tabId,\n  ) => {\n    const payload = { ...formData };\n    const chartId = formData.slice_id;\n    const additionalParam = {};\n    if (chartId) {\n      additionalParam[URL_PARAMS.sliceId.name] = chartId;\n    } else {\n      additionalParam[URL_PARAMS.datasourceId.name] = datasourceId;\n      additionalParam[URL_PARAMS.datasourceType.name] = datasourceType;\n    }\n\n    const urlParams = payload?.url_params || {};\n    Object.entries(urlParams).forEach(([key, value]) => {\n      if (!RESERVED_CHART_URL_PARAMS.includes(key)) {\n        additionalParam[key] = value;\n      }\n    });\n\n    try {\n      let key;\n      let stateModifier;\n      if (isReplace) {\n        key = await postFormData(\n          datasourceId,\n          datasourceType,\n          formData,\n          chartId,\n          tabId,\n        );\n        stateModifier = 'replaceState';\n      } else {\n        key = getUrlParam(URL_PARAMS.formDataKey);\n        await putFormData(\n          datasourceId,\n          datasourceType,\n          key,\n          formData,\n          chartId,\n          tabId,\n        );\n        stateModifier = 'pushState';\n      }\n      const url = mountExploreUrl(\n        standalone ? URL_PARAMS.standalone.name : null,\n        {\n          [URL_PARAMS.formDataKey.name]: key,\n          ...additionalParam,\n        },\n        force,\n      );\n      window.history[stateModifier](payload, title, url);\n    } catch (e) {\n      logging.warn('Failed at altering browser history', e);\n    }\n  },\n  1000,\n);\n\nfunction ExploreViewContainer(props) {\n  const dynamicPluginContext = usePluginContext();\n  const dynamicPlugin = dynamicPluginContext.dynamicPlugins[props.vizType];\n  const isDynamicPluginLoading = dynamicPlugin && dynamicPlugin.mounting;\n  const wasDynamicPluginLoading = usePrevious(isDynamicPluginLoading);\n\n  /** the state of controls in the previous render */\n  const previousControls = usePrevious(props.controls);\n  /** the state of controls last time a query was triggered */\n  const [lastQueriedControls, setLastQueriedControls] = useState(\n    props.controls,\n  );\n\n  const [showingModal, setShowingModal] = useState(false);\n  const [isCollapsed, setIsCollapsed] = useState(false);\n  const [shouldForceUpdate, setShouldForceUpdate] = useState(-1);\n  const tabId = useTabId();\n\n  const theme = useTheme();\n\n  const defaultSidebarsWidth = {\n    controls_width: 320,\n    datasource_width: 300,\n  };\n\n  const addHistory = useCallback(\n    async ({ isReplace = false, title } = {}) => {\n      const formData = props.dashboardId\n        ? {\n            ...props.form_data,\n            dashboardId: props.dashboardId,\n          }\n        : props.form_data;\n      const { id: datasourceId, type: datasourceType } = props.datasource;\n\n      updateHistory(\n        formData,\n        datasourceId,\n        datasourceType,\n        isReplace,\n        props.standalone,\n        props.force,\n        title,\n        tabId,\n      );\n    },\n    [\n      props.dashboardId,\n      props.form_data,\n      props.datasource.id,\n      props.datasource.type,\n      props.standalone,\n      props.force,\n      tabId,\n    ],\n  );\n\n  const handlePopstate = useCallback(() => {\n    const formData = window.history.state;\n    if (formData && Object.keys(formData).length) {\n      props.actions.setExploreControls(formData);\n      props.actions.postChartFormData(\n        formData,\n        props.force,\n        props.timeout,\n        props.chart.id,\n      );\n    }\n  }, [props.actions, props.chart.id, props.timeout]);\n\n  const onQuery = useCallback(() => {\n    props.actions.setForceQuery(false);\n    props.actions.triggerQuery(true, props.chart.id);\n    addHistory();\n    setLastQueriedControls(props.controls);\n  }, [props.controls, addHistory, props.actions, props.chart.id]);\n\n  const handleKeydown = useCallback(\n    event => {\n      const controlOrCommand = event.ctrlKey || event.metaKey;\n      if (controlOrCommand) {\n        const isEnter = event.key === 'Enter' || event.keyCode === 13;\n        const isS = event.key === 's' || event.keyCode === 83;\n        if (isEnter) {\n          onQuery();\n        } else if (isS) {\n          if (props.slice) {\n            props.actions\n              .saveSlice(props.form_data, {\n                action: 'overwrite',\n                slice_id: props.slice.slice_id,\n                slice_name: props.slice.slice_name,\n                add_to_dash: 'noSave',\n                goto_dash: false,\n              })\n              .then(({ data }) => {\n                window.location = data.slice.slice_url;\n              });\n          }\n        }\n      }\n    },\n    [onQuery, props.actions, props.form_data, props.slice],\n  );\n\n  function onStop() {\n    if (props.chart && props.chart.queryController) {\n      props.chart.queryController.abort();\n    }\n  }\n\n  function toggleModal() {\n    setShowingModal(!showingModal);\n  }\n\n  function toggleCollapse() {\n    setIsCollapsed(!isCollapsed);\n  }\n\n  useComponentDidMount(() => {\n    props.actions.logEvent(LOG_ACTIONS_MOUNT_EXPLORER);\n  });\n\n  useChangeEffect(tabId, (previous, current) => {\n    if (current) {\n      addHistory({ isReplace: true });\n    }\n  });\n\n  const previousHandlePopstate = usePrevious(handlePopstate);\n  useEffect(() => {\n    if (previousHandlePopstate) {\n      window.removeEventListener('popstate', previousHandlePopstate);\n    }\n    window.addEventListener('popstate', handlePopstate);\n    return () => {\n      window.removeEventListener('popstate', handlePopstate);\n    };\n  }, [handlePopstate, previousHandlePopstate]);\n\n  const previousHandleKeyDown = usePrevious(handleKeydown);\n  useEffect(() => {\n    if (previousHandleKeyDown) {\n      window.removeEventListener('keydown', previousHandleKeyDown);\n    }\n    document.addEventListener('keydown', handleKeydown);\n    return () => {\n      document.removeEventListener('keydown', handleKeydown);\n    };\n  }, [handleKeydown, previousHandleKeyDown]);\n\n  useEffect(() => {\n    if (wasDynamicPluginLoading && !isDynamicPluginLoading) {\n      // reload the controls now that we actually have the control config\n      props.actions.dynamicPluginControlsReady();\n    }\n  }, [isDynamicPluginLoading]);\n\n  useEffect(() => {\n    const hasError = Object.values(props.controls).some(\n      control =>\n        control.validationErrors && control.validationErrors.length > 0,\n    );\n    if (!hasError) {\n      props.actions.triggerQuery(true, props.chart.id);\n    }\n  }, []);\n\n  const reRenderChart = useCallback(\n    controlsChanged => {\n      const newQueryFormData = controlsChanged\n        ? {\n            ...props.chart.latestQueryFormData,\n            ...getFormDataFromControls(pick(props.controls, controlsChanged)),\n          }\n        : getFormDataFromControls(props.controls);\n      props.actions.updateQueryFormData(newQueryFormData, props.chart.id);\n      props.actions.renderTriggered(new Date().getTime(), props.chart.id);\n      addHistory();\n    },\n    [\n      addHistory,\n      props.actions,\n      props.chart.id,\n      props.chart.latestQueryFormData,\n      props.controls,\n    ],\n  );\n\n  // effect to run when controls change\n  useEffect(() => {\n    if (\n      previousControls &&\n      props.chart.latestQueryFormData.viz_type === props.controls.viz_type.value\n    ) {\n      if (\n        props.controls.datasource &&\n        (previousControls.datasource == null ||\n          props.controls.datasource.value !== previousControls.datasource.value)\n      ) {\n        // this should really be handled by actions\n        fetchDatasourceMetadata(props.form_data.datasource, true);\n      }\n\n      const changedControlKeys = Object.keys(props.controls).filter(\n        key =>\n          typeof previousControls[key] !== 'undefined' &&\n          !areObjectsEqual(\n            props.controls[key].value,\n            previousControls[key].value,\n          ),\n      );\n\n      // this should also be handled by the actions that are actually changing the controls\n      const displayControlsChanged = changedControlKeys.filter(\n        key => props.controls[key].renderTrigger,\n      );\n      if (displayControlsChanged.length > 0) {\n        reRenderChart(displayControlsChanged);\n      }\n    }\n  }, [props.controls, props.ownState]);\n\n  const chartIsStale = useMemo(() => {\n    if (lastQueriedControls) {\n      const changedControlKeys = Object.keys(props.controls).filter(\n        key =>\n          typeof lastQueriedControls[key] !== 'undefined' &&\n          !areObjectsEqual(\n            props.controls[key].value,\n            lastQueriedControls[key].value,\n          ),\n      );\n\n      return changedControlKeys.some(\n        key =>\n          !props.controls[key].renderTrigger &&\n          !props.controls[key].dontRefreshOnChange,\n      );\n    }\n    return false;\n  }, [lastQueriedControls, props.controls]);\n\n  const saveAction = getUrlParam(URL_PARAMS.saveAction);\n  useChangeEffect(saveAction, () => {\n    if (['saveas', 'overwrite'].includes(saveAction)) {\n      onQuery();\n      addHistory({ isReplace: true });\n    }\n  });\n\n  useEffect(() => {\n    if (props.ownState !== undefined) {\n      onQuery();\n      reRenderChart();\n    }\n  }, [props.ownState]);\n\n  if (chartIsStale) {\n    props.actions.logEvent(LOG_ACTIONS_CHANGE_EXPLORE_CONTROLS);\n  }\n\n  const errorMessage = useMemo(() => {\n    const controlsWithErrors = Object.values(props.controls).filter(\n      control =>\n        control.validationErrors && control.validationErrors.length > 0,\n    );\n    if (controlsWithErrors.length === 0) {\n      return null;\n    }\n\n    const errorMessages = controlsWithErrors.map(\n      control => control.validationErrors,\n    );\n    const uniqueErrorMessages = [...new Set(errorMessages.flat())];\n\n    const errors = uniqueErrorMessages\n      .map(message => {\n        const matchingLabels = controlsWithErrors\n          .filter(control => control.validationErrors?.includes(message))\n          .map(control => control.label);\n        return [matchingLabels, message];\n      })\n      .map(([labels, message]) => (\n        <div key={message}>\n          {labels.length > 1 ? t('Controls labeled ') : t('Control labeled ')}\n          <strong>{` ${labels.join(', ')}`}</strong>\n          <span>: {message}</span>\n        </div>\n      ));\n\n    let errorMessage;\n    if (errors.length > 0) {\n      errorMessage = <div style={{ textAlign: 'left' }}>{errors}</div>;\n    }\n    return errorMessage;\n  }, [props.controls]);\n\n  function renderChartContainer() {\n    return (\n      <ExploreChartPanel\n        {...props}\n        errorMessage={errorMessage}\n        chartIsStale={chartIsStale}\n        onQuery={onQuery}\n      />\n    );\n  }\n\n  function getSidebarWidths(key) {\n    return getItem(key, defaultSidebarsWidth[key]);\n  }\n\n  function setSidebarWidths(key, dimension) {\n    const newDimension = Number(getSidebarWidths(key)) + dimension.width;\n    setItem(key, newDimension);\n  }\n\n  if (props.standalone) {\n    return renderChartContainer();\n  }\n\n  return (\n    <ExploreContainer>\n      <ConnectedExploreChartHeader\n        actions={props.actions}\n        canOverwrite={props.can_overwrite}\n        canDownload={props.can_download}\n        dashboardId={props.dashboardId}\n        isStarred={props.isStarred}\n        slice={props.slice}\n        sliceName={props.sliceName}\n        table_name={props.table_name}\n        formData={props.form_data}\n        chart={props.chart}\n        ownState={props.ownState}\n        user={props.user}\n        reports={props.reports}\n        onSaveChart={toggleModal}\n        saveDisabled={errorMessage || props.chart.chartStatus === 'loading'}\n      />\n      <ExplorePanelContainer id=\"explore-container\">\n        <Global\n          styles={css`\n            .navbar {\n              margin-bottom: 0;\n            }\n            body {\n              height: 100vh;\n              max-height: 100vh;\n              overflow: hidden;\n            }\n            #app-menu,\n            #app {\n              flex: 1 1 auto;\n            }\n            #app {\n              flex-basis: 100%;\n              overflow: hidden;\n              height: 100%;\n            }\n            #app-menu {\n              flex-shrink: 0;\n            }\n          `}\n        />\n        {showingModal && (\n          <SaveModal\n            onHide={toggleModal}\n            actions={props.actions}\n            form_data={props.form_data}\n            sliceName={props.sliceName}\n            dashboardId={props.dashboardId}\n            sliceDashboards={props.exploreState.sliceDashboards ?? []}\n          />\n        )}\n        <Resizable\n          onResizeStop={(evt, direction, ref, d) => {\n            setShouldForceUpdate(d?.width);\n            setSidebarWidths(LocalStorageKeys.datasource_width, d);\n          }}\n          defaultSize={{\n            width: getSidebarWidths(LocalStorageKeys.datasource_width),\n            height: '100%',\n          }}\n          minWidth={defaultSidebarsWidth[LocalStorageKeys.datasource_width]}\n          maxWidth=\"33%\"\n          enable={{ right: true }}\n          className={\n            isCollapsed ? 'no-show' : 'explore-column data-source-selection'\n          }\n        >\n          <div className=\"title-container\">\n            <span className=\"horizontal-text\">{t('Chart Source')}</span>\n            <span\n              role=\"button\"\n              tabIndex={0}\n              className=\"action-button\"\n              onClick={toggleCollapse}\n            >\n              <Icons.Expand\n                className=\"collapse-icon\"\n                iconColor={theme.colors.primary.base}\n                iconSize=\"l\"\n              />\n            </span>\n          </div>\n          <DataSourcePanel\n            formData={props.form_data}\n            datasource={props.datasource}\n            controls={props.controls}\n            actions={props.actions}\n            shouldForceUpdate={shouldForceUpdate}\n            user={props.user}\n          />\n        </Resizable>\n        {isCollapsed ? (\n          <div\n            className=\"sidebar\"\n            onClick={toggleCollapse}\n            data-test=\"open-datasource-tab\"\n            role=\"button\"\n            tabIndex={0}\n          >\n            <span role=\"button\" tabIndex={0} className=\"action-button\">\n              <Tooltip title={t('Open Datasource tab')}>\n                <Icons.Collapse\n                  className=\"collapse-icon\"\n                  iconColor={theme.colors.primary.base}\n                  iconSize=\"l\"\n                />\n              </Tooltip>\n            </span>\n          </div>\n        ) : null}\n        <Resizable\n          onResizeStop={(evt, direction, ref, d) =>\n            setSidebarWidths(LocalStorageKeys.controls_width, d)\n          }\n          defaultSize={{\n            width: getSidebarWidths(LocalStorageKeys.controls_width),\n            height: '100%',\n          }}\n          minWidth={defaultSidebarsWidth[LocalStorageKeys.controls_width]}\n          maxWidth=\"33%\"\n          enable={{ right: true }}\n          className=\"col-sm-3 explore-column controls-column\"\n        >\n          <ConnectedControlPanelsContainer\n            exploreState={props.exploreState}\n            actions={props.actions}\n            form_data={props.form_data}\n            controls={props.controls}\n            chart={props.chart}\n            datasource_type={props.datasource_type}\n            isDatasourceMetaLoading={props.isDatasourceMetaLoading}\n            onQuery={onQuery}\n            onStop={onStop}\n            canStopQuery={props.can_add || props.can_overwrite}\n            errorMessage={errorMessage}\n            chartIsStale={chartIsStale}\n          />\n        </Resizable>\n        <div\n          className={cx(\n            'main-explore-content',\n            isCollapsed ? 'col-sm-9' : 'col-sm-7',\n          )}\n        >\n          {renderChartContainer()}\n        </div>\n      </ExplorePanelContainer>\n    </ExploreContainer>\n  );\n}\n\nExploreViewContainer.propTypes = propTypes;\n\nfunction mapStateToProps(state) {\n  const { explore, charts, common, impressionId, dataMask, reports, user } =\n    state;\n  const { controls, slice, datasource } = explore;\n  const form_data = getFormDataFromControls(controls);\n  const slice_id = form_data.slice_id ?? slice?.slice_id ?? 0; // 0 - unsaved chart\n  form_data.extra_form_data = mergeExtraFormData(\n    { ...form_data.extra_form_data },\n    {\n      ...dataMask[slice_id]?.ownState,\n    },\n  );\n  const chart = charts[slice_id];\n\n  let dashboardId = Number(explore.form_data?.dashboardId);\n  if (Number.isNaN(dashboardId)) {\n    dashboardId = undefined;\n  }\n\n  return {\n    isDatasourceMetaLoading: explore.isDatasourceMetaLoading,\n    datasource,\n    datasource_type: datasource.type,\n    datasourceId: datasource.datasource_id,\n    dashboardId,\n    controls: explore.controls,\n    can_add: !!explore.can_add,\n    can_download: !!explore.can_download,\n    can_overwrite: !!explore.can_overwrite,\n    column_formats: datasource?.column_formats ?? null,\n    containerId: slice\n      ? `slice-container-${slice.slice_id}`\n      : 'slice-container',\n    isStarred: explore.isStarred,\n    slice,\n    sliceName: explore.sliceName ?? slice?.slice_name ?? null,\n    triggerRender: explore.triggerRender,\n    form_data,\n    table_name: datasource.table_name,\n    vizType: form_data.viz_type,\n    standalone: !!explore.standalone,\n    force: !!explore.force,\n    chart,\n    timeout: common.conf.SUPERSET_WEBSERVER_TIMEOUT,\n    ownState: dataMask[slice_id]?.ownState,\n    impressionId,\n    user,\n    exploreState: explore,\n    reports,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  const actions = {\n    ...exploreActions,\n    ...saveModalActions,\n    ...chartActions,\n    ...logActions,\n  };\n  return {\n    actions: bindActionCreators(actions, dispatch),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ExploreViewContainer);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { DatasourceType, t } from '@superset-ui/core';\nimport {\n  ColumnMeta,\n  ColumnOption,\n  ControlConfig,\n  ControlPanelSectionConfig,\n} from '@superset-ui/chart-controls';\nimport { ExplorePageInitialData } from './types';\n\nexport const controlPanelSectionsChartOptions: (ControlPanelSectionConfig | null)[] =\n  [\n    null,\n    {\n      label: t('Chart Options'),\n      expanded: true,\n      controlSetRows: [\n        [\n          'color_scheme',\n          {\n            name: 'rose_area_proportion',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Use Area Proportions'),\n              description: t(\n                'Check if the Rose Chart should use segment area instead of ' +\n                  'segment radius for proportioning',\n              ),\n              default: false,\n              renderTrigger: true,\n            },\n          },\n        ],\n        [\n          {\n            name: 'stacked_style',\n            config: {\n              type: 'SelectControl',\n              label: t('Stacked Style'),\n              renderTrigger: true,\n              choices: [\n                ['stack', 'stack'],\n                ['stream', 'stream'],\n                ['expand', 'expand'],\n              ],\n              default: 'stack',\n              description: '',\n            },\n          },\n        ],\n      ],\n    },\n  ];\n\nexport const controlPanelSectionsChartOptionsOnlyColorScheme: ControlPanelSectionConfig[] =\n  [\n    {\n      label: t('Chart Options'),\n      expanded: true,\n      controlSetRows: [['color_scheme']],\n    },\n  ];\n\nexport const controlPanelSectionsChartOptionsTable: ControlPanelSectionConfig[] =\n  [\n    {\n      label: t('Chart Options'),\n      expanded: true,\n      controlSetRows: [\n        [\n          'metric',\n          'metrics',\n          {\n            name: 'all_columns',\n            config: {\n              type: 'SelectControl',\n              multi: true,\n              label: t('Columns'),\n              default: [],\n              description: t('Columns to display'),\n              optionRenderer: c => <ColumnOption column={c} showType />,\n              valueKey: 'column_name',\n              mapStateToProps: stateRef => ({\n                options: stateRef.datasource?.columns || [],\n              }),\n              freeForm: true,\n            } as ControlConfig<'SelectControl', ColumnMeta>,\n          },\n        ],\n      ],\n    },\n  ];\n\nexport const exploreInitialData: ExplorePageInitialData = {\n  form_data: {\n    datasource: '8__table',\n    metric: 'count',\n    slice_id: 371,\n    time_range: 'No filter',\n    viz_type: 'table',\n  },\n  slice: {\n    cache_timeout: null,\n    description: null,\n    slice_id: 371,\n    slice_name: 'Age distribution of respondents',\n    is_managed_externally: false,\n    form_data: {\n      datasource: '8__table',\n      metric: 'count',\n      slice_id: 371,\n      time_range: 'No filter',\n      viz_type: 'table',\n    },\n  },\n  dataset: {\n    id: 8,\n    type: DatasourceType.Table,\n    columns: [{ column_name: 'a' }],\n    metrics: [{ metric_name: 'first' }, { metric_name: 'second' }],\n    column_format: {},\n    verbose_map: {},\n    main_dttm_col: '',\n    datasource_name: '8__table',\n    description: null,\n  },\n};\n\nexport const fallbackExploreInitialData: ExplorePageInitialData = {\n  form_data: {\n    datasource: '0__table',\n    viz_type: 'table',\n  },\n  dataset: {\n    id: 0,\n    type: DatasourceType.Table,\n    columns: [],\n    metrics: [],\n    column_format: {},\n    verbose_map: {},\n    main_dttm_col: '',\n    owners: [],\n    datasource_name: 'missing_datasource',\n    name: 'missing_datasource',\n    description: null,\n  },\n  slice: null,\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { makeApi, t, isDefined, JsonObject } from '@superset-ui/core';\nimport Loading from 'src/components/Loading';\nimport { addDangerToast } from 'src/components/MessageToasts/actions';\nimport { getUrlParam } from 'src/utils/urlUtils';\nimport { URL_PARAMS } from 'src/constants';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\nimport { getParsedExploreURLParams } from './exploreUtils/getParsedExploreURLParams';\nimport { hydrateExplore } from './actions/hydrateExplore';\nimport ExploreViewContainer from './components/ExploreViewContainer';\nimport { ExploreResponsePayload } from './types';\nimport { fallbackExploreInitialData } from './fixtures';\n\nconst isResult = (rv: JsonObject): rv is ExploreResponsePayload =>\n  rv?.result?.form_data &&\n  rv?.result?.dataset &&\n  isDefined(rv?.result?.dataset?.id);\n\nconst fetchExploreData = async (exploreUrlParams: URLSearchParams) => {\n  try {\n    const rv = await makeApi<{}, ExploreResponsePayload>({\n      method: 'GET',\n      endpoint: 'api/v1/explore/',\n    })(exploreUrlParams);\n    if (isResult(rv)) {\n      return rv;\n    }\n    throw new Error(t('Failed to load chart data.'));\n  } catch (err) {\n    // todo: encapsulate the error handler\n    const clientError = await getClientErrorObject(err);\n    throw new Error(\n      clientError.message ||\n        clientError.error ||\n        t('Failed to load chart data.'),\n    );\n  }\n};\n\nexport default function ExplorePage() {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const isExploreInitialized = useRef(false);\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  useEffect(() => {\n    const exploreUrlParams = getParsedExploreURLParams(location);\n    const isSaveAction = !!getUrlParam(URL_PARAMS.saveAction);\n    if (!isExploreInitialized.current || isSaveAction) {\n      fetchExploreData(exploreUrlParams)\n        .then(({ result }) => {\n          dispatch(hydrateExplore(result));\n        })\n        .catch(err => {\n          dispatch(hydrateExplore(fallbackExploreInitialData));\n          dispatch(addDangerToast(err.message));\n        })\n        .finally(() => {\n          setIsLoaded(true);\n          isExploreInitialized.current = true;\n        });\n    }\n  }, [dispatch, location]);\n\n  if (!isLoaded) {\n    return <Loading />;\n  }\n  return <ExploreViewContainer />;\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport rison from 'rison';\nimport Chart from 'src/types/Chart';\nimport { useApiV1Resource, useTransformedResource } from './apiResources';\n\nfunction extractOwnerNames({ owners }: Chart) {\n  if (!owners) return null;\n  return owners.map(owner => `${owner.first_name} ${owner.last_name}`);\n}\n\nconst ownerNamesQuery = rison.encode({\n  columns: ['owners.first_name', 'owners.last_name'],\n  keys: ['none'],\n});\n\nexport function useChartOwnerNames(chartId: string) {\n  return useTransformedResource(\n    useApiV1Resource<Chart>(`/api/v1/chart/${chartId}?q=${ownerNamesQuery}`),\n    extractOwnerNames,\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Dashboard, EmbeddedDashboard } from 'src/dashboard/types';\nimport { Dataset } from '@superset-ui/chart-controls';\nimport { Chart } from 'src/types/Chart';\nimport { useApiV1Resource, useTransformedResource } from './apiResources';\n\nexport const useDashboard = (idOrSlug: string | number) =>\n  useTransformedResource(\n    useApiV1Resource<Dashboard>(`/api/v1/dashboard/${idOrSlug}`),\n    dashboard => ({\n      ...dashboard,\n      // TODO: load these at the API level\n      metadata:\n        (dashboard.json_metadata && JSON.parse(dashboard.json_metadata)) || {},\n      position_data:\n        dashboard.position_json && JSON.parse(dashboard.position_json),\n    }),\n  );\n\n// gets the chart definitions for a dashboard\nexport const useDashboardCharts = (idOrSlug: string | number) =>\n  useApiV1Resource<Chart[]>(`/api/v1/dashboard/${idOrSlug}/charts`);\n\n// gets the datasets for a dashboard\n// important: this endpoint only returns the fields in the dataset\n// that are necessary for rendering the given dashboard\nexport const useDashboardDatasets = (idOrSlug: string | number) =>\n  useApiV1Resource<Dataset[]>(`/api/v1/dashboard/${idOrSlug}/datasets`);\n\nexport const useEmbeddedDashboard = (idOrSlug: string | number) =>\n  useApiV1Resource<EmbeddedDashboard>(`/api/v1/dashboard/${idOrSlug}/embedded`);\n"],"names":["rankings","CASE_SENSITIVE_EQUAL","EQUAL","STARTS_WITH","WORD_STARTS_WITH","CONTAINS","ACRONYM","MATCHES","NO_MATCH","matchSorter","defaultBaseSortFn","a","b","String","rankedValue","localeCompare","items","value","options","_options","keys","_options$threshold","threshold","_options$baseSort","baseSort","_options$sorter","sorter","matchedItems","sort","aRank","rank","aKeyIndex","keyIndex","bRank","bKeyIndex","sortRankedValues","reduce","matches","item","index","rankingInfo","allValues","j","J","length","key","attributes","getKeyAttributes","itemValues","getItemValues","i","I","push","itemValue","getAllValuesToRank","_ref2","_ref3","keyThreshold","newRank","getMatchRanking","newRankedValue","minRanking","maxRanking","getHighestRanking","_rankingInfo$keyThres","map","_ref","testString","stringToRank","prepareValueForComparison","toLowerCase","startsWith","includes","string","acronym","split","forEach","wordInString","splitByHyphenWord","substr","matchingInOrderCharCount","charNumber","findMatchingCharacter","matchChar","spreadPercentage","inOrderPercentage","firstIndex","getClosenessRanking","_ref4","keepDiacritics","Object","hasOwnProperty","call","path","values","nestedKey","nestedValues","nestedItem","nestedValue","concat","Array","isArray","result","apply","getNestedValues","defaultKeyAttributes","Infinity","characterMap","chars","join","allAccents","RegExp","firstAccent","removeAccents","replace","match","module","exports","has","remove","isDefined","x","EXPLORE_URL_SEARCH_PARAMS","form_data","name","parser","formData","formDataObject","JSON","parse","datasource","dataset_id","dataset_type","slice_id","form_data_key","permalink_key","viz_type","dashboard_id","EXPLORE_URL_PATH_PARAMS","p","table","getParsedExploreURLSearchParams","search","urlSearchParams","URLSearchParams","acc","currentParam","paramValue","get","parsedParamValue","TooltipContent","cachedTimestamp","cachedText","t","fromNow","className","onClick","hovered","setHovered","useState","labelType","Tooltip","title","id","Label","type","onMouseOver","onMouseOut","TimerLabel","style","Timer","endTime","isRunning","startTime","status","clockStr","setClockStr","timer","useRef","useEffect","stopTimer","current","clearInterval","undefined","setInterval","endDttm","role","CHART_STATUS_MAP","ChartPills","forwardRef","queriesResponse","chartStatus","chartUpdateStartTime","chartUpdateEndTime","refreshCachedQuery","rowLimit","ref","isLoading","firstQueryResponse","css","theme","gridUnit","RowCountLabel","rowcount","Number","limit","is_cached","CachedLabel","cached_dttm","AlertContainer","colors","info","base","light2","dark2","typography","sizes","m","dark1","alert","ButtonContainer","Title","weights","bold","typeChart","warning","danger","ExploreAlert","bodyText","primaryButtonAction","secondaryButtonAction","primaryButtonText","secondaryButtonText","Button","buttonStyle","buttonSize","propTypes","actions","PropTypes","onQuery","can_overwrite","can_download","dashboardId","column_formats","containerId","isStarred","slice","sliceName","table_name","vizType","ownState","standalone","force","timeout","chartIsStale","chart","chartPropShape","errorMessage","triggerRender","GUTTER_SIZE_FACTOR","INITIAL_SIZES","MIN_SIZES","Styles","styled","grayscale","ExploreChartPanel","chartAlert","useTheme","gutterMargin","gutterHeight","width","chartPanelWidth","height","chartPanelHeight","chartPanelRef","useResizeDetector","refreshMode","refreshRate","splitSizes","setSplitSizes","getItem","LocalStorageKeys","showDatasetModal","setShowDatasetModal","metaDataRegistry","getChartMetadataRegistry","useLegacyApi","vizTypeNeedsDataset","DatasourceType","showAlertBanner","ensureIsArray","updateQueryContext","useCallback","async","query_context","queryContext","buildV1ChartDataPayload","resultFormat","resultType","setDataMask","SupersetClient","endpoint","headers","body","stringify","query_context_generation","setItem","onDragEnd","setForceQuery","postChartFormData","updateQueryFormData","onCollapseChange","isOpen","renderChart","ChartContainer","Math","floor","annotationData","chartStackTrace","chartId","latestQueryFormData","setControlValue","triggerQuery","panelBody","useMemo","Alert","message","description","tabIndex","getChartRequiredFieldsMissingMessage","row_limit","standaloneChartBody","queryFormData","setQueryFormData","elementStyle","dimension","elementSize","gutterSize","standaloneClass","document","minSize","direction","expandToMin","DataTablesPane","queryForce","SaveDatasetModal","visible","onHide","buttonTextOnSave","buttonTextOnOverwrite","getDatasourceAsSaveableDataset","openWindow","RunQueryButton","loading","onStop","isNewChart","canStopQuery","disabled","actionButtonsContainerStyles","rgba","light5","opacity","mediumLight","ControlPanelsTabs","Tabs","fullWidth","light3","s","sectionsToExpand","sections","section","expanded","label","isTimeSection","columns","some","c","is_dttm","hasTimeColumn","props","pluginContext","useContext","prevState","usePrevious","exploreState","prevDatasource","showDatasourceAlert","setShowDatasourceAlert","containerRef","scrollTo","expandedQuerySections","expandedCustomizeSections","querySections","customizeSections","datasourceType","tabOverride","controlSetRows","rows","control","config","renderTrigger","getState","datasource_type","resetTransferredControls","controlsTransferred","controlName","controls","default","handleClearFormClick","handleContinueClick","shouldRecalculateControlState","Boolean","shouldMapStateToProps","renderControlPanelSection","sectionId","hasErrors","validationErrors","Collapse","header","InfoTooltipWithTrigger","tooltip","bsStyle","controlSets","renderedControls","controlItem","visibility","controlData","mapStateToProps","baseLabel","baseDescription","restProps","isVisible","Control","renderControl","filter","ControlRow","hasControlsTransferred","DatasourceAlert","dataTabTitle","xs","placement","Loading","showCustomizeTab","allowOverflow","tab","defaultActiveKey","expandIconPosition","ghost","SK_DASHBOARD_ID","SELECT_PLACEHOLDER","StyledModal","Modal","SaveModal","constructor","super","this","state","saveToDashboardId","newSliceName","action","canOverwriteSlice","onDashboardSelectChange","bind","onSliceNameChange","changeAction","saveOrOverwrite","isNewDashboard","newDashboardName","owners","userId","is_managed_externally","componentDidMount","fetchDashboards","then","dashboardIds","dashboards","dashboard","lastDashboard","sessionStorage","recentDashboard","parseInt","indexOf","setState","event","target","selected","gotodash","removeSaveModalAlert","url_params","promise","Promise","resolve","createDashboard","response","getDashboard","Set","sliceDashboards","add","from","updateSlice","dashboard_title","new","createSlice","removeItem","history","url","searchParams","location","set","delete","toString","removeAlert","render","dashboardSelectValue","show","footer","Form","layout","cursor","Radio","checked","onChange","required","Input","placeholder","allowClear","allowNewOptions","ariaLabel","source","renderers","paragraph","explore","saveModal","user","saveModalAlert","DatasourceItemContainer","DatasourcePanelDragOption","labelRef","showTooltip","isDragging","drag","useDrag","collect","monitor","optionProps","showType","DndItemType","column","metric","Icons","enableExploreDnd","primary","DatasourceContainer","light1","LabelWrapper","light4","SectionHeader","StyledInfoboxWrapper","LabelContainer","extendedProps","children","DataSourcePanel","datasourceControl","shouldForceUpdate","_columns","metrics","col1","col2","showSaveDatasetModal","setShowSaveDatasetModal","inputValue","setInputValue","lists","setList","showAllMetrics","setShowAllMetrics","showAllColumns","setShowAllColumns","expression","is_certified","metricSlice","columnSlice","saveableDatasets","query","Datasource","saved_query","datasourceIsSaveable","mainBody","evt","closable","onClose","metric_name","col","column_name","memoizedControls","memoize","controlPanel","controlsMap","controlPanelSections","isControlPanelSectionConfig","row","origFormData","currentFormData","StyledLabel","alterForComparison","AlteredSliceTag","React","diffs","getDiffs","getChartControlPanelRegistry","getControlsForVizType","getRowsFromDiffs","hasDiffs","UNSAFE_componentWillReceiveProps","newProps","entries","diff","before","formatValue","after","ofd","sanitizeFormData","cfd","fdKeys","fdKey","isEqualish","val1","val2","v","filterVal","comparator","subject","operator","safeStringify","formattedValue","renderModalBody","TableView","accessor","Header","data","pageSize","columnsForWrapText","renderTriggerNode","ModalTrigger","triggerNode","modalTitle","modalBody","responsive","canOverwrite","canDownload","saveDisabled","saveButtonStyles","ExploreChartHeader","sliceUpdated","onSaveChart","sliceFormData","isPropertiesModalOpen","setIsPropertiesModalOpen","res","json","find","d","json_metadata","metadata","mergedLabelColors","shared_label_colors","label_colors","categoricalNamespace","CategoricalColorNamespace","getNamespace","setColor","color_scheme","catch","fetchChartDashboardData","menu","isDropdownVisible","setIsDropdownVisible","useExploreAdditionalActionsMenu","redirectSQLLab","oldSliceName","slice_name","PageHeaderWithActions","editableTitleProps","canEdit","onSave","updateChartTitle","showTitlePanelItems","certificatiedBadgeProps","certifiedBy","certified_by","details","certification_details","showFaveStar","faveStarProps","itemId","fetchFaveStar","saveFaveStar","titlePanelAdditionalItems","chartTitle","rightPanelAdditionalItems","iconSize","additionalActionsMenu","menuDropdownProps","onVisibleChange","PropertiesModal","connect","dispatch","bindActionCreators","toggleActive","deleteActiveReport","isDatasourceMetaLoading","forcedHeight","impressionId","ExploreContainer","ExplorePanelContainer","updateHistory","datasourceId","isReplace","tabId","payload","additionalParam","URL_PARAMS","urlParams","RESERVED_CHART_URL_PARAMS","stateModifier","postFormData","getUrlParam","putFormData","mountExploreUrl","window","e","logging","ExploreViewContainer","dynamicPlugin","usePluginContext","dynamicPlugins","isDynamicPluginLoading","mounting","wasDynamicPluginLoading","previousControls","lastQueriedControls","setLastQueriedControls","showingModal","setShowingModal","isCollapsed","setIsCollapsed","setShouldForceUpdate","useTabId","defaultSidebarsWidth","controls_width","datasource_width","addHistory","handlePopstate","setExploreControls","handleKeydown","ctrlKey","metaKey","isEnter","keyCode","isS","saveSlice","add_to_dash","goto_dash","slice_url","toggleModal","toggleCollapse","useComponentDidMount","logEvent","LOG_ACTIONS_MOUNT_EXPLORER","useChangeEffect","previous","previousHandlePopstate","removeEventListener","addEventListener","previousHandleKeyDown","dynamicPluginControlsReady","reRenderChart","controlsChanged","newQueryFormData","getFormDataFromControls","renderTriggered","Date","getTime","fetchDatasourceMetadata","displayControlsChanged","areObjectsEqual","dontRefreshOnChange","saveAction","LOG_ACTIONS_CHANGE_EXPLORE_CONTROLS","controlsWithErrors","errorMessages","errors","flat","labels","textAlign","renderChartContainer","getSidebarWidths","setSidebarWidths","newDimension","reports","styles","onResizeStop","defaultSize","minWidth","maxWidth","enable","right","iconColor","queryController","abort","can_add","cx","charts","common","dataMask","extra_form_data","mergeExtraFormData","isNaN","datasource_id","conf","SUPERSET_WEBSERVER_TIMEOUT","exploreActions","saveModalActions","chartActions","logActions","fallbackExploreInitialData","dataset","column_format","verbose_map","main_dttm_col","datasource_name","ExplorePage","isLoaded","setIsLoaded","isExploreInitialized","exploreUrlParams","pathname","re","pathGroups","entry","getParsedExploreURLParams","isSaveAction","rv","makeApi","method","isResult","Error","err","clientError","getClientErrorObject","error","fetchExploreData","hydrateExplore","finally","extractOwnerNames","owner","first_name","last_name","ownerNamesQuery","useChartOwnerNames","useDashboard","idOrSlug","position_data","position_json","useDashboardCharts","useDashboardDatasets"],"sourceRoot":""}