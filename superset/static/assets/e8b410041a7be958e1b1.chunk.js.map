{"version":3,"file":"e8b410041a7be958e1b1.chunk.js","mappings":"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","sources":["webpack://superset/./src/components/Chart/ChartRenderer.jsx","webpack://superset/./src/components/Chart/ChartErrorMessage.tsx","webpack://superset/./src/components/Chart/Chart.jsx","webpack://superset/./src/components/Chart/ChartContainer.jsx","webpack://superset/./src/dashboard/util/propShapes.jsx","webpack://superset/./src/explore/components/EmbedCodeContent.jsx","webpack://superset/./src/explore/components/useExploreAdditionalActionsMenu/index.jsx","webpack://superset/./src/components/CronPicker/CronPicker.tsx","webpack://superset/./src/components/Dropdown/index.tsx","webpack://superset/./src/components/DynamicEditableTitle/index.tsx","webpack://superset/./src/components/PageHeaderWithActions/index.tsx","webpack://superset/./src/reports/types.ts","webpack://superset/./src/components/ReportModal/styles.tsx","webpack://superset/./src/components/ReportModal/index.tsx","webpack://superset/./src/components/ReportModal/HeaderReportDropdown/index.tsx","webpack://superset/./src/components/Switch/index.tsx","webpack://superset/./src/components/TimezoneSelector/index.tsx","webpack://superset/./src/dashboard/constants.ts","webpack://superset/./src/dashboard/util/backgroundStyleOptions.ts","webpack://superset/./src/dashboard/util/headerStyleOptions.ts","webpack://superset/./src/explore/components/DataTablesPane/types.ts","webpack://superset/./src/explore/components/DataTablesPane/utils.ts","webpack://superset/./src/explore/components/DataTablesPane/components/DataTableControls.tsx","webpack://superset/./src/explore/components/DataTablesPane/components/SingleQueryResultPane.tsx","webpack://superset/./src/explore/components/DataTablesPane/components/useResultsPane.tsx","webpack://superset/./src/explore/components/DataTablesPane/components/ResultsPaneOnDashboard.tsx","webpack://superset/./src/explore/components/DataTablesPane/components/SamplesPane.tsx","webpack://superset/./src/explore/components/DataTablesPane/DataTablesPane.tsx","webpack://superset/./src/explore/components/controls/ViewQueryModal.tsx","webpack://superset/./src/hooks/useChangeEffect/useChangeEffect.ts","webpack://superset/./src/hooks/useTabId.ts","webpack://superset/./src/utils/downloadAsImage.ts","webpack://superset/./src/utils/getChartRequiredFieldsMissingMessage.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { snakeCase, isEqual } from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { SuperChart, logging, Behavior, t } from '@superset-ui/core';\nimport { Logger, LOG_ACTIONS_RENDER_CHART } from 'src/logger/LogUtils';\nimport { EmptyStateBig, EmptyStateSmall } from 'src/components/EmptyState';\n\nconst propTypes = {\n  annotationData: PropTypes.object,\n  actions: PropTypes.object,\n  chartId: PropTypes.number.isRequired,\n  datasource: PropTypes.object,\n  initialValues: PropTypes.object,\n  formData: PropTypes.object.isRequired,\n  latestQueryFormData: PropTypes.object,\n  labelColors: PropTypes.object,\n  sharedLabelColors: PropTypes.object,\n  height: PropTypes.number,\n  width: PropTypes.number,\n  setControlValue: PropTypes.func,\n  vizType: PropTypes.string.isRequired,\n  triggerRender: PropTypes.bool,\n  // state\n  chartAlert: PropTypes.string,\n  chartStatus: PropTypes.string,\n  queriesResponse: PropTypes.arrayOf(PropTypes.object),\n  triggerQuery: PropTypes.bool,\n  chartIsStale: PropTypes.bool,\n  // dashboard callbacks\n  addFilter: PropTypes.func,\n  setDataMask: PropTypes.func,\n  onFilterMenuOpen: PropTypes.func,\n  onFilterMenuClose: PropTypes.func,\n  ownState: PropTypes.object,\n  postTransformProps: PropTypes.func,\n  source: PropTypes.oneOf(['dashboard', 'explore']),\n};\n\nconst BLANK = {};\n\nconst BIG_NO_RESULT_MIN_WIDTH = 300;\nconst BIG_NO_RESULT_MIN_HEIGHT = 220;\n\nconst behaviors = [Behavior.INTERACTIVE_CHART];\n\nconst defaultProps = {\n  addFilter: () => BLANK,\n  onFilterMenuOpen: () => BLANK,\n  onFilterMenuClose: () => BLANK,\n  initialValues: BLANK,\n  setControlValue() {},\n  triggerRender: false,\n};\n\nclass ChartRenderer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.hasQueryResponseChange = false;\n\n    this.handleAddFilter = this.handleAddFilter.bind(this);\n    this.handleRenderSuccess = this.handleRenderSuccess.bind(this);\n    this.handleRenderFailure = this.handleRenderFailure.bind(this);\n    this.handleSetControlValue = this.handleSetControlValue.bind(this);\n\n    this.hooks = {\n      onAddFilter: this.handleAddFilter,\n      onError: this.handleRenderFailure,\n      setControlValue: this.handleSetControlValue,\n      onFilterMenuOpen: this.props.onFilterMenuOpen,\n      onFilterMenuClose: this.props.onFilterMenuClose,\n      setDataMask: dataMask => {\n        this.props.actions?.updateDataMask(this.props.chartId, dataMask);\n      },\n    };\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const resultsReady =\n      nextProps.queriesResponse &&\n      ['success', 'rendered'].indexOf(nextProps.chartStatus) > -1 &&\n      !nextProps.queriesResponse?.[0]?.error;\n\n    if (resultsReady) {\n      this.hasQueryResponseChange =\n        nextProps.queriesResponse !== this.props.queriesResponse;\n      return (\n        this.hasQueryResponseChange ||\n        !isEqual(nextProps.datasource, this.props.datasource) ||\n        nextProps.annotationData !== this.props.annotationData ||\n        nextProps.ownState !== this.props.ownState ||\n        nextProps.filterState !== this.props.filterState ||\n        nextProps.height !== this.props.height ||\n        nextProps.width !== this.props.width ||\n        nextProps.triggerRender ||\n        nextProps.labelColors !== this.props.labelColors ||\n        nextProps.sharedLabelColors !== this.props.sharedLabelColors ||\n        nextProps.formData.color_scheme !== this.props.formData.color_scheme ||\n        nextProps.formData.stack !== this.props.formData.stack ||\n        nextProps.cacheBusterProp !== this.props.cacheBusterProp\n      );\n    }\n    return false;\n  }\n\n  handleAddFilter(col, vals, merge = true, refresh = true) {\n    this.props.addFilter(col, vals, merge, refresh);\n  }\n\n  handleRenderSuccess() {\n    const { actions, chartStatus, chartId, vizType } = this.props;\n    if (['loading', 'rendered'].indexOf(chartStatus) < 0) {\n      actions.chartRenderingSucceeded(chartId);\n    }\n\n    // only log chart render time which is triggered by query results change\n    // currently we don't log chart re-render time, like window resize etc\n    if (this.hasQueryResponseChange) {\n      actions.logEvent(LOG_ACTIONS_RENDER_CHART, {\n        slice_id: chartId,\n        viz_type: vizType,\n        start_offset: this.renderStartTime,\n        ts: new Date().getTime(),\n        duration: Logger.getTimestamp() - this.renderStartTime,\n      });\n    }\n  }\n\n  handleRenderFailure(error, info) {\n    const { actions, chartId } = this.props;\n    logging.warn(error);\n    actions.chartRenderingFailed(\n      error.toString(),\n      chartId,\n      info ? info.componentStack : null,\n    );\n\n    // only trigger render log when query is changed\n    if (this.hasQueryResponseChange) {\n      actions.logEvent(LOG_ACTIONS_RENDER_CHART, {\n        slice_id: chartId,\n        has_err: true,\n        error_details: error.toString(),\n        start_offset: this.renderStartTime,\n        ts: new Date().getTime(),\n        duration: Logger.getTimestamp() - this.renderStartTime,\n      });\n    }\n  }\n\n  handleSetControlValue(...args) {\n    const { setControlValue } = this.props;\n    if (setControlValue) {\n      setControlValue(...args);\n    }\n  }\n\n  render() {\n    const { chartAlert, chartStatus, chartId } = this.props;\n\n    // Skip chart rendering\n    if (chartStatus === 'loading' || !!chartAlert || chartStatus === null) {\n      return null;\n    }\n\n    this.renderStartTime = Logger.getTimestamp();\n\n    const {\n      width,\n      height,\n      datasource,\n      annotationData,\n      initialValues,\n      ownState,\n      filterState,\n      chartIsStale,\n      formData,\n      latestQueryFormData,\n      queriesResponse,\n      postTransformProps,\n    } = this.props;\n\n    const currentFormData =\n      chartIsStale && latestQueryFormData ? latestQueryFormData : formData;\n    const vizType = currentFormData.viz_type || this.props.vizType;\n\n    // It's bad practice to use unprefixed `vizType` as classnames for chart\n    // container. It may cause css conflicts as in the case of legacy table chart.\n    // When migrating charts, we should gradually add a `superset-chart-` prefix\n    // to each one of them.\n    const snakeCaseVizType = snakeCase(vizType);\n    const chartClassName =\n      vizType === 'table'\n        ? `superset-chart-${snakeCaseVizType}`\n        : snakeCaseVizType;\n\n    const webpackHash =\n      process.env.WEBPACK_MODE === 'development'\n        ? `-${\n            // eslint-disable-next-line camelcase\n            typeof __webpack_require__ !== 'undefined' &&\n            // eslint-disable-next-line camelcase, no-undef\n            typeof __webpack_require__.h === 'function' &&\n            // eslint-disable-next-line no-undef\n            __webpack_require__.h()\n          }`\n        : '';\n\n    let noResultsComponent;\n    const noResultTitle = t('No results were returned for this query');\n    const noResultDescription =\n      this.props.source === 'explore'\n        ? t(\n            'Make sure that the controls are configured properly and the datasource contains data for the selected time range',\n          )\n        : undefined;\n    const noResultImage = 'chart.svg';\n    if (width > BIG_NO_RESULT_MIN_WIDTH && height > BIG_NO_RESULT_MIN_HEIGHT) {\n      noResultsComponent = (\n        <EmptyStateBig\n          title={noResultTitle}\n          description={noResultDescription}\n          image={noResultImage}\n        />\n      );\n    } else {\n      noResultsComponent = (\n        <EmptyStateSmall title={noResultTitle} image={noResultImage} />\n      );\n    }\n\n    return (\n      <SuperChart\n        disableErrorBoundary\n        key={`${chartId}${webpackHash}`}\n        id={`chart-id-${chartId}`}\n        className={chartClassName}\n        chartType={vizType}\n        width={width}\n        height={height}\n        annotationData={annotationData}\n        datasource={datasource}\n        initialValues={initialValues}\n        formData={currentFormData}\n        ownState={ownState}\n        filterState={filterState}\n        hooks={this.hooks}\n        behaviors={behaviors}\n        queriesData={queriesResponse}\n        onRenderSuccess={this.handleRenderSuccess}\n        onRenderFailure={this.handleRenderFailure}\n        noResults={noResultsComponent}\n        postTransformProps={postTransformProps}\n      />\n    );\n  }\n}\n\nChartRenderer.propTypes = propTypes;\nChartRenderer.defaultProps = defaultProps;\n\nexport default ChartRenderer;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { useChartOwnerNames } from 'src/hooks/apiResources';\nimport ErrorMessageWithStackTrace from 'src/components/ErrorMessage/ErrorMessageWithStackTrace';\nimport { SupersetError } from 'src/components/ErrorMessage/types';\n\ninterface Props {\n  chartId: string;\n  error?: SupersetError;\n}\n\n/**\n * fetches the chart owners and adds them to the extra data of the error message\n */\nexport const ChartErrorMessage: React.FC<Props> = ({\n  chartId,\n  error,\n  ...props\n}) => {\n  const { result: owners } = useChartOwnerNames(chartId);\n\n  // don't mutate props\n  const ownedError = error && {\n    ...error,\n    extra: { ...error.extra, owners },\n  };\n\n  return <ErrorMessageWithStackTrace {...props} error={ownedError} />;\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { styled, logging, t, ensureIsArray } from '@superset-ui/core';\n\nimport { isFeatureEnabled, FeatureFlag } from 'src/featureFlags';\nimport { PLACEHOLDER_DATASOURCE } from 'src/dashboard/constants';\nimport Loading from 'src/components/Loading';\nimport { EmptyStateBig } from 'src/components/EmptyState';\nimport ErrorBoundary from 'src/components/ErrorBoundary';\nimport { Logger, LOG_ACTIONS_RENDER_CHART } from 'src/logger/LogUtils';\nimport { URL_PARAMS } from 'src/constants';\nimport { getUrlParam } from 'src/utils/urlUtils';\nimport { ResourceStatus } from 'src/hooks/apiResources/apiResources';\nimport ChartRenderer from './ChartRenderer';\nimport { ChartErrorMessage } from './ChartErrorMessage';\nimport { getChartRequiredFieldsMissingMessage } from '../../utils/getChartRequiredFieldsMissingMessage';\n\nconst propTypes = {\n  annotationData: PropTypes.object,\n  actions: PropTypes.object,\n  chartId: PropTypes.number.isRequired,\n  datasource: PropTypes.object,\n  // current chart is included by dashboard\n  dashboardId: PropTypes.number,\n  // original selected values for FilterBox viz\n  // so that FilterBox can pre-populate selected values\n  // only affect UI control\n  initialValues: PropTypes.object,\n  // formData contains chart's own filter parameter\n  // and merged with extra filter that current dashboard applying\n  formData: PropTypes.object.isRequired,\n  labelColors: PropTypes.object,\n  sharedLabelColors: PropTypes.object,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  setControlValue: PropTypes.func,\n  timeout: PropTypes.number,\n  vizType: PropTypes.string.isRequired,\n  triggerRender: PropTypes.bool,\n  force: PropTypes.bool,\n  isFiltersInitialized: PropTypes.bool,\n  isDeactivatedViz: PropTypes.bool,\n  // state\n  chartAlert: PropTypes.string,\n  chartStatus: PropTypes.string,\n  chartStackTrace: PropTypes.string,\n  queriesResponse: PropTypes.arrayOf(PropTypes.object),\n  triggerQuery: PropTypes.bool,\n  chartIsStale: PropTypes.bool,\n  errorMessage: PropTypes.node,\n  // dashboard callbacks\n  addFilter: PropTypes.func,\n  onQuery: PropTypes.func,\n  onFilterMenuOpen: PropTypes.func,\n  onFilterMenuClose: PropTypes.func,\n  ownState: PropTypes.object,\n  postTransformProps: PropTypes.func,\n  datasetsStatus: PropTypes.oneOf(['loading', 'error', 'complete']),\n};\n\nconst BLANK = {};\nconst NONEXISTENT_DATASET = t(\n  'The dataset associated with this chart no longer exists',\n);\n\nconst defaultProps = {\n  addFilter: () => BLANK,\n  onFilterMenuOpen: () => BLANK,\n  onFilterMenuClose: () => BLANK,\n  initialValues: BLANK,\n  setControlValue() {},\n  triggerRender: false,\n  dashboardId: null,\n  chartStackTrace: null,\n  isDeactivatedViz: false,\n  force: false,\n};\n\nconst Styles = styled.div`\n  min-height: ${p => p.height}px;\n  position: relative;\n\n  .chart-tooltip {\n    opacity: 0.75;\n    font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  }\n\n  .slice_container {\n    height: ${p => p.height}px;\n\n    .pivot_table tbody tr {\n      font-feature-settings: 'tnum' 1;\n    }\n  }\n`;\n\nconst MonospaceDiv = styled.div`\n  font-family: ${({ theme }) => theme.typography.families.monospace};\n  word-break: break-word;\n  overflow-x: auto;\n  white-space: pre-wrap;\n`;\n\nclass Chart extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.handleRenderContainerFailure =\n      this.handleRenderContainerFailure.bind(this);\n  }\n\n  componentDidMount() {\n    // during migration, hold chart queries before user choose review or cancel\n    if (\n      this.props.triggerQuery &&\n      this.props.filterboxMigrationState !== 'UNDECIDED'\n    ) {\n      this.runQuery();\n    }\n  }\n\n  componentDidUpdate() {\n    // during migration, hold chart queries before user choose review or cancel\n    if (\n      this.props.triggerQuery &&\n      this.props.filterboxMigrationState !== 'UNDECIDED'\n    ) {\n      // if the chart is deactivated (filter_box), only load once\n      if (this.props.isDeactivatedViz && this.props.queriesResponse) {\n        return;\n      }\n      this.runQuery();\n    }\n  }\n\n  runQuery() {\n    if (this.props.chartId > 0 && isFeatureEnabled(FeatureFlag.CLIENT_CACHE)) {\n      // Load saved chart with a GET request\n      this.props.actions.getSavedChart(\n        this.props.formData,\n        this.props.force || getUrlParam(URL_PARAMS.force), // allow override via url params force=true\n        this.props.timeout,\n        this.props.chartId,\n        this.props.dashboardId,\n        this.props.ownState,\n      );\n    } else {\n      // Create chart with POST request\n      this.props.actions.postChartFormData(\n        this.props.formData,\n        this.props.force || getUrlParam(URL_PARAMS.force), // allow override via url params force=true\n        this.props.timeout,\n        this.props.chartId,\n        this.props.dashboardId,\n        this.props.ownState,\n      );\n    }\n  }\n\n  handleRenderContainerFailure(error, info) {\n    const { actions, chartId } = this.props;\n    logging.warn(error);\n    actions.chartRenderingFailed(\n      error.toString(),\n      chartId,\n      info ? info.componentStack : null,\n    );\n\n    actions.logEvent(LOG_ACTIONS_RENDER_CHART, {\n      slice_id: chartId,\n      has_err: true,\n      error_details: error.toString(),\n      start_offset: this.renderStartTime,\n      ts: new Date().getTime(),\n      duration: Logger.getTimestamp() - this.renderStartTime,\n    });\n  }\n\n  renderErrorMessage(queryResponse) {\n    const {\n      chartId,\n      chartAlert,\n      chartStackTrace,\n      datasource,\n      dashboardId,\n      height,\n      datasetsStatus,\n    } = this.props;\n    const error = queryResponse?.errors?.[0];\n    const message = chartAlert || queryResponse?.message;\n\n    // if datasource is still loading, don't render JS errors\n    if (\n      chartAlert !== undefined &&\n      chartAlert !== NONEXISTENT_DATASET &&\n      datasource === PLACEHOLDER_DATASOURCE &&\n      datasetsStatus !== ResourceStatus.ERROR\n    ) {\n      return (\n        <Styles\n          key={chartId}\n          data-ui-anchor=\"chart\"\n          className=\"chart-container\"\n          data-test=\"chart-container\"\n          height={height}\n        >\n          <Loading />\n        </Styles>\n      );\n    }\n\n    return (\n      <ChartErrorMessage\n        key={chartId}\n        chartId={chartId}\n        error={error}\n        subtitle={<MonospaceDiv>{message}</MonospaceDiv>}\n        copyText={message}\n        link={queryResponse ? queryResponse.link : null}\n        source={dashboardId ? 'dashboard' : 'explore'}\n        stackTrace={chartStackTrace}\n        errorMitigationFunction={this.toggleSaveDatasetModal}\n      />\n    );\n  }\n\n  render() {\n    const {\n      height,\n      chartAlert,\n      chartStatus,\n      errorMessage,\n      chartIsStale,\n      queriesResponse = [],\n      isDeactivatedViz = false,\n      width,\n    } = this.props;\n\n    const isLoading = chartStatus === 'loading';\n    this.renderContainerStartTime = Logger.getTimestamp();\n    if (chartStatus === 'failed') {\n      return queriesResponse.map(item => this.renderErrorMessage(item));\n    }\n\n    if (errorMessage && ensureIsArray(queriesResponse).length === 0) {\n      return (\n        <EmptyStateBig\n          title={t('Add required control values to preview chart')}\n          description={getChartRequiredFieldsMissingMessage(true)}\n          image=\"chart.svg\"\n        />\n      );\n    }\n\n    if (\n      !isLoading &&\n      !chartAlert &&\n      !errorMessage &&\n      chartIsStale &&\n      ensureIsArray(queriesResponse).length === 0\n    ) {\n      return (\n        <EmptyStateBig\n          title={t('Your chart is ready to go!')}\n          description={\n            <span>\n              {t(\n                'Click on \"Create chart\" button in the control panel on the left to preview a visualization or',\n              )}{' '}\n              <span role=\"button\" tabIndex={0} onClick={this.props.onQuery}>\n                {t('click here')}\n              </span>\n              .\n            </span>\n          }\n          image=\"chart.svg\"\n        />\n      );\n    }\n\n    return (\n      <ErrorBoundary\n        onError={this.handleRenderContainerFailure}\n        showMessage={false}\n      >\n        <Styles\n          data-ui-anchor=\"chart\"\n          className=\"chart-container\"\n          data-test=\"chart-container\"\n          height={height}\n          width={width}\n        >\n          <div className=\"slice_container\" data-test=\"slice-container\">\n            <ChartRenderer\n              {...this.props}\n              source={this.props.dashboardId ? 'dashboard' : 'explore'}\n              data-test={this.props.vizType}\n            />\n          </div>\n          {isLoading && !isDeactivatedViz && <Loading />}\n        </Styles>\n      </ErrorBoundary>\n    );\n  }\n}\n\nChart.propTypes = propTypes;\nChart.defaultProps = defaultProps;\n\nexport default Chart;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport * as actions from './chartAction';\nimport { logEvent } from '../../logger/actions';\nimport Chart from './Chart';\nimport { updateDataMask } from '../../dataMask/actions';\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(\n      {\n        ...actions,\n        updateDataMask,\n        logEvent,\n      },\n      dispatch,\n    ),\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(Chart);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport PropTypes from 'prop-types';\nimport componentTypes from './componentTypes';\nimport backgroundStyleOptions from './backgroundStyleOptions';\nimport headerStyleOptions from './headerStyleOptions';\n\nexport const componentShape = PropTypes.shape({\n  id: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(Object.values(componentTypes)).isRequired,\n  parents: PropTypes.arrayOf(PropTypes.string),\n  children: PropTypes.arrayOf(PropTypes.string),\n  meta: PropTypes.shape({\n    // Dimensions\n    width: PropTypes.number,\n    height: PropTypes.number,\n\n    // Header\n    headerSize: PropTypes.oneOf(headerStyleOptions.map(opt => opt.value)),\n\n    // Row\n    background: PropTypes.oneOf(backgroundStyleOptions.map(opt => opt.value)),\n\n    // Chart\n    chartId: PropTypes.number,\n  }),\n});\n\nexport const chartPropShape = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  chartAlert: PropTypes.string,\n  chartStatus: PropTypes.string,\n  chartUpdateEndTime: PropTypes.number,\n  chartUpdateStartTime: PropTypes.number,\n  latestQueryFormData: PropTypes.object,\n  queryController: PropTypes.shape({ abort: PropTypes.func }),\n  queriesResponse: PropTypes.arrayOf(PropTypes.object),\n  triggerQuery: PropTypes.bool,\n  lastRendered: PropTypes.number,\n});\n\nexport const slicePropShape = PropTypes.shape({\n  slice_id: PropTypes.number.isRequired,\n  slice_url: PropTypes.string.isRequired,\n  slice_name: PropTypes.string.isRequired,\n  datasource: PropTypes.string,\n  datasource_name: PropTypes.string,\n  datasource_link: PropTypes.string,\n  changed_on: PropTypes.number.isRequired,\n  modified: PropTypes.string.isRequired,\n  viz_type: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  description_markeddown: PropTypes.string,\n  owners: PropTypes.arrayOf(PropTypes.string),\n});\n\nexport const dashboardFilterPropShape = PropTypes.shape({\n  chartId: PropTypes.number.isRequired,\n  componentId: PropTypes.string.isRequired,\n  filterName: PropTypes.string.isRequired,\n  datasourceId: PropTypes.string.isRequired,\n  directPathToFilter: PropTypes.arrayOf(PropTypes.string).isRequired,\n  isDateFilter: PropTypes.bool.isRequired,\n  isInstantFilter: PropTypes.bool.isRequired,\n  columns: PropTypes.object,\n  labels: PropTypes.object,\n  scopes: PropTypes.object,\n});\n\nexport const dashboardStatePropShape = PropTypes.shape({\n  sliceIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n  expandedSlices: PropTypes.object,\n  editMode: PropTypes.bool,\n  isPublished: PropTypes.bool.isRequired,\n  colorNamespace: PropTypes.string,\n  colorScheme: PropTypes.string,\n  updatedColorScheme: PropTypes.bool,\n  hasUnsavedChanges: PropTypes.bool,\n});\n\nexport const dashboardInfoPropShape = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  metadata: PropTypes.object,\n  slug: PropTypes.string,\n  dash_edit_perm: PropTypes.bool.isRequired,\n  dash_save_perm: PropTypes.bool.isRequired,\n  common: PropTypes.object,\n  userId: PropTypes.string.isRequired,\n});\n\n/* eslint-disable-next-line  no-undef */\nconst lazyFunction = f => () => f().apply(this, arguments);\n\nconst leafType = PropTypes.shape({\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  label: PropTypes.string.isRequired,\n});\n\nconst parentShape = {\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  label: PropTypes.string.isRequired,\n  children: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.shape(lazyFunction(() => parentShape)),\n      leafType,\n    ]),\n  ),\n};\n\nexport const filterScopeSelectorTreeNodePropShape = PropTypes.oneOfType([\n  PropTypes.shape(parentShape),\n  leafType,\n]);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { css, styled, t } from '@superset-ui/core';\nimport { Input, TextArea } from 'src/components/Input';\nimport CopyToClipboard from 'src/components/CopyToClipboard';\nimport { URL_PARAMS } from 'src/constants';\nimport { getChartPermalink } from 'src/utils/urlUtils';\nimport { CopyButton } from './DataTableControl';\n\nconst CopyButtonEmbedCode = styled(CopyButton)`\n  && {\n    margin: 0 0 ${({ theme }) => theme.gridUnit}px;\n  }\n`;\n\nconst EmbedCodeContent = ({ formData, addDangerToast }) => {\n  const [height, setHeight] = useState('400');\n  const [width, setWidth] = useState('600');\n  const [url, setUrl] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleInputChange = useCallback(e => {\n    const { value, name } = e.currentTarget;\n    if (name === 'width') {\n      setWidth(value);\n    }\n    if (name === 'height') {\n      setHeight(value);\n    }\n  }, []);\n\n  const updateUrl = useCallback(() => {\n    setUrl('');\n    getChartPermalink(formData)\n      .then(url => {\n        setUrl(url);\n        setErrorMessage('');\n      })\n      .catch(() => {\n        setErrorMessage(t('Error'));\n        addDangerToast(t('Sorry, something went wrong. Try again later.'));\n      });\n  }, [addDangerToast, formData]);\n\n  useEffect(() => {\n    updateUrl();\n  }, []);\n\n  const html = useMemo(() => {\n    if (!url) return '';\n    const srcLink = `${url}?${URL_PARAMS.standalone.name}=1&height=${height}`;\n    return (\n      '<iframe\\n' +\n      `  width=\"${width}\"\\n` +\n      `  height=\"${height}\"\\n` +\n      '  seamless\\n' +\n      '  frameBorder=\"0\"\\n' +\n      '  scrolling=\"no\"\\n' +\n      `  src=\"${srcLink}\"\\n` +\n      '>\\n' +\n      '</iframe>'\n    );\n  }, [height, url, width]);\n\n  const text = errorMessage || html || t('Generating link, please wait..');\n  return (\n    <div id=\"embed-code-popover\" data-test=\"embed-code-popover\">\n      <div\n        css={css`\n          display: flex;\n          flex-direction: column;\n        `}\n      >\n        <CopyToClipboard\n          shouldShowText={false}\n          text={html}\n          copyNode={\n            <CopyButtonEmbedCode buttonSize=\"xsmall\">\n              <i className=\"fa fa-clipboard\" />\n            </CopyButtonEmbedCode>\n          }\n        />\n        <TextArea\n          data-test=\"embed-code-textarea\"\n          name=\"embedCode\"\n          disabled={!html}\n          value={text}\n          rows=\"4\"\n          readOnly\n          css={theme => css`\n            resize: vertical;\n            padding: ${theme.gridUnit * 2}px;\n            font-size: ${theme.typography.sizes.s}px;\n            border-radius: 4px;\n            background-color: ${theme.colors.secondary.light5};\n          `}\n        />\n      </div>\n      <div\n        css={theme => css`\n          display: flex;\n          margin-top: ${theme.gridUnit * 4}px;\n          & > div {\n            margin-right: ${theme.gridUnit * 2}px;\n          }\n          & > div:last-of-type {\n            margin-right: 0;\n            margin-left: ${theme.gridUnit * 2}px;\n          }\n        `}\n      >\n        <div>\n          <label htmlFor=\"embed-height\">{t('Chart height')}</label>\n          <Input\n            type=\"text\"\n            defaultValue={height}\n            name=\"height\"\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"embed-width\">{t('Chart width')}</label>\n          <Input\n            type=\"text\"\n            defaultValue={width}\n            name=\"width\"\n            onChange={handleInputChange}\n            id=\"embed-width\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EmbedCodeContent;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { FileOutlined, FileImageOutlined } from '@ant-design/icons';\nimport { css, styled, t, useTheme } from '@superset-ui/core';\nimport { Menu } from 'src/components/Menu';\nimport ModalTrigger from 'src/components/ModalTrigger';\nimport Button from 'src/components/Button';\nimport { useToasts } from 'src/components/MessageToasts/withToasts';\nimport { exportChart, getChartKey } from 'src/explore/exploreUtils';\nimport downloadAsImage from 'src/utils/downloadAsImage';\nimport { getChartPermalink } from 'src/utils/urlUtils';\nimport copyTextToClipboard from 'src/utils/copy';\nimport HeaderReportDropDown from 'src/components/ReportModal/HeaderReportDropdown';\nimport ViewQueryModal from '../controls/ViewQueryModal';\nimport EmbedCodeContent from '../EmbedCodeContent';\n\nconst MENU_KEYS = {\n  EDIT_PROPERTIES: 'edit_properties',\n  DOWNLOAD_SUBMENU: 'download_submenu',\n  EXPORT_TO_CSV: 'export_to_csv',\n  EXPORT_TO_CSV_PIVOTED: 'export_to_csv_pivoted',\n  EXPORT_TO_JSON: 'export_to_json',\n  DOWNLOAD_AS_IMAGE: 'download_as_image',\n  SHARE_SUBMENU: 'share_submenu',\n  COPY_PERMALINK: 'copy_permalink',\n  EMBED_CODE: 'embed_code',\n  SHARE_BY_EMAIL: 'share_by_email',\n  REPORT_SUBMENU: 'report_submenu',\n  SET_UP_REPORT: 'set_up_report',\n  SET_REPORT_ACTIVE: 'set_report_active',\n  EDIT_REPORT: 'edit_report',\n  DELETE_REPORT: 'delete_report',\n  VIEW_QUERY: 'view_query',\n  RUN_IN_SQL_LAB: 'run_in_sql_lab',\n};\n\nconst VIZ_TYPES_PIVOTABLE = ['pivot_table', 'pivot_table_v2'];\n\nexport const MenuItemWithCheckboxContainer = styled.div`\n  ${({ theme }) => css`\n    display: flex;\n    align-items: center;\n\n    & svg {\n      width: ${theme.gridUnit * 3}px;\n      height: ${theme.gridUnit * 3}px;\n    }\n\n    & span[role='checkbox'] {\n      display: inline-flex;\n      margin-right: ${theme.gridUnit}px;\n    }\n  `}\n`;\n\nexport const MenuTrigger = styled(Button)`\n  ${({ theme }) => css`\n    width: ${theme.gridUnit * 8}px;\n    height: ${theme.gridUnit * 8}px;\n    padding: 0;\n    border: 1px solid ${theme.colors.primary.dark2};\n\n    &.ant-btn > span.anticon {\n      line-height: 0;\n      transition: inherit;\n    }\n\n    &:hover:not(:focus) > span.anticon {\n      color: ${theme.colors.primary.light1};\n    }\n  `}\n`;\n\nexport const useExploreAdditionalActionsMenu = (\n  latestQueryFormData,\n  canDownloadCSV,\n  slice,\n  onOpenInEditor,\n  onOpenPropertiesModal,\n  ownState,\n) => {\n  const theme = useTheme();\n  const { addDangerToast, addSuccessToast } = useToasts();\n  const [showReportSubMenu, setShowReportSubMenu] = useState(null);\n  const [isDropdownVisible, setIsDropdownVisible] = useState(false);\n  const [openSubmenus, setOpenSubmenus] = useState([]);\n  const chart = useSelector(\n    state => state.charts?.[getChartKey(state.explore)],\n  );\n\n  const { datasource } = latestQueryFormData;\n\n  const shareByEmail = useCallback(async () => {\n    try {\n      const subject = t('Superset Chart');\n      const url = await getChartPermalink(latestQueryFormData);\n      const body = encodeURIComponent(t('%s%s', 'Check out this chart: ', url));\n      window.location.href = `mailto:?Subject=${subject}%20&Body=${body}`;\n    } catch (error) {\n      addDangerToast(t('Sorry, something went wrong. Try again later.'));\n    }\n  }, [addDangerToast, latestQueryFormData]);\n\n  const exportCSV = useCallback(\n    () =>\n      canDownloadCSV\n        ? exportChart({\n            formData: latestQueryFormData,\n            ownState,\n            resultType: 'full',\n            resultFormat: 'csv',\n          })\n        : null,\n    [canDownloadCSV, latestQueryFormData],\n  );\n\n  const exportCSVPivoted = useCallback(\n    () =>\n      canDownloadCSV\n        ? exportChart({\n            formData: latestQueryFormData,\n            resultType: 'post_processed',\n            resultFormat: 'csv',\n          })\n        : null,\n    [canDownloadCSV, latestQueryFormData],\n  );\n\n  const exportJson = useCallback(\n    () =>\n      exportChart({\n        formData: latestQueryFormData,\n        resultType: 'results',\n        resultFormat: 'json',\n      }),\n    [latestQueryFormData],\n  );\n\n  const copyLink = useCallback(async () => {\n    try {\n      if (!latestQueryFormData) {\n        throw new Error();\n      }\n      await copyTextToClipboard(() => getChartPermalink(latestQueryFormData));\n      addSuccessToast(t('Copied to clipboard!'));\n    } catch (error) {\n      addDangerToast(t('Sorry, something went wrong. Try again later.'));\n    }\n  }, [addDangerToast, addSuccessToast, latestQueryFormData]);\n\n  const handleMenuClick = useCallback(\n    ({ key, domEvent }) => {\n      switch (key) {\n        case MENU_KEYS.EDIT_PROPERTIES:\n          onOpenPropertiesModal();\n          setIsDropdownVisible(false);\n          break;\n        case MENU_KEYS.EXPORT_TO_CSV:\n          exportCSV();\n          setIsDropdownVisible(false);\n          setOpenSubmenus([]);\n          break;\n        case MENU_KEYS.EXPORT_TO_CSV_PIVOTED:\n          exportCSVPivoted();\n          setIsDropdownVisible(false);\n          setOpenSubmenus([]);\n          break;\n        case MENU_KEYS.EXPORT_TO_JSON:\n          exportJson();\n          setIsDropdownVisible(false);\n          setOpenSubmenus([]);\n\n          break;\n        case MENU_KEYS.DOWNLOAD_AS_IMAGE:\n          downloadAsImage(\n            '.panel-body .chart-container',\n            // eslint-disable-next-line camelcase\n            slice?.slice_name ?? t('New chart'),\n            true,\n          )(domEvent);\n          setIsDropdownVisible(false);\n          setOpenSubmenus([]);\n          break;\n        case MENU_KEYS.COPY_PERMALINK:\n          copyLink();\n          setIsDropdownVisible(false);\n          setOpenSubmenus([]);\n          break;\n        case MENU_KEYS.EMBED_CODE:\n          setIsDropdownVisible(false);\n          setOpenSubmenus([]);\n          break;\n        case MENU_KEYS.SHARE_BY_EMAIL:\n          shareByEmail();\n          setIsDropdownVisible(false);\n          setOpenSubmenus([]);\n          break;\n        case MENU_KEYS.VIEW_QUERY:\n          setIsDropdownVisible(false);\n          break;\n        case MENU_KEYS.RUN_IN_SQL_LAB:\n          onOpenInEditor(latestQueryFormData);\n          setIsDropdownVisible(false);\n          break;\n        default:\n          break;\n      }\n    },\n    [\n      copyLink,\n      exportCSV,\n      exportCSVPivoted,\n      exportJson,\n      latestQueryFormData,\n      onOpenInEditor,\n      onOpenPropertiesModal,\n      shareByEmail,\n      slice?.slice_name,\n    ],\n  );\n\n  const menu = useMemo(\n    () => (\n      <Menu\n        onClick={handleMenuClick}\n        selectable={false}\n        openKeys={openSubmenus}\n        onOpenChange={setOpenSubmenus}\n      >\n        {slice && (\n          <>\n            <Menu.Item key={MENU_KEYS.EDIT_PROPERTIES}>\n              {t('Edit chart properties')}\n            </Menu.Item>\n            <Menu.Divider />\n          </>\n        )}\n        <Menu.SubMenu title={t('Download')} key={MENU_KEYS.DOWNLOAD_SUBMENU}>\n          {VIZ_TYPES_PIVOTABLE.includes(latestQueryFormData.viz_type) ? (\n            <>\n              <Menu.Item\n                key={MENU_KEYS.EXPORT_TO_CSV}\n                icon={<FileOutlined />}\n                disabled={!canDownloadCSV}\n              >\n                {t('Export to original .CSV')}\n              </Menu.Item>\n              <Menu.Item\n                key={MENU_KEYS.EXPORT_TO_CSV_PIVOTED}\n                icon={<FileOutlined />}\n                disabled={!canDownloadCSV}\n              >\n                {t('Export to pivoted .CSV')}\n              </Menu.Item>\n            </>\n          ) : (\n            <Menu.Item\n              key={MENU_KEYS.EXPORT_TO_CSV}\n              icon={<FileOutlined />}\n              disabled={!canDownloadCSV}\n            >\n              {t('Export to .CSV')}\n            </Menu.Item>\n          )}\n          <Menu.Item key={MENU_KEYS.EXPORT_TO_JSON} icon={<FileOutlined />}>\n            {t('Export to .JSON')}\n          </Menu.Item>\n          <Menu.Item\n            key={MENU_KEYS.DOWNLOAD_AS_IMAGE}\n            icon={<FileImageOutlined />}\n          >\n            {t('Download as image')}\n          </Menu.Item>\n        </Menu.SubMenu>\n        <Menu.SubMenu title={t('Share')} key={MENU_KEYS.SHARE_SUBMENU}>\n          <Menu.Item key={MENU_KEYS.COPY_PERMALINK}>\n            {t('Copy permalink to clipboard')}\n          </Menu.Item>\n          <Menu.Item key={MENU_KEYS.SHARE_BY_EMAIL}>\n            {t('Share chart by email')}\n          </Menu.Item>\n          <Menu.Item key={MENU_KEYS.EMBED_CODE}>\n            <ModalTrigger\n              triggerNode={\n                <span data-test=\"embed-code-button\">{t('Embed code')}</span>\n              }\n              modalTitle={t('Embed code')}\n              modalBody={\n                <EmbedCodeContent\n                  formData={latestQueryFormData}\n                  addDangerToast={addDangerToast}\n                />\n              }\n              maxWidth={`${theme.gridUnit * 100}px`}\n              destroyOnClose\n              responsive\n            />\n          </Menu.Item>\n        </Menu.SubMenu>\n        <Menu.Divider />\n        {showReportSubMenu ? (\n          <>\n            <Menu.SubMenu title={t('Manage email report')}>\n              <HeaderReportDropDown\n                chart={chart}\n                setShowReportSubMenu={setShowReportSubMenu}\n                showReportSubMenu={showReportSubMenu}\n                setIsDropdownVisible={setIsDropdownVisible}\n                isDropdownVisible={isDropdownVisible}\n                useTextMenu\n              />\n            </Menu.SubMenu>\n            <Menu.Divider />\n          </>\n        ) : (\n          <Menu>\n            <HeaderReportDropDown\n              chart={chart}\n              setShowReportSubMenu={setShowReportSubMenu}\n              setIsDropdownVisible={setIsDropdownVisible}\n              isDropdownVisible={isDropdownVisible}\n              useTextMenu\n            />\n          </Menu>\n        )}\n        <Menu.Item key={MENU_KEYS.VIEW_QUERY}>\n          <ModalTrigger\n            triggerNode={\n              <span data-test=\"view-query-menu-item\">{t('View query')}</span>\n            }\n            modalTitle={t('View query')}\n            modalBody={\n              <ViewQueryModal latestQueryFormData={latestQueryFormData} />\n            }\n            draggable\n            resizable\n            responsive\n          />\n        </Menu.Item>\n        {datasource && (\n          <Menu.Item key={MENU_KEYS.RUN_IN_SQL_LAB}>\n            {t('Run in SQL Lab')}\n          </Menu.Item>\n        )}\n      </Menu>\n    ),\n    [\n      addDangerToast,\n      canDownloadCSV,\n      chart,\n      handleMenuClick,\n      isDropdownVisible,\n      latestQueryFormData,\n      openSubmenus,\n      showReportSubMenu,\n      slice,\n      theme.gridUnit,\n    ],\n  );\n  return [menu, isDropdownVisible, setIsDropdownVisible];\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { ConfigProvider } from 'antd';\nimport { styled, t } from '@superset-ui/core';\nimport ReactCronPicker, { Locale, CronProps } from 'react-js-cron';\n\nexport * from 'react-js-cron';\n\nexport const LOCALE: Locale = {\n  everyText: t('every'),\n  emptyMonths: t('every month'),\n  emptyMonthDays: t('every day of the month'),\n  emptyMonthDaysShort: t('day of the month'),\n  emptyWeekDays: t('every day of the week'),\n  emptyWeekDaysShort: t('day of the week'),\n  emptyHours: t('every hour'),\n  emptyMinutes: t('every minute'),\n  emptyMinutesForHourPeriod: t('every'),\n  yearOption: t('year'),\n  monthOption: t('month'),\n  weekOption: t('week'),\n  dayOption: t('day'),\n  hourOption: t('hour'),\n  minuteOption: t('minute'),\n  rebootOption: t('reboot'),\n  prefixPeriod: t('Every'),\n  prefixMonths: t('in'),\n  prefixMonthDays: t('on'),\n  prefixWeekDays: t('on'),\n  prefixWeekDaysForMonthAndYearPeriod: t('and'),\n  prefixHours: t('at'),\n  prefixMinutes: t(':'),\n  prefixMinutesForHourPeriod: t('at'),\n  suffixMinutesForHourPeriod: t('minute(s)'),\n  errorInvalidCron: t('Invalid cron expression'),\n  clearButtonText: t('Clear'),\n  weekDays: [\n    // Order is important, the index will be used as value\n    t('Sunday'), // Sunday must always be first, it's \"0\"\n    t('Monday'),\n    t('Tuesday'),\n    t('Wednesday'),\n    t('Thursday'),\n    t('Friday'),\n    t('Saturday'),\n  ],\n  months: [\n    // Order is important, the index will be used as value\n    t('January'),\n    t('February'),\n    t('March'),\n    t('April'),\n    t('May'),\n    t('June'),\n    t('July'),\n    t('August'),\n    t('September'),\n    t('October'),\n    t('November'),\n    t('December'),\n  ],\n  // Order is important, the index will be used as value\n  altWeekDays: [\n    t('SUN'), // Sunday must always be first, it's \"0\"\n    t('MON'),\n    t('TUE'),\n    t('WED'),\n    t('THU'),\n    t('FRI'),\n    t('SAT'),\n  ],\n  // Order is important, the index will be used as value\n  altMonths: [\n    t('JAN'),\n    t('FEB'),\n    t('MAR'),\n    t('APR'),\n    t('MAY'),\n    t('JUN'),\n    t('JUL'),\n    t('AUG'),\n    t('SEP'),\n    t('OCT'),\n    t('NOV'),\n    t('DEC'),\n  ],\n};\n\nexport const CronPicker = styled((props: CronProps) => (\n  <ConfigProvider\n    getPopupContainer={trigger => trigger.parentElement as HTMLElement}\n  >\n    <ReactCronPicker locale={LOCALE} {...props} />\n  </ConfigProvider>\n))`\n  .react-js-cron-select:not(.react-js-cron-custom-select) > div:first-of-type,\n  .react-js-cron-custom-select {\n    border-radius: ${({ theme }) => theme.gridUnit}px;\n    background-color: ${({ theme }) =>\n      theme.colors.grayscale.light4} !important;\n  }\n  .react-js-cron-custom-select > div:first-of-type {\n    border-radius: ${({ theme }) => theme.gridUnit}px;\n  }\n`;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { RefObject } from 'react';\nimport { AntdDropdown } from 'src/components';\nimport { DropDownProps } from 'antd/lib/dropdown';\nimport { styled } from '@superset-ui/core';\n\nconst MenuDots = styled.div`\n  width: ${({ theme }) => theme.gridUnit * 0.75}px;\n  height: ${({ theme }) => theme.gridUnit * 0.75}px;\n  border-radius: 50%;\n  background-color: ${({ theme }) => theme.colors.grayscale.light1};\n\n  font-weight: ${({ theme }) => theme.typography.weights.normal};\n  display: inline-flex;\n  position: relative;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.primary.base};\n\n    &::before,\n    &::after {\n      background-color: ${({ theme }) => theme.colors.primary.base};\n    }\n  }\n\n  &::before,\n  &::after {\n    position: absolute;\n    content: ' ';\n    width: ${({ theme }) => theme.gridUnit * 0.75}px;\n    height: ${({ theme }) => theme.gridUnit * 0.75}px;\n    border-radius: 50%;\n    background-color: ${({ theme }) => theme.colors.grayscale.light1};\n  }\n\n  &::before {\n    top: ${({ theme }) => theme.gridUnit}px;\n  }\n\n  &::after {\n    bottom: ${({ theme }) => theme.gridUnit}px;\n  }\n`;\n\nconst MenuDotsWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  padding: ${({ theme }) => theme.gridUnit * 2}px;\n  padding-left: ${({ theme }) => theme.gridUnit}px;\n`;\n\nexport interface DropdownProps {\n  overlay: React.ReactElement;\n}\n\nexport const Dropdown = ({ overlay, ...rest }: DropdownProps) => (\n  <AntdDropdown overlay={overlay} {...rest}>\n    <MenuDotsWrapper data-test=\"dropdown-trigger\">\n      <MenuDots />\n    </MenuDotsWrapper>\n  </AntdDropdown>\n);\n\ninterface ExtendedDropDownProps extends DropDownProps {\n  ref?: RefObject<HTMLDivElement>;\n}\n\n// @z-index-below-dashboard-header (100) - 1 = 99\nexport const NoAnimationDropdown = (\n  props: ExtendedDropDownProps & { children?: React.ReactNode },\n) => (\n  <AntdDropdown\n    overlayStyle={{ zIndex: 99, animationDuration: '0s' }}\n    {...props}\n  />\n);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, {\n  ChangeEvent,\n  KeyboardEvent,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { css, SupersetTheme, t } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { useResizeDetector } from 'react-resize-detector';\n\nexport type DynamicEditableTitleProps = {\n  title: string;\n  placeholder: string;\n  onSave: (title: string) => void;\n  canEdit: boolean;\n  label: string | undefined;\n};\n\nconst titleStyles = (theme: SupersetTheme) => css`\n  display: flex;\n  font-size: ${theme.typography.sizes.xl}px;\n  font-weight: ${theme.typography.weights.bold};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n\n  & .dynamic-title,\n  & .dynamic-title-input {\n    display: inline-block;\n    max-width: 100%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\n  & .dynamic-title {\n    cursor: default;\n  }\n  & .dynamic-title-input {\n    border: none;\n    padding: 0;\n    outline: none;\n\n    &::placeholder {\n      color: ${theme.colors.grayscale.light1};\n    }\n  }\n\n  & .input-sizer {\n    position: absolute;\n    left: -9999px;\n    display: inline-block;\n  }\n`;\n\nexport const DynamicEditableTitle = ({\n  title,\n  placeholder,\n  onSave,\n  canEdit,\n  label,\n}: DynamicEditableTitleProps) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [currentTitle, setCurrentTitle] = useState(title || '');\n  const contentRef = useRef<HTMLInputElement>(null);\n  const [showTooltip, setShowTooltip] = useState(false);\n\n  const { width: inputWidth, ref: sizerRef } = useResizeDetector();\n  const { width: containerWidth, ref: containerRef } = useResizeDetector({\n    refreshMode: 'debounce',\n  });\n\n  useEffect(() => {\n    setCurrentTitle(title);\n  }, [title]);\n\n  useEffect(() => {\n    if (isEditing && contentRef?.current) {\n      contentRef.current.focus();\n      // move cursor and scroll to the end\n      if (contentRef.current.setSelectionRange) {\n        const { length } = contentRef.current.value;\n        contentRef.current.setSelectionRange(length, length);\n        contentRef.current.scrollLeft = contentRef.current.scrollWidth;\n      }\n    }\n  }, [isEditing]);\n\n  // a trick to make the input grow when user types text\n  // we make additional span component, place it somewhere out of view and copy input\n  // then we can measure the width of that span to resize the input element\n  useLayoutEffect(() => {\n    if (sizerRef?.current) {\n      sizerRef.current.innerHTML = (currentTitle || placeholder).replace(\n        /\\s/g,\n        '&nbsp;',\n      );\n    }\n  }, [currentTitle, placeholder, sizerRef]);\n\n  useEffect(() => {\n    if (\n      contentRef.current &&\n      contentRef.current.scrollWidth > contentRef.current.clientWidth\n    ) {\n      setShowTooltip(true);\n    } else {\n      setShowTooltip(false);\n    }\n  }, [inputWidth, containerWidth]);\n\n  const handleClick = useCallback(() => {\n    if (!canEdit || isEditing) {\n      return;\n    }\n    setIsEditing(true);\n  }, [canEdit, isEditing]);\n\n  const handleBlur = useCallback(() => {\n    if (!canEdit) {\n      return;\n    }\n    const formattedTitle = currentTitle.trim();\n    setCurrentTitle(formattedTitle);\n    if (title !== formattedTitle) {\n      onSave(formattedTitle);\n    }\n    setIsEditing(false);\n  }, [canEdit, currentTitle, onSave, title]);\n\n  const handleChange = useCallback(\n    (ev: ChangeEvent<HTMLInputElement>) => {\n      if (!canEdit || !isEditing) {\n        return;\n      }\n      setCurrentTitle(ev.target.value);\n    },\n    [canEdit, isEditing],\n  );\n\n  const handleKeyPress = useCallback(\n    (ev: KeyboardEvent<HTMLInputElement>) => {\n      if (!canEdit) {\n        return;\n      }\n      if (ev.key === 'Enter') {\n        ev.preventDefault();\n        contentRef.current?.blur();\n      }\n    },\n    [canEdit],\n  );\n\n  return (\n    <div css={titleStyles} ref={containerRef}>\n      <Tooltip\n        id=\"title-tooltip\"\n        title={showTooltip && currentTitle && !isEditing ? currentTitle : null}\n      >\n        {canEdit ? (\n          <input\n            data-test=\"editable-title-input\"\n            className=\"dynamic-title-input\"\n            aria-label={label ?? t('Title')}\n            ref={contentRef}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            onClick={handleClick}\n            onKeyPress={handleKeyPress}\n            placeholder={placeholder}\n            value={currentTitle}\n            css={css`\n              cursor: ${isEditing ? 'text' : 'pointer'};\n\n              ${inputWidth &&\n              inputWidth > 0 &&\n              css`\n                width: ${inputWidth}px;\n              `}\n            `}\n          />\n        ) : (\n          <span\n            className=\"dynamic-title\"\n            aria-label={label ?? t('Title')}\n            ref={contentRef}\n            data-test=\"editable-title\"\n          >\n            {currentTitle}\n          </span>\n        )}\n      </Tooltip>\n      <span ref={sizerRef} className=\"input-sizer\" aria-hidden tabIndex={-1} />\n    </div>\n  );\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { ReactNode, ReactElement } from 'react';\nimport { css, SupersetTheme, t, useTheme } from '@superset-ui/core';\nimport { AntdDropdown, AntdDropdownProps } from 'src/components';\nimport {\n  DynamicEditableTitle,\n  DynamicEditableTitleProps,\n} from '../DynamicEditableTitle';\nimport CertifiedBadge, { CertifiedBadgeProps } from '../CertifiedBadge';\nimport FaveStar, { FaveStarProps } from '../FaveStar';\nimport Icons from '../Icons';\nimport Button from '../Button';\n\nexport const menuTriggerStyles = (theme: SupersetTheme) => css`\n  width: ${theme.gridUnit * 8}px;\n  height: ${theme.gridUnit * 8}px;\n  padding: 0;\n  border: 1px solid ${theme.colors.primary.dark2};\n\n  &.ant-btn > span.anticon {\n    line-height: 0;\n    transition: inherit;\n  }\n\n  &:hover:not(:focus) > span.anticon {\n    color: ${theme.colors.primary.light1};\n  }\n`;\n\nconst headerStyles = (theme: SupersetTheme) => css`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  background-color: ${theme.colors.grayscale.light5};\n  height: ${theme.gridUnit * 16}px;\n  padding: 0 ${theme.gridUnit * 4}px;\n\n  .editable-title {\n    overflow: hidden;\n\n    & > input[type='button'],\n    & > span {\n      overflow: hidden;\n      text-overflow: ellipsis;\n      max-width: 100%;\n      white-space: nowrap;\n    }\n  }\n\n  span[role='button'] {\n    display: flex;\n    height: 100%;\n  }\n\n  .title-panel {\n    display: flex;\n    align-items: center;\n    min-width: 0;\n    margin-right: ${theme.gridUnit * 12}px;\n  }\n\n  .right-button-panel {\n    display: flex;\n    align-items: center;\n  }\n`;\n\nconst buttonsStyles = (theme: SupersetTheme) => css`\n  display: flex;\n  align-items: center;\n  padding-left: ${theme.gridUnit * 2}px;\n\n  & .fave-unfave-icon {\n    padding: 0 ${theme.gridUnit}px;\n\n    &:first-child {\n      padding-left: 0;\n    }\n  }\n`;\n\nconst additionalActionsContainerStyles = (theme: SupersetTheme) => css`\n  margin-left: ${theme.gridUnit * 2}px;\n`;\n\nexport type PageHeaderWithActionsProps = {\n  editableTitleProps: DynamicEditableTitleProps;\n  showTitlePanelItems: boolean;\n  certificatiedBadgeProps?: CertifiedBadgeProps;\n  showFaveStar: boolean;\n  faveStarProps: FaveStarProps;\n  titlePanelAdditionalItems: ReactNode;\n  rightPanelAdditionalItems: ReactNode;\n  additionalActionsMenu: ReactElement;\n  menuDropdownProps: Omit<AntdDropdownProps, 'overlay'>;\n};\n\nexport const PageHeaderWithActions = ({\n  editableTitleProps,\n  showTitlePanelItems,\n  certificatiedBadgeProps,\n  showFaveStar,\n  faveStarProps,\n  titlePanelAdditionalItems,\n  rightPanelAdditionalItems,\n  additionalActionsMenu,\n  menuDropdownProps,\n}: PageHeaderWithActionsProps) => {\n  const theme = useTheme();\n  return (\n    <div css={headerStyles} className=\"header-with-actions\">\n      <div className=\"title-panel\">\n        <DynamicEditableTitle {...editableTitleProps} />\n        {showTitlePanelItems && (\n          <div css={buttonsStyles}>\n            {certificatiedBadgeProps?.certifiedBy && (\n              <CertifiedBadge {...certificatiedBadgeProps} />\n            )}\n            {showFaveStar && <FaveStar {...faveStarProps} />}\n            {titlePanelAdditionalItems}\n          </div>\n        )}\n      </div>\n      <div className=\"right-button-panel\">\n        {rightPanelAdditionalItems}\n        <div css={additionalActionsContainerStyles}>\n          <AntdDropdown\n            trigger={['click']}\n            overlay={additionalActionsMenu}\n            {...menuDropdownProps}\n          >\n            <Button\n              css={menuTriggerStyles}\n              buttonStyle=\"tertiary\"\n              aria-label={t('Menu actions trigger')}\n            >\n              <Icons.MoreHoriz\n                iconColor={theme.colors.primary.dark2}\n                iconSize=\"l\"\n              />\n            </Button>\n          </AntdDropdown>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/**\n * Types mirroring enums in `superset/reports/models.py`:\n */\nexport type ReportScheduleType = 'Alert' | 'Report';\nexport type ReportCreationMethod = 'charts' | 'dashboards' | 'alerts_reports';\n\nexport type ReportRecipientType = 'Email' | 'Slack';\n\nexport enum ReportType {\n  DASHBOARDS = 'dashboards',\n  CHARTS = 'charts',\n}\n\nexport enum NOTIFICATION_FORMATS {\n  TEXT = 'TEXT',\n  PNG = 'PNG',\n  CSV = 'CSV',\n}\nexport interface ReportObject {\n  id?: number;\n  active: boolean;\n  crontab: string;\n  dashboard?: number;\n  chart?: number;\n  description?: string;\n  log_retention: number;\n  name: string;\n  owners: number[];\n  recipients: [\n    { recipient_config_json: { target: string }; type: ReportRecipientType },\n  ];\n  report_format: string;\n  timezone: string;\n  type: ReportScheduleType;\n  validator_config_json: {} | null;\n  validator_type: string;\n  working_timeout: number;\n  creation_method: string;\n  force_screenshot: boolean;\n  error?: string;\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { styled, css, SupersetTheme } from '@superset-ui/core';\nimport Modal from 'src/components/Modal';\nimport Button from 'src/components/Button';\nimport { Radio } from 'src/components/Radio';\nimport { CronPicker } from 'src/components/CronPicker';\n\nexport const StyledModal = styled(Modal)`\n  .ant-modal-body {\n    padding: 0;\n  }\n`;\n\nexport const StyledTopSection = styled.div`\n  padding: ${({ theme }) =>\n    `${theme.gridUnit * 3}px ${theme.gridUnit * 4}px ${theme.gridUnit * 2}px`};\n  label {\n    font-size: ${({ theme }) => theme.typography.sizes.s}px;\n    color: ${({ theme }) => theme.colors.grayscale.light1};\n  }\n`;\n\nexport const StyledBottomSection = styled.div`\n  border-top: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n  padding: ${({ theme }) =>\n    `${theme.gridUnit * 4}px ${theme.gridUnit * 4}px ${theme.gridUnit * 6}px`};\n  .ant-select {\n    width: 100%;\n  }\n  .control-label {\n    font-size: ${({ theme }) => theme.typography.sizes.s}px;\n    color: ${({ theme }) => theme.colors.grayscale.light1};\n  }\n`;\n\nexport const StyledIconWrapper = styled.span`\n  span {\n    margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n    vertical-align: middle;\n  }\n  .text {\n    vertical-align: middle;\n  }\n`;\n\nexport const StyledScheduleTitle = styled.div`\n  margin-bottom: ${({ theme }) => theme.gridUnit * 7}px;\n\n  h4 {\n    margin-bottom: ${({ theme }) => theme.gridUnit * 3}px;\n  }\n`;\n\nexport const StyledCronPicker = styled(CronPicker)`\n  margin-bottom: ${({ theme }) => theme.gridUnit * 3}px;\n  width: ${({ theme }) => theme.gridUnit * 120}px;\n`;\n\nexport const StyledCronError = styled.p`\n  color: ${({ theme }) => theme.colors.error.base};\n`;\n\nexport const noBottomMargin = css`\n  margin-bottom: 0;\n`;\n\nexport const StyledFooterButton = styled(Button)`\n  width: ${({ theme }) => theme.gridUnit * 40}px;\n`;\n\nexport const TimezoneHeaderStyle = (theme: SupersetTheme) => css`\n  margin: ${theme.gridUnit * 3}px 0 ${theme.gridUnit * 2}px;\n`;\n\nexport const SectionHeaderStyle = (theme: SupersetTheme) => css`\n  margin: ${theme.gridUnit * 3}px 0;\n`;\n\nexport const StyledMessageContentTitle = styled.div`\n  margin: ${({ theme }) => theme.gridUnit * 8}px 0\n    ${({ theme }) => theme.gridUnit * 4}px;\n`;\n\nexport const StyledRadio = styled(Radio)`\n  display: block;\n  line-height: ${({ theme }) => theme.gridUnit * 8}px;\n`;\n\nexport const StyledRadioGroup = styled(Radio.Group)`\n  margin-left: ${({ theme }) => theme.gridUnit * 0.5}px;\n`;\n\nexport const antDErrorAlertStyles = (theme: SupersetTheme) => css`\n  border: ${theme.colors.error.base} 1px solid;\n  padding: ${theme.gridUnit * 4}px;\n  margin: ${theme.gridUnit * 4}px;\n  margin-top: 0;\n  color: ${theme.colors.error.dark2};\n  .ant-alert-message {\n    font-size: ${theme.typography.sizes.m}px;\n    font-weight: bold;\n  }\n  .ant-alert-description {\n    font-size: ${theme.typography.sizes.m}px;\n    line-height: ${theme.gridUnit * 4}px;\n    .ant-alert-icon {\n      margin-right: ${theme.gridUnit * 2.5}px;\n      font-size: ${theme.typography.sizes.l}px;\n      position: relative;\n      top: ${theme.gridUnit / 4}px;\n    }\n  }\n`;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, {\n  useState,\n  useEffect,\n  useReducer,\n  useCallback,\n  useMemo,\n} from 'react';\nimport { t, SupersetTheme } from '@superset-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\nimport { addReport, editReport } from 'src/reports/actions/reports';\nimport Alert from 'src/components/Alert';\nimport TimezoneSelector from 'src/components/TimezoneSelector';\nimport LabeledErrorBoundInput from 'src/components/Form/LabeledErrorBoundInput';\nimport Icons from 'src/components/Icons';\nimport { CronError } from 'src/components/CronPicker';\nimport { RadioChangeEvent } from 'src/components';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { ChartState } from 'src/explore/types';\nimport {\n  ReportCreationMethod,\n  ReportObject,\n  NOTIFICATION_FORMATS,\n} from 'src/reports/types';\nimport { reportSelector } from 'src/views/CRUD/hooks';\nimport { CreationMethod } from './HeaderReportDropdown';\nimport {\n  antDErrorAlertStyles,\n  StyledModal,\n  StyledTopSection,\n  StyledBottomSection,\n  StyledIconWrapper,\n  StyledScheduleTitle,\n  StyledCronPicker,\n  StyledCronError,\n  noBottomMargin,\n  StyledFooterButton,\n  TimezoneHeaderStyle,\n  SectionHeaderStyle,\n  StyledMessageContentTitle,\n  StyledRadio,\n  StyledRadioGroup,\n} from './styles';\n\ninterface ReportProps {\n  onHide: () => {};\n  addDangerToast: (msg: string) => void;\n  show: boolean;\n  userId: number;\n  userEmail: string;\n  chart?: ChartState;\n  chartName?: string;\n  dashboardId?: number;\n  dashboardName?: string;\n  creationMethod: ReportCreationMethod;\n  props: any;\n}\n\nconst TEXT_BASED_VISUALIZATION_TYPES = [\n  'pivot_table',\n  'pivot_table_v2',\n  'table',\n  'paired_ttest',\n];\n\nconst INITIAL_STATE = {\n  crontab: '0 12 * * 1',\n};\n\ntype ReportObjectState = Partial<ReportObject> & {\n  error?: string;\n  /**\n   * Is submitting changes to the backend.\n   */\n  isSubmitting?: boolean;\n};\n\nfunction ReportModal({\n  onHide,\n  show = false,\n  dashboardId,\n  chart,\n  userId,\n  userEmail,\n  creationMethod,\n  dashboardName,\n  chartName,\n}: ReportProps) {\n  const vizType = chart?.sliceFormData?.viz_type;\n  const isChart = !!chart;\n  const isTextBasedChart =\n    isChart && vizType && TEXT_BASED_VISUALIZATION_TYPES.includes(vizType);\n  const defaultNotificationFormat = isTextBasedChart\n    ? NOTIFICATION_FORMATS.TEXT\n    : NOTIFICATION_FORMATS.PNG;\n  const entityName = dashboardName || chartName;\n  const initialState: ReportObjectState = useMemo(\n    () => ({\n      ...INITIAL_STATE,\n      name: entityName\n        ? t('Weekly Report for %s', entityName)\n        : t('Weekly Report'),\n    }),\n    [entityName],\n  );\n\n  const reportReducer = useCallback(\n    (state: ReportObjectState | null, action: 'reset' | ReportObjectState) => {\n      if (action === 'reset') {\n        return initialState;\n      }\n      return {\n        ...state,\n        ...action,\n      };\n    },\n    [initialState],\n  );\n\n  const [currentReport, setCurrentReport] = useReducer(\n    reportReducer,\n    initialState,\n  );\n  const [cronError, setCronError] = useState<CronError>();\n\n  const dispatch = useDispatch();\n  // Report fetch logic\n  const report = useSelector<any, ReportObject>(state => {\n    const resourceType = dashboardId\n      ? CreationMethod.DASHBOARDS\n      : CreationMethod.CHARTS;\n    return reportSelector(state, resourceType, dashboardId || chart?.id);\n  });\n  const isEditMode = report && Object.keys(report).length;\n\n  useEffect(() => {\n    if (isEditMode) {\n      setCurrentReport(report);\n    } else {\n      setCurrentReport('reset');\n    }\n  }, [isEditMode, report]);\n\n  const onSave = async () => {\n    // Create new Report\n    const newReportValues: Partial<ReportObject> = {\n      type: 'Report',\n      active: true,\n      force_screenshot: false,\n      creation_method: creationMethod,\n      dashboard: dashboardId,\n      chart: chart?.id,\n      owners: [userId],\n      recipients: [\n        {\n          recipient_config_json: { target: userEmail },\n          type: 'Email',\n        },\n      ],\n      name: currentReport.name,\n      description: currentReport.description,\n      crontab: currentReport.crontab,\n      report_format: currentReport.report_format || defaultNotificationFormat,\n      timezone: currentReport.timezone,\n    };\n\n    setCurrentReport({ isSubmitting: true, error: undefined });\n    try {\n      if (isEditMode) {\n        await dispatch(\n          editReport(currentReport.id, newReportValues as ReportObject),\n        );\n      } else {\n        await dispatch(addReport(newReportValues as ReportObject));\n      }\n      onHide();\n    } catch (e) {\n      const { error } = await getClientErrorObject(e);\n      setCurrentReport({ error });\n    }\n    setCurrentReport({ isSubmitting: false });\n  };\n\n  const wrappedTitle = (\n    <StyledIconWrapper>\n      <Icons.Calendar />\n      <span className=\"text\">\n        {isEditMode ? t('Edit email report') : t('Schedule a new email report')}\n      </span>\n    </StyledIconWrapper>\n  );\n\n  const renderModalFooter = (\n    <>\n      <StyledFooterButton key=\"back\" onClick={onHide}>\n        {t('Cancel')}\n      </StyledFooterButton>\n      <StyledFooterButton\n        key=\"submit\"\n        buttonStyle=\"primary\"\n        onClick={onSave}\n        disabled={!currentReport.name}\n        loading={currentReport.isSubmitting}\n      >\n        {isEditMode ? t('Save') : t('Add')}\n      </StyledFooterButton>\n    </>\n  );\n\n  const renderMessageContentSection = (\n    <>\n      <StyledMessageContentTitle>\n        <h4>{t('Message content')}</h4>\n      </StyledMessageContentTitle>\n      <div className=\"inline-container\">\n        <StyledRadioGroup\n          onChange={(event: RadioChangeEvent) => {\n            setCurrentReport({ report_format: event.target.value });\n          }}\n          value={currentReport.report_format || defaultNotificationFormat}\n        >\n          {isTextBasedChart && (\n            <StyledRadio value={NOTIFICATION_FORMATS.TEXT}>\n              {t('Text embedded in email')}\n            </StyledRadio>\n          )}\n          <StyledRadio value={NOTIFICATION_FORMATS.PNG}>\n            {t('Image (PNG) embedded in email')}\n          </StyledRadio>\n          <StyledRadio value={NOTIFICATION_FORMATS.CSV}>\n            {t('Formatted CSV attached in email')}\n          </StyledRadio>\n        </StyledRadioGroup>\n      </div>\n    </>\n  );\n\n  return (\n    <StyledModal\n      show={show}\n      onHide={onHide}\n      title={wrappedTitle}\n      footer={renderModalFooter}\n      width=\"432\"\n      centered\n    >\n      <StyledTopSection>\n        <LabeledErrorBoundInput\n          id=\"name\"\n          name=\"name\"\n          value={currentReport.name || ''}\n          placeholder={initialState.name}\n          required\n          validationMethods={{\n            onChange: ({ target }: { target: HTMLInputElement }) =>\n              setCurrentReport({ name: target.value }),\n          }}\n          label=\"Report Name\"\n          data-test=\"report-name-test\"\n        />\n        <LabeledErrorBoundInput\n          id=\"description\"\n          name=\"description\"\n          value={currentReport?.description || ''}\n          validationMethods={{\n            onChange: ({ target }: { target: HTMLInputElement }) => {\n              setCurrentReport({ description: target.value });\n            },\n          }}\n          label={t('Description')}\n          placeholder={t(\n            'Include a description that will be sent with your report',\n          )}\n          css={noBottomMargin}\n          data-test=\"report-description-test\"\n        />\n      </StyledTopSection>\n\n      <StyledBottomSection>\n        <StyledScheduleTitle>\n          <h4 css={(theme: SupersetTheme) => SectionHeaderStyle(theme)}>\n            {t('Schedule')}\n          </h4>\n          <p>\n            {t('A screenshot of the dashboard will be sent to your email at')}\n          </p>\n        </StyledScheduleTitle>\n\n        <StyledCronPicker\n          clearButton={false}\n          value={currentReport.crontab || '0 12 * * 1'}\n          setValue={(newValue: string) => {\n            setCurrentReport({ crontab: newValue });\n          }}\n          onError={setCronError}\n        />\n        <StyledCronError>{cronError}</StyledCronError>\n        <div\n          className=\"control-label\"\n          css={(theme: SupersetTheme) => TimezoneHeaderStyle(theme)}\n        >\n          {t('Timezone')}\n        </div>\n        <TimezoneSelector\n          timezone={currentReport.timezone}\n          onTimezoneChange={value => {\n            setCurrentReport({ timezone: value });\n          }}\n        />\n        {isChart && renderMessageContentSection}\n      </StyledBottomSection>\n      {currentReport.error && (\n        <Alert\n          type=\"error\"\n          css={(theme: SupersetTheme) => antDErrorAlertStyles(theme)}\n          message={\n            isEditMode\n              ? t('Failed to update report')\n              : t('Failed to create report')\n          }\n          description={currentReport.error}\n        />\n      )}\n    </StyledModal>\n  );\n}\n\nexport default withToasts(ReportModal);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport { usePrevious } from 'src/hooks/usePrevious';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  t,\n  SupersetTheme,\n  css,\n  useTheme,\n  FeatureFlag,\n  isFeatureEnabled,\n} from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\nimport { Switch } from 'src/components/Switch';\nimport { AlertObject } from 'src/views/CRUD/alert/types';\nimport { Menu } from 'src/components/Menu';\nimport Checkbox from 'src/components/Checkbox';\nimport { noOp } from 'src/utils/common';\nimport { NoAnimationDropdown } from 'src/components/Dropdown';\nimport DeleteModal from 'src/components/DeleteModal';\nimport ReportModal from 'src/components/ReportModal';\nimport { ChartState } from 'src/explore/types';\nimport { UserWithPermissionsAndRoles } from 'src/types/bootstrapTypes';\nimport {\n  fetchUISpecificReport,\n  toggleActive,\n  deleteActiveReport,\n} from 'src/reports/actions/reports';\nimport { reportSelector } from 'src/views/CRUD/hooks';\nimport { MenuItemWithCheckboxContainer } from 'src/explore/components/useExploreAdditionalActionsMenu/index';\n\nconst deleteColor = (theme: SupersetTheme) => css`\n  color: ${theme.colors.error.base};\n`;\n\nconst onMenuHover = (theme: SupersetTheme) => css`\n  & .ant-menu-item {\n    padding: 5px 12px;\n    margin-top: 0px;\n    margin-bottom: 4px;\n    :hover {\n      color: ${theme.colors.grayscale.dark1};\n    }\n  }\n  :hover {\n    background-color: ${theme.colors.secondary.light5};\n  }\n`;\n\nconst onMenuItemHover = (theme: SupersetTheme) => css`\n  &:hover {\n    color: ${theme.colors.grayscale.dark1};\n    background-color: ${theme.colors.secondary.light5};\n  }\n`;\nexport enum CreationMethod {\n  CHARTS = 'charts',\n  DASHBOARDS = 'dashboards',\n}\nexport interface HeaderReportProps {\n  dashboardId?: number;\n  chart?: ChartState;\n  useTextMenu?: boolean;\n  setShowReportSubMenu?: (show: boolean) => void;\n  setIsDropdownVisible?: (visible: boolean) => void;\n  isDropdownVisible?: boolean;\n  showReportSubMenu?: boolean;\n}\n\nexport default function HeaderReportDropDown({\n  dashboardId,\n  chart,\n  useTextMenu = false,\n  setShowReportSubMenu,\n  setIsDropdownVisible,\n  isDropdownVisible,\n}: HeaderReportProps) {\n  const dispatch = useDispatch();\n  const report = useSelector<any, AlertObject>(state => {\n    const resourceType = dashboardId\n      ? CreationMethod.DASHBOARDS\n      : CreationMethod.CHARTS;\n    return reportSelector(state, resourceType, dashboardId || chart?.id);\n  });\n\n  const isReportActive: boolean = report?.active || false;\n  const user: UserWithPermissionsAndRoles = useSelector<\n    any,\n    UserWithPermissionsAndRoles\n  >(state => state.user);\n  const canAddReports = () => {\n    if (!isFeatureEnabled(FeatureFlag.ALERT_REPORTS)) {\n      return false;\n    }\n\n    if (!user?.userId) {\n      // this is in the case that there is an anonymous user.\n      return false;\n    }\n    const roles = Object.keys(user.roles || []);\n    const permissions = roles.map(key =>\n      user.roles[key].filter(\n        perms => perms[0] === 'menu_access' && perms[1] === 'Manage',\n      ),\n    );\n    return permissions[0].length > 0;\n  };\n\n  const [currentReportDeleting, setCurrentReportDeleting] =\n    useState<AlertObject | null>(null);\n  const theme = useTheme();\n  const prevDashboard = usePrevious(dashboardId);\n  const [showModal, setShowModal] = useState<boolean>(false);\n  const toggleActiveKey = async (data: AlertObject, checked: boolean) => {\n    if (data?.id) {\n      dispatch(toggleActive(data, checked));\n    }\n  };\n\n  const handleReportDelete = async (report: AlertObject) => {\n    await dispatch(deleteActiveReport(report));\n    setCurrentReportDeleting(null);\n  };\n\n  const shouldFetch =\n    canAddReports() &&\n    !!((dashboardId && prevDashboard !== dashboardId) || chart?.id);\n\n  useEffect(() => {\n    if (shouldFetch) {\n      dispatch(\n        fetchUISpecificReport({\n          userId: user.userId,\n          filterField: dashboardId ? 'dashboard_id' : 'chart_id',\n          creationMethod: dashboardId ? 'dashboards' : 'charts',\n          resourceId: dashboardId || chart?.id,\n        }),\n      );\n    }\n  }, []);\n\n  const showReportSubMenu = report && setShowReportSubMenu && canAddReports();\n\n  useEffect(() => {\n    if (showReportSubMenu) {\n      setShowReportSubMenu(true);\n    } else if (!report && setShowReportSubMenu) {\n      setShowReportSubMenu(false);\n    }\n  }, [report]);\n\n  const handleShowMenu = () => {\n    if (setIsDropdownVisible) {\n      setIsDropdownVisible(false);\n      setShowModal(true);\n    }\n  };\n\n  const handleDeleteMenuClick = () => {\n    if (setIsDropdownVisible) {\n      setIsDropdownVisible(false);\n      setCurrentReportDeleting(report);\n    }\n  };\n\n  const textMenu = () =>\n    report ? (\n      isDropdownVisible && (\n        <Menu selectable={false} css={{ border: 'none' }}>\n          <Menu.Item\n            css={onMenuItemHover}\n            onClick={() => toggleActiveKey(report, !isReportActive)}\n          >\n            <MenuItemWithCheckboxContainer>\n              <Checkbox checked={isReportActive} onChange={noOp} />\n              {t('Email reports active')}\n            </MenuItemWithCheckboxContainer>\n          </Menu.Item>\n          <Menu.Item css={onMenuItemHover} onClick={handleShowMenu}>\n            {t('Edit email report')}\n          </Menu.Item>\n          <Menu.Item css={onMenuItemHover} onClick={handleDeleteMenuClick}>\n            {t('Delete email report')}\n          </Menu.Item>\n        </Menu>\n      )\n    ) : (\n      <Menu selectable={false} css={onMenuHover}>\n        <Menu.Item onClick={handleShowMenu}>\n          {t('Set up an email report')}\n        </Menu.Item>\n        <Menu.Divider />\n      </Menu>\n    );\n  const menu = () => (\n    <Menu selectable={false} css={{ width: '200px' }}>\n      <Menu.Item>\n        {t('Email reports active')}\n        <Switch\n          data-test=\"toggle-active\"\n          checked={isReportActive}\n          onClick={(checked: boolean) => toggleActiveKey(report, checked)}\n          size=\"small\"\n          css={{ marginLeft: theme.gridUnit * 2 }}\n        />\n      </Menu.Item>\n      <Menu.Item onClick={() => setShowModal(true)}>\n        {t('Edit email report')}\n      </Menu.Item>\n      <Menu.Item\n        onClick={() => setCurrentReportDeleting(report)}\n        css={deleteColor}\n      >\n        {t('Delete email report')}\n      </Menu.Item>\n    </Menu>\n  );\n\n  const iconMenu = () =>\n    report ? (\n      <>\n        <NoAnimationDropdown\n          overlay={menu()}\n          trigger={['click']}\n          getPopupContainer={(triggerNode: any) =>\n            triggerNode.closest('.action-button')\n          }\n        >\n          <span\n            role=\"button\"\n            className=\"action-button action-schedule-report\"\n            tabIndex={0}\n          >\n            <Icons.Calendar />\n          </span>\n        </NoAnimationDropdown>\n      </>\n    ) : (\n      <span\n        role=\"button\"\n        title={t('Schedule email report')}\n        tabIndex={0}\n        className=\"action-button action-schedule-report\"\n        onClick={() => setShowModal(true)}\n      >\n        <Icons.Calendar />\n      </span>\n    );\n\n  return (\n    <>\n      {canAddReports() && (\n        <>\n          <ReportModal\n            userId={user.userId}\n            show={showModal}\n            onHide={() => setShowModal(false)}\n            userEmail={user.email}\n            dashboardId={dashboardId}\n            chart={chart}\n            creationMethod={\n              dashboardId ? CreationMethod.DASHBOARDS : CreationMethod.CHARTS\n            }\n          />\n          {useTextMenu ? textMenu() : iconMenu()}\n          {currentReportDeleting && (\n            <DeleteModal\n              description={t(\n                'This action will permanently delete %s.',\n                currentReportDeleting?.name,\n              )}\n              onConfirm={() => {\n                if (currentReportDeleting) {\n                  handleReportDelete(currentReportDeleting);\n                }\n              }}\n              onHide={() => setCurrentReportDeleting(null)}\n              open\n              title={t('Delete Report?')}\n            />\n          )}\n        </>\n      )}\n    </>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@superset-ui/core';\nimport BaseSwitch, { SwitchProps } from 'antd/lib/switch';\n\nconst StyledSwitch = styled(BaseSwitch)`\n  .ant-switch-checked {\n    background-color: ${({ theme }) => theme.colors.primary.base};\n  }\n`;\n\nexport const Switch = (props: SwitchProps) => <StyledSwitch {...props} />;\nexport type { SwitchProps };\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useMemo } from 'react';\nimport moment from 'moment-timezone';\nimport { t } from '@superset-ui/core';\nimport { Select } from 'src/components';\n\nconst DEFAULT_TIMEZONE = {\n  name: 'GMT Standard Time',\n  value: 'Africa/Abidjan', // timezones are deduped by the first alphabetical value\n};\n\nconst MIN_SELECT_WIDTH = '400px';\n\nconst offsetsToName = {\n  '-300-240': ['Eastern Standard Time', 'Eastern Daylight Time'],\n  '-360-300': ['Central Standard Time', 'Central Daylight Time'],\n  '-420-360': ['Mountain Standard Time', 'Mountain Daylight Time'],\n  '-420-420': [\n    'Mountain Standard Time - Phoenix',\n    'Mountain Standard Time - Phoenix',\n  ],\n  '-480-420': ['Pacific Standard Time', 'Pacific Daylight Time'],\n  '-540-480': ['Alaska Standard Time', 'Alaska Daylight Time'],\n  '-600-600': ['Hawaii Standard Time', 'Hawaii Daylight Time'],\n  '60120': ['Central European Time', 'Central European Daylight Time'],\n  '00': [DEFAULT_TIMEZONE.name, DEFAULT_TIMEZONE.name],\n  '060': ['GMT Standard Time - London', 'British Summer Time'],\n};\n\nconst currentDate = moment();\nconst JANUARY = moment([2021, 1]);\nconst JULY = moment([2021, 7]);\n\nconst getOffsetKey = (name: string) =>\n  JANUARY.tz(name).utcOffset().toString() +\n  JULY.tz(name).utcOffset().toString();\n\nconst getTimezoneName = (name: string) => {\n  const offsets = getOffsetKey(name);\n  return (\n    (currentDate.tz(name).isDST()\n      ? offsetsToName[offsets]?.[1]\n      : offsetsToName[offsets]?.[0]) || name\n  );\n};\n\nconst ALL_ZONES = moment.tz\n  .countries()\n  .map(country => moment.tz.zonesForCountry(country, true))\n  .flat();\n\nconst TIMEZONES: moment.MomentZoneOffset[] = [];\nALL_ZONES.forEach(zone => {\n  if (\n    !TIMEZONES.find(\n      option => getOffsetKey(option.name) === getOffsetKey(zone.name),\n    )\n  ) {\n    TIMEZONES.push(zone); // dedupe zones by offsets\n  }\n});\n\nconst TIMEZONE_OPTIONS = TIMEZONES.map(zone => ({\n  label: `GMT ${moment\n    .tz(currentDate, zone.name)\n    .format('Z')} (${getTimezoneName(zone.name)})`,\n  value: zone.name,\n  offsets: getOffsetKey(zone.name),\n  timezoneName: zone.name,\n}));\n\nconst TIMEZONE_OPTIONS_SORT_COMPARATOR = (\n  a: typeof TIMEZONE_OPTIONS[number],\n  b: typeof TIMEZONE_OPTIONS[number],\n) =>\n  moment.tz(currentDate, a.timezoneName).utcOffset() -\n  moment.tz(currentDate, b.timezoneName).utcOffset();\n\n// pre-sort timezone options by time offset\nTIMEZONE_OPTIONS.sort(TIMEZONE_OPTIONS_SORT_COMPARATOR);\n\nconst matchTimezoneToOptions = (timezone: string) =>\n  TIMEZONE_OPTIONS.find(option => option.offsets === getOffsetKey(timezone))\n    ?.value || DEFAULT_TIMEZONE.value;\n\nexport type TimezoneSelectorProps = {\n  onTimezoneChange: (value: string) => void;\n  timezone?: string | null;\n  minWidth?: string;\n};\n\nexport default function TimezoneSelector({\n  onTimezoneChange,\n  timezone,\n  minWidth = MIN_SELECT_WIDTH, // smallest size for current values\n}: TimezoneSelectorProps) {\n  const validTimezone = useMemo(\n    () => matchTimezoneToOptions(timezone || moment.tz.guess()),\n    [timezone],\n  );\n\n  // force trigger a timezone update if provided `timezone` is not invalid\n  useEffect(() => {\n    if (timezone !== validTimezone) {\n      onTimezoneChange(validTimezone);\n    }\n  }, [validTimezone, onTimezoneChange, timezone]);\n\n  return (\n    <Select\n      ariaLabel={t('Timezone selector')}\n      css={{ minWidth }}\n      onChange={tz => onTimezoneChange(tz as string)}\n      value={validTimezone}\n      options={TIMEZONE_OPTIONS}\n      sortComparator={TIMEZONE_OPTIONS_SORT_COMPARATOR}\n    />\n  );\n}\n","/* eslint-disable import/prefer-default-export */\nimport { DatasourceType } from '@superset-ui/core';\nimport { Dataset } from '@superset-ui/chart-controls';\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nexport const PLACEHOLDER_DATASOURCE: Dataset = {\n  id: 0,\n  type: DatasourceType.Table,\n  uid: '_placeholder_',\n  datasource_name: '',\n  table_name: '',\n  columns: [],\n  column_types: [],\n  metrics: [],\n  column_format: {},\n  verbose_map: {},\n  main_dttm_col: '',\n  description: '',\n};\n\nexport const MAIN_HEADER_HEIGHT = 53;\nexport const CLOSED_FILTER_BAR_WIDTH = 32;\nexport const OPEN_FILTER_BAR_WIDTH = 260;\nexport const FILTER_BAR_HEADER_HEIGHT = 80;\nexport const FILTER_BAR_TABS_HEIGHT = 46;\nexport const BUILDER_SIDEPANEL_WIDTH = 374;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\nimport { BACKGROUND_TRANSPARENT, BACKGROUND_WHITE } from './constants';\n\nexport default [\n  {\n    value: BACKGROUND_TRANSPARENT,\n    label: t('Transparent'),\n    className: 'background--transparent',\n  },\n  {\n    value: BACKGROUND_WHITE,\n    label: t('White'),\n    className: 'background--white',\n  },\n];\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\nimport { SMALL_HEADER, MEDIUM_HEADER, LARGE_HEADER } from './constants';\n\nexport default [\n  {\n    value: SMALL_HEADER,\n    label: t('Small'),\n    className: 'header-style-option header-small',\n  },\n  {\n    value: MEDIUM_HEADER,\n    label: t('Medium'),\n    className: 'header-style-option header-medium',\n  },\n  {\n    value: LARGE_HEADER,\n    label: t('Large'),\n    className: 'header-style-option header-large',\n  },\n];\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  Datasource,\n  GenericDataType,\n  JsonObject,\n  QueryFormData,\n} from '@superset-ui/core';\nimport { ExploreActions } from 'src/explore/actions/exploreActions';\nimport { ChartStatus } from 'src/explore/types';\n\nexport enum ResultTypes {\n  Results = 'results',\n  Samples = 'samples',\n}\n\nexport interface DataTablesPaneProps {\n  queryFormData: QueryFormData;\n  datasource: Datasource;\n  queryForce: boolean;\n  ownState?: JsonObject;\n  chartStatus: ChartStatus;\n  onCollapseChange: (isOpen: boolean) => void;\n  errorMessage?: JSX.Element;\n  actions: ExploreActions;\n}\n\nexport interface ResultsPaneProps {\n  isRequest: boolean;\n  queryFormData: QueryFormData;\n  queryForce: boolean;\n  ownState?: JsonObject;\n  errorMessage?: React.ReactElement;\n  actions?: ExploreActions;\n  dataSize?: number;\n  // reload OriginalFormattedTimeColumns from localStorage when isVisible is true\n  isVisible: boolean;\n}\n\nexport interface SamplesPaneProps {\n  isRequest: boolean;\n  datasource: Datasource;\n  queryForce: boolean;\n  actions?: ExploreActions;\n  dataSize?: number;\n  // reload OriginalFormattedTimeColumns from localStorage when isVisible is true\n  isVisible: boolean;\n}\n\nexport interface TableControlsProps {\n  data: Record<string, any>[];\n  // {datasource.id}__{datasource.type}, eg: 1__table\n  datasourceId: string;\n  onInputChange: (input: string) => void;\n  columnNames: string[];\n  columnTypes: GenericDataType[];\n  isLoading: boolean;\n}\n\nexport interface QueryResultInterface {\n  colnames: string[];\n  coltypes: GenericDataType[];\n  data: Record<string, any>[][];\n}\n\nexport interface SingleQueryResultPaneProp extends QueryResultInterface {\n  // {datasource.id}__{datasource.type}, eg: 1__table\n  datasourceId: string;\n  dataSize?: number;\n  // reload OriginalFormattedTimeColumns from localStorage when isVisible is true\n  isVisible: boolean;\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nconst queryObjectCount = {\n  mixed_timeseries: 2,\n};\n\nexport const getQueryCount = (vizType: string): number =>\n  queryObjectCount?.[vizType] || 1;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo } from 'react';\nimport { zip } from 'lodash';\nimport { css, GenericDataType, styled } from '@superset-ui/core';\nimport {\n  CopyToClipboardButton,\n  FilterInput,\n  RowCount,\n} from 'src/explore/components/DataTableControl';\nimport { applyFormattingToTabularData } from 'src/utils/common';\nimport { getTimeColumns } from 'src/explore/components/DataTableControl/utils';\nimport { TableControlsProps } from '../types';\n\nexport const TableControlsWrapper = styled.div`\n  ${({ theme }) => `\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-bottom: ${theme.gridUnit * 2}px;\n\n    span {\n      flex-shrink: 0;\n    }\n  `}\n`;\n\nexport const TableControls = ({\n  data,\n  datasourceId,\n  onInputChange,\n  columnNames,\n  columnTypes,\n  isLoading,\n}: TableControlsProps) => {\n  const originalTimeColumns = getTimeColumns(datasourceId);\n  const formattedTimeColumns = zip<string, GenericDataType>(\n    columnNames,\n    columnTypes,\n  )\n    .filter(\n      ([name, type]) =>\n        type === GenericDataType.TEMPORAL &&\n        name &&\n        !originalTimeColumns.includes(name),\n    )\n    .map(([colname]) => colname);\n  const formattedData = useMemo(\n    () => applyFormattingToTabularData(data, formattedTimeColumns),\n    [data, formattedTimeColumns],\n  );\n  return (\n    <TableControlsWrapper>\n      <FilterInput onChangeHandler={onInputChange} />\n      <div\n        css={css`\n          display: flex;\n          align-items: center;\n        `}\n      >\n        <RowCount data={data} loading={isLoading} />\n        <CopyToClipboardButton data={formattedData} columns={columnNames} />\n      </div>\n    </TableControlsWrapper>\n  );\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { t } from '@superset-ui/core';\nimport TableView, { EmptyWrapperType } from 'src/components/TableView';\nimport {\n  useFilteredTableData,\n  useTableColumns,\n} from 'src/explore/components/DataTableControl';\nimport { TableControls } from './DataTableControls';\nimport { SingleQueryResultPaneProp } from '../types';\n\nexport const SingleQueryResultPane = ({\n  data,\n  colnames,\n  coltypes,\n  datasourceId,\n  dataSize = 50,\n  isVisible,\n}: SingleQueryResultPaneProp) => {\n  const [filterText, setFilterText] = useState('');\n\n  // this is to preserve the order of the columns, even if there are integer values,\n  // while also only grabbing the first column's keys\n  const columns = useTableColumns(\n    colnames,\n    coltypes,\n    data,\n    datasourceId,\n    isVisible,\n  );\n  const filteredData = useFilteredTableData(filterText, data);\n\n  return (\n    <>\n      <TableControls\n        data={filteredData}\n        columnNames={colnames}\n        columnTypes={coltypes}\n        datasourceId={datasourceId}\n        onInputChange={input => setFilterText(input)}\n        isLoading={false}\n      />\n      <TableView\n        columns={columns}\n        data={filteredData}\n        pageSize={dataSize}\n        noDataText={t('No results')}\n        emptyWrapperType={EmptyWrapperType.Small}\n        className=\"table-condensed\"\n        isPaginationSticky\n        showRowCount={false}\n        small\n      />\n    </>\n  );\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport { ensureIsArray, styled, t } from '@superset-ui/core';\nimport Loading from 'src/components/Loading';\nimport { EmptyStateMedium } from 'src/components/EmptyState';\nimport { getChartDataRequest } from 'src/components/Chart/chartAction';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\nimport { ResultsPaneProps, QueryResultInterface } from '../types';\nimport { getQueryCount } from '../utils';\nimport { SingleQueryResultPane } from './SingleQueryResultPane';\nimport { TableControls } from './DataTableControls';\n\nconst Error = styled.pre`\n  margin-top: ${({ theme }) => `${theme.gridUnit * 4}px`};\n`;\n\nconst cache = new WeakSet();\n\nexport const useResultsPane = ({\n  isRequest,\n  queryFormData,\n  queryForce,\n  ownState,\n  errorMessage,\n  actions,\n  isVisible,\n  dataSize = 50,\n}: ResultsPaneProps): React.ReactElement[] => {\n  const [resultResp, setResultResp] = useState<QueryResultInterface[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [responseError, setResponseError] = useState<string>('');\n  const queryCount = getQueryCount(\n    queryFormData?.viz_type || queryFormData?.vizType,\n  );\n\n  useEffect(() => {\n    // it's an invalid formData when gets a errorMessage\n    if (errorMessage) return;\n    if (isRequest && !cache.has(queryFormData)) {\n      setIsLoading(true);\n      getChartDataRequest({\n        formData: queryFormData,\n        force: queryForce,\n        resultFormat: 'json',\n        resultType: 'results',\n        ownState,\n      })\n        .then(({ json }) => {\n          setResultResp(ensureIsArray(json.result));\n          setResponseError('');\n          cache.add(queryFormData);\n          if (queryForce && actions) {\n            actions.setForceQuery(false);\n          }\n        })\n        .catch(response => {\n          getClientErrorObject(response).then(({ error, message }) => {\n            setResponseError(error || message || t('Sorry, an error occurred'));\n          });\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }\n  }, [queryFormData, isRequest]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setIsLoading(false);\n    }\n  }, [errorMessage]);\n\n  if (isLoading) {\n    return Array(queryCount).fill(<Loading />);\n  }\n\n  if (errorMessage) {\n    const title = t('Run a query to display results');\n    return Array(queryCount).fill(\n      <EmptyStateMedium image=\"document.svg\" title={title} />,\n    );\n  }\n\n  if (responseError) {\n    const err = (\n      <>\n        <TableControls\n          data={[]}\n          columnNames={[]}\n          columnTypes={[]}\n          datasourceId={queryFormData.datasource}\n          onInputChange={() => {}}\n          isLoading={false}\n        />\n        <Error>{responseError}</Error>\n      </>\n    );\n    return Array(queryCount).fill(err);\n  }\n\n  if (resultResp.length === 0) {\n    const title = t('No results were returned for this query');\n    return Array(queryCount).fill(\n      <EmptyStateMedium image=\"document.svg\" title={title} />,\n    );\n  }\n\n  return resultResp.map((result, idx) => (\n    <SingleQueryResultPane\n      data={result.data}\n      colnames={result.colnames}\n      coltypes={result.coltypes}\n      dataSize={dataSize}\n      datasourceId={queryFormData.datasource}\n      key={idx}\n      isVisible={isVisible}\n    />\n  ));\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport Tabs from 'src/components/Tabs';\nimport { ResultTypes, ResultsPaneProps } from '../types';\nimport { useResultsPane } from './useResultsPane';\n\nexport const ResultsPaneOnDashboard = ({\n  isRequest,\n  queryFormData,\n  queryForce,\n  ownState,\n  errorMessage,\n  actions,\n  isVisible,\n  dataSize = 50,\n}: ResultsPaneProps) => {\n  const resultsPanes = useResultsPane({\n    errorMessage,\n    queryFormData,\n    queryForce,\n    ownState,\n    isRequest,\n    actions,\n    dataSize,\n    isVisible,\n  });\n  if (resultsPanes.length === 1) {\n    return resultsPanes[0];\n  }\n\n  const panes = resultsPanes.map((pane, idx) => {\n    if (idx === 0) {\n      return (\n        <Tabs.TabPane tab={t('Results')} key={ResultTypes.Results}>\n          {pane}\n        </Tabs.TabPane>\n      );\n    }\n\n    return (\n      <Tabs.TabPane\n        tab={t('Results %s', idx + 1)}\n        key={`${ResultTypes.Results} ${idx + 1}`}\n      >\n        {pane}\n      </Tabs.TabPane>\n    );\n  });\n\n  return <Tabs fullWidth={false}> {panes} </Tabs>;\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { ensureIsArray, GenericDataType, styled, t } from '@superset-ui/core';\nimport Loading from 'src/components/Loading';\nimport { EmptyStateMedium } from 'src/components/EmptyState';\nimport TableView, { EmptyWrapperType } from 'src/components/TableView';\nimport {\n  useFilteredTableData,\n  useTableColumns,\n} from 'src/explore/components/DataTableControl';\nimport { getDatasourceSamples } from 'src/components/Chart/chartAction';\nimport { TableControls } from './DataTableControls';\nimport { SamplesPaneProps } from '../types';\n\nconst Error = styled.pre`\n  margin-top: ${({ theme }) => `${theme.gridUnit * 4}px`};\n`;\n\nconst cache = new WeakSet();\n\nexport const SamplesPane = ({\n  isRequest,\n  datasource,\n  queryForce,\n  actions,\n  dataSize = 50,\n  isVisible,\n}: SamplesPaneProps) => {\n  const [filterText, setFilterText] = useState('');\n  const [data, setData] = useState<Record<string, any>[][]>([]);\n  const [colnames, setColnames] = useState<string[]>([]);\n  const [coltypes, setColtypes] = useState<GenericDataType[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [responseError, setResponseError] = useState<string>('');\n  const datasourceId = useMemo(\n    () => `${datasource.id}__${datasource.type}`,\n    [datasource],\n  );\n\n  useEffect(() => {\n    if (isRequest && queryForce) {\n      cache.delete(datasource);\n    }\n\n    if (isRequest && !cache.has(datasource)) {\n      setIsLoading(true);\n      getDatasourceSamples(datasource.type, datasource.id, queryForce)\n        .then(response => {\n          setData(ensureIsArray(response.data));\n          setColnames(ensureIsArray(response.colnames));\n          setColtypes(ensureIsArray(response.coltypes));\n          setResponseError('');\n          cache.add(datasource);\n          if (queryForce && actions) {\n            actions.setForceQuery(false);\n          }\n        })\n        .catch(error => {\n          setData([]);\n          setColnames([]);\n          setColtypes([]);\n          setResponseError(`${error.name}: ${error.message}`);\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }\n  }, [datasource, isRequest, queryForce]);\n\n  // this is to preserve the order of the columns, even if there are integer values,\n  // while also only grabbing the first column's keys\n  const columns = useTableColumns(\n    colnames,\n    coltypes,\n    data,\n    datasourceId,\n    isVisible,\n  );\n  const filteredData = useFilteredTableData(filterText, data);\n\n  if (isLoading) {\n    return <Loading />;\n  }\n\n  if (responseError) {\n    return (\n      <>\n        <TableControls\n          data={filteredData}\n          columnNames={colnames}\n          columnTypes={coltypes}\n          datasourceId={datasourceId}\n          onInputChange={input => setFilterText(input)}\n          isLoading={isLoading}\n        />\n        <Error>{responseError}</Error>\n      </>\n    );\n  }\n\n  if (data.length === 0) {\n    const title = t('No samples were returned for this dataset');\n    return <EmptyStateMedium image=\"document.svg\" title={title} />;\n  }\n\n  return (\n    <>\n      <TableControls\n        data={filteredData}\n        columnNames={colnames}\n        columnTypes={coltypes}\n        datasourceId={datasourceId}\n        onInputChange={input => setFilterText(input)}\n        isLoading={isLoading}\n      />\n      <TableView\n        columns={columns}\n        data={filteredData}\n        pageSize={dataSize}\n        noDataText={t('No results')}\n        emptyWrapperType={EmptyWrapperType.Small}\n        className=\"table-condensed\"\n        isPaginationSticky\n        showRowCount={false}\n        small\n      />\n    </>\n  );\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n  MouseEvent,\n} from 'react';\nimport { styled, t, useTheme } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\nimport Tabs from 'src/components/Tabs';\nimport {\n  getItem,\n  setItem,\n  LocalStorageKeys,\n} from 'src/utils/localStorageHelpers';\nimport {\n  SamplesPane,\n  TableControlsWrapper,\n  useResultsPane,\n} from './components';\nimport { DataTablesPaneProps, ResultTypes } from './types';\n\nconst SouthPane = styled.div`\n  ${({ theme }) => `\n    position: relative;\n    background-color: ${theme.colors.grayscale.light5};\n    z-index: 5;\n    overflow: hidden;\n\n    .ant-tabs {\n      height: 100%;\n    }\n\n    .ant-tabs-content-holder {\n      height: 100%;\n    }\n\n    .ant-tabs-content {\n      height: 100%;\n    }\n\n    .ant-tabs-tabpane {\n      display: flex;\n      flex-direction: column;\n      height: 100%;\n\n      .table-condensed {\n        height: 100%;\n        overflow: auto;\n        margin-bottom: ${theme.gridUnit * 4}px;\n\n        .table {\n          margin-bottom: ${theme.gridUnit * 2}px;\n        }\n      }\n\n      .pagination-container > ul[role='navigation'] {\n        margin-top: 0;\n      }\n    }\n  `}\n`;\n\nexport const DataTablesPane = ({\n  queryFormData,\n  datasource,\n  queryForce,\n  onCollapseChange,\n  chartStatus,\n  ownState,\n  errorMessage,\n  actions,\n}: DataTablesPaneProps) => {\n  const theme = useTheme();\n  const [activeTabKey, setActiveTabKey] = useState<string>(ResultTypes.Results);\n  const [isRequest, setIsRequest] = useState<Record<ResultTypes, boolean>>({\n    results: false,\n    samples: false,\n  });\n  const [panelOpen, setPanelOpen] = useState(\n    getItem(LocalStorageKeys.is_datapanel_open, false),\n  );\n\n  useEffect(() => {\n    setItem(LocalStorageKeys.is_datapanel_open, panelOpen);\n  }, [panelOpen]);\n\n  useEffect(() => {\n    if (!panelOpen) {\n      setIsRequest({\n        results: false,\n        samples: false,\n      });\n    }\n\n    if (\n      panelOpen &&\n      activeTabKey.startsWith(ResultTypes.Results) &&\n      chartStatus === 'rendered'\n    ) {\n      setIsRequest({\n        results: true,\n        samples: false,\n      });\n    }\n\n    if (panelOpen && activeTabKey === ResultTypes.Samples) {\n      setIsRequest({\n        results: false,\n        samples: true,\n      });\n    }\n  }, [panelOpen, activeTabKey, chartStatus]);\n\n  const handleCollapseChange = useCallback(\n    (isOpen: boolean) => {\n      onCollapseChange(isOpen);\n      setPanelOpen(isOpen);\n    },\n    [onCollapseChange],\n  );\n\n  const handleTabClick = useCallback(\n    (tabKey: string, e: MouseEvent) => {\n      if (!panelOpen) {\n        handleCollapseChange(true);\n      } else if (tabKey === activeTabKey) {\n        e.preventDefault();\n        handleCollapseChange(false);\n      }\n      setActiveTabKey(tabKey);\n    },\n    [activeTabKey, handleCollapseChange, panelOpen],\n  );\n\n  const CollapseButton = useMemo(() => {\n    const caretIcon = panelOpen ? (\n      <Icons.CaretUp\n        iconColor={theme.colors.grayscale.base}\n        aria-label={t('Collapse data panel')}\n      />\n    ) : (\n      <Icons.CaretDown\n        iconColor={theme.colors.grayscale.base}\n        aria-label={t('Expand data panel')}\n      />\n    );\n    return (\n      <TableControlsWrapper>\n        {panelOpen ? (\n          <span\n            role=\"button\"\n            tabIndex={0}\n            onClick={() => handleCollapseChange(false)}\n          >\n            {caretIcon}\n          </span>\n        ) : (\n          <span\n            role=\"button\"\n            tabIndex={0}\n            onClick={() => handleCollapseChange(true)}\n          >\n            {caretIcon}\n          </span>\n        )}\n      </TableControlsWrapper>\n    );\n  }, [handleCollapseChange, panelOpen, theme.colors.grayscale.base]);\n\n  const queryResultsPanes = useResultsPane({\n    errorMessage,\n    queryFormData,\n    queryForce,\n    ownState,\n    isRequest: isRequest.results,\n    actions,\n    isVisible: ResultTypes.Results === activeTabKey,\n  }).map((pane, idx) => {\n    if (idx === 0) {\n      return (\n        <Tabs.TabPane tab={t('Results')} key={ResultTypes.Results}>\n          {pane}\n        </Tabs.TabPane>\n      );\n    }\n    if (idx > 0) {\n      return (\n        <Tabs.TabPane\n          tab={t('Results %s', idx + 1)}\n          key={`${ResultTypes.Results} ${idx + 1}`}\n        >\n          {pane}\n        </Tabs.TabPane>\n      );\n    }\n    return null;\n  });\n\n  return (\n    <SouthPane data-test=\"some-purposeful-instance\">\n      <Tabs\n        fullWidth={false}\n        tabBarExtraContent={CollapseButton}\n        activeKey={panelOpen ? activeTabKey : ''}\n        onTabClick={handleTabClick}\n      >\n        {queryResultsPanes}\n        <Tabs.TabPane tab={t('Samples')} key={ResultTypes.Samples}>\n          <SamplesPane\n            datasource={datasource}\n            queryForce={queryForce}\n            isRequest={isRequest.samples}\n            actions={actions}\n            isVisible={ResultTypes.Samples === activeTabKey}\n          />\n        </Tabs.TabPane>\n      </Tabs>\n    </SouthPane>\n  );\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState } from 'react';\nimport { ensureIsArray, t } from '@superset-ui/core';\nimport Loading from 'src/components/Loading';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\nimport { getChartDataRequest } from 'src/components/Chart/chartAction';\nimport ViewQuery from 'src/explore/components/controls/ViewQuery';\n\ninterface Props {\n  latestQueryFormData: object;\n}\n\ntype Result = {\n  query: string;\n  language: string;\n};\n\nconst ViewQueryModal: React.FC<Props> = props => {\n  const [result, setResult] = useState<Result[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const loadChartData = (resultType: string) => {\n    setIsLoading(true);\n    getChartDataRequest({\n      formData: props.latestQueryFormData,\n      resultFormat: 'json',\n      resultType,\n    })\n      .then(({ json }) => {\n        setResult(ensureIsArray(json.result));\n        setIsLoading(false);\n        setError(null);\n      })\n      .catch(response => {\n        getClientErrorObject(response).then(({ error, message }) => {\n          setError(\n            error ||\n              message ||\n              response.statusText ||\n              t('Sorry, An error occurred'),\n          );\n          setIsLoading(false);\n        });\n      });\n  };\n  useEffect(() => {\n    loadChartData('query');\n  }, [JSON.stringify(props.latestQueryFormData)]);\n\n  if (isLoading) {\n    return <Loading />;\n  }\n  if (error) {\n    return <pre>{error}</pre>;\n  }\n  return (\n    <>\n      {result.map(item =>\n        item.query ? (\n          <ViewQuery sql={item.query} language={item.language || undefined} />\n        ) : null,\n      )}\n    </>\n  );\n};\n\nexport default ViewQueryModal;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { useEffect } from 'react';\nimport { usePrevious } from '../usePrevious';\n\n/**\n * Calls the callback when the value changes.\n *\n * Passes the previous and current values to the callback\n */\nexport function useChangeEffect<T>(\n  value: T,\n  callback: (previous: T | undefined, current: T) => void,\n) {\n  const previous = usePrevious(value);\n  useEffect(() => {\n    if (value !== previous) {\n      callback(previous, value);\n    }\n  }, [value, previous, callback]);\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useEffect, useState } from 'react';\nimport { BroadcastChannel } from 'broadcast-channel';\n\ninterface TabIdChannelMessage {\n  type: 'REQUESTING_TAB_ID' | 'TAB_ID_DENIED';\n  tabId: string;\n}\n\n// TODO: We are using broadcast-channel to support Safari.\n// The native BroadcastChannel API will be supported in Safari version 15.4.\n// After that, we should remove this dependency and use the native API.\nconst channel = new BroadcastChannel<TabIdChannelMessage>('tab_id_channel');\n\nexport function useTabId() {\n  const [tabId, setTabId] = useState<string>();\n\n  useEffect(() => {\n    const updateTabId = () => {\n      const lastTabId = window.localStorage.getItem('last_tab_id');\n      const newTabId = String(\n        lastTabId ? Number.parseInt(lastTabId, 10) + 1 : 1,\n      );\n      window.sessionStorage.setItem('tab_id', newTabId);\n      window.localStorage.setItem('last_tab_id', newTabId);\n      setTabId(newTabId);\n    };\n\n    const storedTabId = window.sessionStorage.getItem('tab_id');\n    if (storedTabId) {\n      channel.postMessage({\n        type: 'REQUESTING_TAB_ID',\n        tabId: storedTabId,\n      });\n      setTabId(storedTabId);\n    } else {\n      updateTabId();\n    }\n\n    channel.onmessage = messageEvent => {\n      if (messageEvent.tabId === tabId) {\n        if (messageEvent.type === 'REQUESTING_TAB_ID') {\n          const message: TabIdChannelMessage = {\n            type: 'TAB_ID_DENIED',\n            tabId: messageEvent.tabId,\n          };\n          channel.postMessage(message);\n        } else if (messageEvent.type === 'TAB_ID_DENIED') {\n          updateTabId();\n        }\n      }\n    };\n  }, [tabId]);\n\n  return tabId;\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { SyntheticEvent } from 'react';\nimport domToImage from 'dom-to-image-more';\nimport kebabCase from 'lodash/kebabCase';\nimport { t } from '@superset-ui/core';\nimport { addWarningToast } from 'src/components/MessageToasts/actions';\n\n/**\n * @remark\n * same as https://github.com/apache/superset/blob/c53bc4ddf9808a8bb6916bbe3cb31935d33a2420/superset-frontend/src/assets/stylesheets/less/variables.less#L34\n */\nconst GRAY_BACKGROUND_COLOR = '#F5F5F5';\n\n/**\n * generate a consistent file stem from a description and date\n *\n * @param description title or description of content of file\n * @param date date when file was generated\n */\nconst generateFileStem = (description: string, date = new Date()) =>\n  `${kebabCase(description)}-${date.toISOString().replace(/[: ]/g, '-')}`;\n\n/**\n * Create an event handler for turning an element into an image\n *\n * @param selector css selector of the parent element which should be turned into image\n * @param description name or a short description of what is being printed.\n *   Value will be normalized, and a date as well as a file extension will be added.\n * @param isExactSelector if false, searches for the closest ancestor that matches selector.\n * @returns event handler\n */\nexport default function downloadAsImage(\n  selector: string,\n  description: string,\n  isExactSelector = false,\n) {\n  return (event: SyntheticEvent) => {\n    const elementToPrint = isExactSelector\n      ? document.querySelector(selector)\n      : event.currentTarget.closest(selector);\n\n    if (!elementToPrint) {\n      return addWarningToast(\n        t('Image download failed, please refresh and try again.'),\n      );\n    }\n\n    // Mapbox controls are loaded from different origin, causing CORS error\n    // See https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toDataURL#exceptions\n    const filter = (node: Element) => {\n      if (typeof node.className === 'string') {\n        return (\n          node.className !== 'mapboxgl-control-container' &&\n          !node.className.includes('ant-dropdown')\n        );\n      }\n      return true;\n    };\n\n    return domToImage\n      .toJpeg(elementToPrint, {\n        quality: 0.95,\n        bgcolor: GRAY_BACKGROUND_COLOR,\n        filter,\n      })\n      .then(dataUrl => {\n        const link = document.createElement('a');\n        link.download = `${generateFileStem(description)}.jpg`;\n        link.href = dataUrl;\n        link.click();\n      })\n      .catch(e => {\n        console.error('Creating image failed', e);\n      });\n  };\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { t } from '@superset-ui/core';\n\nexport const getChartRequiredFieldsMissingMessage = (isCreating: boolean) =>\n  t(\n    'Select values in highlighted field(s) in the control panel. Then run the query by clicking on the %s button.',\n    isCreating ? '\"Create chart\"' : '\"Update chart\"',\n  );\n"],"names":["propTypes","annotationData","PropTypes","actions","chartId","datasource","initialValues","formData","latestQueryFormData","labelColors","sharedLabelColors","height","width","setControlValue","vizType","triggerRender","chartAlert","chartStatus","queriesResponse","triggerQuery","chartIsStale","addFilter","setDataMask","onFilterMenuOpen","onFilterMenuClose","ownState","postTransformProps","source","BLANK","behaviors","Behavior","defaultProps","ChartRenderer","React","constructor","props","super","this","hasQueryResponseChange","handleAddFilter","bind","handleRenderSuccess","handleRenderFailure","handleSetControlValue","hooks","onAddFilter","onError","dataMask","updateDataMask","shouldComponentUpdate","nextProps","indexOf","error","filterState","color_scheme","stack","cacheBusterProp","col","vals","merge","refresh","chartRenderingSucceeded","logEvent","LOG_ACTIONS_RENDER_CHART","slice_id","viz_type","start_offset","renderStartTime","ts","Date","getTime","duration","Logger","info","logging","chartRenderingFailed","toString","componentStack","has_err","error_details","args","render","currentFormData","snakeCaseVizType","chartClassName","noResultsComponent","noResultTitle","t","noResultDescription","undefined","noResultImage","EmptyState","title","description","image","SuperChart","disableErrorBoundary","key","id","className","chartType","queriesData","onRenderSuccess","onRenderFailure","noResults","ChartErrorMessage","result","owners","ownedError","extra","ErrorMessageWithStackTrace","dashboardId","timeout","force","isFiltersInitialized","isDeactivatedViz","chartStackTrace","errorMessage","onQuery","datasetsStatus","NONEXISTENT_DATASET","Styles","styled","p","theme","typography","sizes","s","MonospaceDiv","families","monospace","Chart","handleRenderContainerFailure","componentDidMount","filterboxMigrationState","runQuery","componentDidUpdate","isFeatureEnabled","FeatureFlag","getSavedChart","getUrlParam","URL_PARAMS","postChartFormData","renderErrorMessage","queryResponse","errors","message","PLACEHOLDER_DATASOURCE","ResourceStatus","Loading","subtitle","copyText","link","stackTrace","errorMitigationFunction","toggleSaveDatasetModal","isLoading","renderContainerStartTime","map","item","ensureIsArray","length","getChartRequiredFieldsMissingMessage","ErrorBoundary","showMessage","role","tabIndex","onClick","connect","dispatch","bindActionCreators","componentShape","type","Object","values","componentTypes","isRequired","parents","children","meta","headerSize","headerStyleOptions","opt","value","background","backgroundStyleOptions","chartPropShape","chartUpdateEndTime","chartUpdateStartTime","queryController","abort","lastRendered","slicePropShape","slice_url","slice_name","datasource_name","datasource_link","changed_on","modified","description_markeddown","dashboardFilterPropShape","componentId","filterName","datasourceId","directPathToFilter","isDateFilter","isInstantFilter","columns","labels","scopes","dashboardStatePropShape","sliceIds","expandedSlices","editMode","isPublished","colorNamespace","colorScheme","updatedColorScheme","hasUnsavedChanges","dashboardInfoPropShape","metadata","slug","dash_edit_perm","dash_save_perm","common","userId","leafType","label","parentShape","f","apply","arguments","filterScopeSelectorTreeNodePropShape","CopyButtonEmbedCode","CopyButton","gridUnit","addDangerToast","setHeight","useState","setWidth","url","setUrl","setErrorMessage","handleInputChange","useCallback","e","name","currentTarget","updateUrl","getChartPermalink","then","catch","useEffect","html","useMemo","srcLink","text","css","CopyToClipboard","shouldShowText","copyNode","buttonSize","disabled","rows","readOnly","colors","secondary","light5","htmlFor","Input","defaultValue","onChange","MENU_KEYS","VIZ_TYPES_PIVOTABLE","MenuItemWithCheckboxContainer","useExploreAdditionalActionsMenu","Button","primary","dark2","light1","canDownloadCSV","slice","onOpenInEditor","onOpenPropertiesModal","useTheme","addSuccessToast","useToasts","showReportSubMenu","setShowReportSubMenu","isDropdownVisible","setIsDropdownVisible","openSubmenus","setOpenSubmenus","chart","useSelector","state","charts","getChartKey","explore","shareByEmail","async","subject","body","encodeURIComponent","window","location","href","exportCSV","exportChart","resultType","resultFormat","exportCSVPivoted","exportJson","copyLink","Error","copyTextToClipboard","handleMenuClick","domEvent","downloadAsImage","Menu","selectable","openKeys","onOpenChange","includes","icon","FileOutlined","FileImageOutlined","ModalTrigger","triggerNode","modalTitle","modalBody","maxWidth","destroyOnClose","responsive","useTextMenu","ViewQueryModal","draggable","resizable","LOCALE","everyText","emptyMonths","emptyMonthDays","emptyMonthDaysShort","emptyWeekDays","emptyWeekDaysShort","emptyHours","emptyMinutes","emptyMinutesForHourPeriod","yearOption","monthOption","weekOption","dayOption","hourOption","minuteOption","rebootOption","prefixPeriod","prefixMonths","prefixMonthDays","prefixWeekDays","prefixWeekDaysForMonthAndYearPeriod","prefixHours","prefixMinutes","prefixMinutesForHourPeriod","suffixMinutesForHourPeriod","errorInvalidCron","clearButtonText","weekDays","months","altWeekDays","altMonths","CronPicker","style","getPopupContainer","trigger","parentElement","locale","grayscale","light4","MenuDots","weights","normal","base","MenuDotsWrapper","Dropdown","overlay","rest","NoAnimationDropdown","overlayStyle","zIndex","animationDuration","titleStyles","xl","bold","DynamicEditableTitle","placeholder","onSave","canEdit","isEditing","setIsEditing","currentTitle","setCurrentTitle","contentRef","useRef","showTooltip","setShowTooltip","inputWidth","ref","sizerRef","containerWidth","containerRef","refreshMode","current","focus","setSelectionRange","scrollLeft","scrollWidth","useLayoutEffect","innerHTML","replace","clientWidth","handleClick","handleBlur","formattedTitle","trim","handleChange","ev","target","handleKeyPress","preventDefault","blur","Tooltip","onBlur","onKeyPress","menuTriggerStyles","headerStyles","buttonsStyles","additionalActionsContainerStyles","PageHeaderWithActions","editableTitleProps","showTitlePanelItems","certificatiedBadgeProps","showFaveStar","faveStarProps","titlePanelAdditionalItems","rightPanelAdditionalItems","additionalActionsMenu","menuDropdownProps","certifiedBy","CertifiedBadge","FaveStar","buttonStyle","Icons","iconColor","iconSize","ReportType","NOTIFICATION_FORMATS","StyledModal","Modal","StyledTopSection","StyledBottomSection","light2","StyledIconWrapper","StyledScheduleTitle","StyledCronPicker","StyledCronError","noBottomMargin","StyledFooterButton","StyledMessageContentTitle","StyledRadio","Radio","StyledRadioGroup","TEXT_BASED_VISUALIZATION_TYPES","INITIAL_STATE","crontab","withToasts","onHide","show","userEmail","creationMethod","dashboardName","chartName","sliceFormData","isChart","isTextBasedChart","defaultNotificationFormat","entityName","initialState","reportReducer","action","currentReport","setCurrentReport","useReducer","cronError","setCronError","report","resourceType","CreationMethod","isEditMode","keys","wrappedTitle","renderModalFooter","newReportValues","active","force_screenshot","creation_method","dashboard","recipients","recipient_config_json","report_format","timezone","isSubmitting","getClientErrorObject","loading","renderMessageContentSection","event","TEXT","PNG","CSV","footer","centered","LabeledErrorBoundInput","required","validationMethods","SectionHeaderStyle","clearButton","setValue","newValue","TimezoneHeaderStyle","TimezoneSelector","onTimezoneChange","Alert","m","l","antDErrorAlertStyles","deleteColor","onMenuHover","dark1","onMenuItemHover","HeaderReportDropDown","DASHBOARDS","CHARTS","isReportActive","user","canAddReports","roles","filter","perms","currentReportDeleting","setCurrentReportDeleting","prevDashboard","usePrevious","showModal","setShowModal","toggleActiveKey","data","checked","shouldFetch","filterField","resourceId","handleShowMenu","email","Checkbox","Switch","size","marginLeft","closest","DeleteModal","onConfirm","handleReportDelete","open","StyledSwitch","DEFAULT_TIMEZONE","offsetsToName","currentDate","JANUARY","JULY","getOffsetKey","tz","utcOffset","getTimezoneName","offsets","isDST","ALL_ZONES","country","flat","TIMEZONES","forEach","zone","find","option","push","TIMEZONE_OPTIONS","format","timezoneName","TIMEZONE_OPTIONS_SORT_COMPARATOR","a","b","minWidth","validTimezone","matchTimezoneToOptions","ariaLabel","options","sortComparator","sort","uid","table_name","column_types","metrics","column_format","verbose_map","main_dttm_col","MAIN_HEADER_HEIGHT","CLOSED_FILTER_BAR_WIDTH","OPEN_FILTER_BAR_WIDTH","FILTER_BAR_HEADER_HEIGHT","FILTER_BAR_TABS_HEIGHT","BUILDER_SIDEPANEL_WIDTH","ResultTypes","queryObjectCount","mixed_timeseries","TableControlsWrapper","TableControls","onInputChange","columnNames","columnTypes","originalTimeColumns","formattedTimeColumns","colname","formattedData","onChangeHandler","SingleQueryResultPane","colnames","coltypes","dataSize","isVisible","filterText","setFilterText","filteredData","input","TableView","pageSize","noDataText","emptyWrapperType","isPaginationSticky","showRowCount","small","cache","WeakSet","useResultsPane","isRequest","queryFormData","queryForce","resultResp","setResultResp","setIsLoading","responseError","setResponseError","queryCount","has","getChartDataRequest","json","add","setForceQuery","response","finally","Array","fill","err","idx","ResultsPaneOnDashboard","resultsPanes","panes","pane","Tabs","tab","Results","fullWidth","SamplesPane","setData","setColnames","setColtypes","delete","getDatasourceSamples","SouthPane","DataTablesPane","onCollapseChange","activeTabKey","setActiveTabKey","setIsRequest","results","samples","panelOpen","setPanelOpen","startsWith","Samples","handleCollapseChange","isOpen","handleTabClick","tabKey","CollapseButton","caretIcon","queryResultsPanes","tabBarExtraContent","activeKey","onTabClick","setResult","setError","statusText","JSON","stringify","query","sql","language","useChangeEffect","callback","previous","channel","useTabId","tabId","setTabId","updateTabId","lastTabId","localStorage","getItem","newTabId","String","Number","parseInt","sessionStorage","setItem","storedTabId","postMessage","onmessage","messageEvent","selector","isExactSelector","elementToPrint","document","querySelector","quality","bgcolor","node","dataUrl","createElement","download","date","toISOString","generateFileStem","click","console","isCreating"],"sourceRoot":""}