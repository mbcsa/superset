{"version":3,"file":"4fc2fcfd3c8cb49a258a.chunk.js","mappings":"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","sources":["webpack://superset/./src/views/CRUD/data/common.ts","webpack://superset/./src/views/CRUD/data/components/SyntaxHighlighterCopy/index.tsx","webpack://superset/./src/views/CRUD/data/hooks.ts","webpack://superset/./src/views/CRUD/data/query/QueryPreviewModal.tsx","webpack://superset/./src/views/CRUD/data/query/QueryList.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\n\nexport const commonMenuData = {\n  name: t('Data'),\n  tabs: [\n    {\n      name: 'Databases',\n      label: t('Databases'),\n      url: '/databaseview/list/',\n      usesRouter: true,\n    },\n    {\n      name: 'Datasets',\n      label: t('Datasets'),\n      url: '/tablemodelview/list/',\n      usesRouter: true,\n    },\n    {\n      name: 'Saved queries',\n      label: t('Saved queries'),\n      url: '/savedqueryview/list/',\n      usesRouter: true,\n    },\n    {\n      name: 'Query history',\n      label: t('Query history'),\n      url: '/superset/sqllab/history/',\n      usesRouter: true,\n    },\n  ],\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { SyntaxHighlighterProps } from 'react-syntax-highlighter';\nimport sqlSyntax from 'react-syntax-highlighter/dist/cjs/languages/hljs/sql';\nimport htmlSyntax from 'react-syntax-highlighter/dist/cjs/languages/hljs/htmlbars';\nimport markdownSyntax from 'react-syntax-highlighter/dist/cjs/languages/hljs/markdown';\nimport jsonSyntax from 'react-syntax-highlighter/dist/cjs/languages/hljs/json';\nimport github from 'react-syntax-highlighter/dist/cjs/styles/hljs/github';\nimport SyntaxHighlighter from 'react-syntax-highlighter/dist/cjs/light';\nimport Icons from 'src/components/Icons';\nimport { ToastProps } from 'src/components/MessageToasts/withToasts';\nimport copyTextToClipboard from 'src/utils/copy';\n\nSyntaxHighlighter.registerLanguage('sql', sqlSyntax);\nSyntaxHighlighter.registerLanguage('markdown', markdownSyntax);\nSyntaxHighlighter.registerLanguage('html', htmlSyntax);\nSyntaxHighlighter.registerLanguage('json', jsonSyntax);\n\nconst SyntaxHighlighterWrapper = styled.div`\n  margin-top: -24px;\n\n  &:hover {\n    svg {\n      visibility: visible;\n    }\n  }\n\n  svg {\n    position: relative;\n    top: 40px;\n    left: 512px;\n    visibility: hidden;\n    margin: -4px;\n    color: ${({ theme }) => theme.colors.grayscale.base};\n  }\n`;\n\nexport default function SyntaxHighlighterCopy({\n  addDangerToast,\n  addSuccessToast,\n  children,\n  ...syntaxHighlighterProps\n}: SyntaxHighlighterProps & {\n  children: string;\n  addDangerToast?: ToastProps['addDangerToast'];\n  addSuccessToast?: ToastProps['addSuccessToast'];\n  language: 'sql' | 'markdown' | 'html' | 'json';\n}) {\n  function copyToClipboard(textToCopy: string) {\n    copyTextToClipboard(() => Promise.resolve(textToCopy))\n      .then(() => {\n        if (addSuccessToast) {\n          addSuccessToast(t('SQL Copied!'));\n        }\n      })\n      .catch(() => {\n        if (addDangerToast) {\n          addDangerToast(t('Sorry, your browser does not support copying.'));\n        }\n      });\n  }\n  return (\n    <SyntaxHighlighterWrapper>\n      <Icons.Copy\n        tabIndex={0}\n        role=\"button\"\n        onClick={e => {\n          e.preventDefault();\n          e.currentTarget.blur();\n          copyToClipboard(children);\n        }}\n      />\n      <SyntaxHighlighter style={github} {...syntaxHighlighterProps}>\n        {children}\n      </SyntaxHighlighter>\n    </SyntaxHighlighterWrapper>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState, useEffect } from 'react';\n\ntype BaseQueryObject = {\n  id: number;\n};\nexport function useQueryPreviewState<D extends BaseQueryObject = any>({\n  queries,\n  fetchData,\n  currentQueryId,\n}: {\n  queries: D[];\n  fetchData: (id: number) => any;\n  currentQueryId: number;\n}) {\n  const index = queries.findIndex(query => query.id === currentQueryId);\n  const [currentIndex, setCurrentIndex] = useState(index);\n  const [disablePrevious, setDisablePrevious] = useState(false);\n  const [disableNext, setDisableNext] = useState(false);\n\n  function checkIndex() {\n    setDisablePrevious(currentIndex === 0);\n    setDisableNext(currentIndex === queries.length - 1);\n  }\n\n  function handleDataChange(previous: boolean) {\n    const offset = previous ? -1 : 1;\n    const index = currentIndex + offset;\n    if (index >= 0 && index < queries.length) {\n      fetchData(queries[index].id);\n      setCurrentIndex(index);\n      checkIndex();\n    }\n  }\n\n  function handleKeyPress(ev: any) {\n    if (currentIndex >= 0 && currentIndex < queries.length) {\n      if (ev.key === 'ArrowDown' || ev.key === 'k') {\n        ev.preventDefault();\n        handleDataChange(false);\n      } else if (ev.key === 'ArrowUp' || ev.key === 'j') {\n        ev.preventDefault();\n        handleDataChange(true);\n      }\n    }\n  }\n\n  useEffect(() => {\n    checkIndex();\n  });\n\n  return {\n    handleKeyPress,\n    handleDataChange,\n    disablePrevious,\n    disableNext,\n  };\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport Modal from 'src/components/Modal';\nimport cx from 'classnames';\nimport Button from 'src/components/Button';\nimport withToasts, {\n  ToastProps,\n} from 'src/components/MessageToasts/withToasts';\nimport SyntaxHighlighterCopy from 'src/views/CRUD/data/components/SyntaxHighlighterCopy';\nimport { useQueryPreviewState } from 'src/views/CRUD/data/hooks';\nimport { QueryObject } from 'src/views/CRUD/types';\n\nconst QueryTitle = styled.div`\n  color: ${({ theme }) => theme.colors.secondary.light2};\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  margin-bottom: 0;\n  text-transform: uppercase;\n`;\n\nconst QueryLabel = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.dark2};\n  font-size: ${({ theme }) => theme.typography.sizes.m}px;\n  padding: 4px 0 24px 0;\n`;\n\nconst QueryViewToggle = styled.div`\n  margin: 0 0 ${({ theme }) => theme.gridUnit * 6}px 0;\n`;\n\nconst TabButton = styled.div`\n  display: inline;\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  padding: ${({ theme }) => theme.gridUnit * 2}px\n    ${({ theme }) => theme.gridUnit * 4}px;\n  margin-right: ${({ theme }) => theme.gridUnit * 4}px;\n  color: ${({ theme }) => theme.colors.secondary.dark1};\n\n  &.active,\n  &:focus,\n  &:hover {\n    background: ${({ theme }) => theme.colors.secondary.light4};\n    border-bottom: none;\n    border-radius: ${({ theme }) => theme.borderRadius}px;\n    margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  &:hover:not(.active) {\n    background: ${({ theme }) => theme.colors.secondary.light5};\n  }\n`;\nconst StyledModal = styled(Modal)`\n  .ant-modal-body {\n    padding: ${({ theme }) => theme.gridUnit * 6}px;\n  }\n\n  pre {\n    font-size: ${({ theme }) => theme.typography.sizes.xs}px;\n    font-weight: ${({ theme }) => theme.typography.weights.normal};\n    line-height: ${({ theme }) => theme.typography.sizes.l}px;\n    height: 375px;\n    border: none;\n  }\n`;\n\ninterface QueryPreviewModalProps extends ToastProps {\n  onHide: () => void;\n  openInSqlLab: (id: number) => any;\n  queries: QueryObject[];\n  query: QueryObject;\n  fetchData: (id: number) => any;\n  show: boolean;\n}\n\nfunction QueryPreviewModal({\n  onHide,\n  openInSqlLab,\n  queries,\n  query,\n  fetchData,\n  show,\n  addDangerToast,\n  addSuccessToast,\n}: QueryPreviewModalProps) {\n  const { handleKeyPress, handleDataChange, disablePrevious, disableNext } =\n    useQueryPreviewState<QueryObject>({\n      queries,\n      currentQueryId: query.id,\n      fetchData,\n    });\n\n  const [currentTab, setCurrentTab] = useState<'user' | 'executed'>('user');\n\n  const { id, sql, executed_sql } = query;\n  return (\n    <div role=\"none\" onKeyUp={handleKeyPress}>\n      <StyledModal\n        onHide={onHide}\n        show={show}\n        title={t('Query preview')}\n        footer={\n          <>\n            <Button\n              data-test=\"previous-query\"\n              key=\"previous-query\"\n              disabled={disablePrevious}\n              onClick={() => handleDataChange(true)}\n            >\n              {t('Previous')}\n            </Button>\n            <Button\n              data-test=\"next-query\"\n              key=\"next-query\"\n              disabled={disableNext}\n              onClick={() => handleDataChange(false)}\n            >\n              {t('Next')}\n            </Button>\n            <Button\n              data-test=\"open-in-sql-lab\"\n              key=\"open-in-sql-lab\"\n              buttonStyle=\"primary\"\n              onClick={() => openInSqlLab(id)}\n            >\n              {t('Open in SQL Lab')}\n            </Button>\n          </>\n        }\n      >\n        <QueryTitle>{t('Tab name')}</QueryTitle>\n        <QueryLabel>{query.tab_name}</QueryLabel>\n        <QueryViewToggle>\n          <TabButton\n            role=\"button\"\n            data-test=\"toggle-user-sql\"\n            className={cx({ active: currentTab === 'user' })}\n            onClick={() => setCurrentTab('user')}\n          >\n            {t('User query')}\n          </TabButton>\n          <TabButton\n            role=\"button\"\n            data-test=\"toggle-executed-sql\"\n            className={cx({ active: currentTab === 'executed' })}\n            onClick={() => setCurrentTab('executed')}\n          >\n            {t('Executed query')}\n          </TabButton>\n        </QueryViewToggle>\n        <SyntaxHighlighterCopy\n          addDangerToast={addDangerToast}\n          addSuccessToast={addSuccessToast}\n          language=\"sql\"\n        >\n          {(currentTab === 'user' ? sql : executed_sql) || ''}\n        </SyntaxHighlighterCopy>\n      </StyledModal>\n    </div>\n  );\n}\n\nexport default withToasts(QueryPreviewModal);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo, useState, useCallback, ReactElement } from 'react';\nimport { SupersetClient, t, styled, useTheme } from '@superset-ui/core';\nimport moment from 'moment';\nimport {\n  createFetchRelated,\n  createFetchDistinct,\n  createErrorHandler,\n  shortenSQL,\n} from 'src/views/CRUD/utils';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport SubMenu, { SubMenuProps } from 'src/views/components/SubMenu';\nimport Popover from 'src/components/Popover';\nimport { commonMenuData } from 'src/views/CRUD/data/common';\nimport ListView, {\n  Filters,\n  FilterOperator,\n  ListViewProps,\n} from 'src/components/ListView';\nimport { Tooltip } from 'src/components/Tooltip';\nimport SyntaxHighlighter from 'react-syntax-highlighter/dist/cjs/light';\nimport sql from 'react-syntax-highlighter/dist/cjs/languages/hljs/sql';\nimport github from 'react-syntax-highlighter/dist/cjs/styles/hljs/github';\nimport { DATETIME_WITH_TIME_ZONE, TIME_WITH_MS } from 'src/constants';\nimport { QueryObject, QueryObjectColumns } from 'src/views/CRUD/types';\n\nimport Icons from 'src/components/Icons';\nimport QueryPreviewModal from './QueryPreviewModal';\n\nconst PAGE_SIZE = 25;\nconst SQL_PREVIEW_MAX_LINES = 4;\n\nconst TopAlignedListView = styled(ListView)<ListViewProps<QueryObject>>`\n  table .table-cell {\n    vertical-align: top;\n  }\n`;\n\nSyntaxHighlighter.registerLanguage('sql', sql);\nconst StyledSyntaxHighlighter = styled(SyntaxHighlighter)`\n  height: ${({ theme }) => theme.gridUnit * 26}px;\n  overflow: hidden !important; /* needed to override inline styles */\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\ninterface QueryListProps {\n  addDangerToast: (msg: string, config?: any) => any;\n  addSuccessToast: (msg: string, config?: any) => any;\n}\n\nconst StyledTableLabel = styled.div`\n  .count {\n    margin-left: 5px;\n    color: ${({ theme }) => theme.colors.primary.base};\n    text-decoration: underline;\n    cursor: pointer;\n  }\n`;\n\nconst StyledPopoverItem = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.dark2};\n`;\n\nfunction QueryList({ addDangerToast }: QueryListProps) {\n  const {\n    state: { loading, resourceCount: queryCount, resourceCollection: queries },\n    fetchData,\n  } = useListViewResource<QueryObject>(\n    'query',\n    t('Query history'),\n    addDangerToast,\n    false,\n  );\n\n  const [queryCurrentlyPreviewing, setQueryCurrentlyPreviewing] =\n    useState<QueryObject>();\n\n  const theme = useTheme();\n\n  const handleQueryPreview = useCallback(\n    (id: number) => {\n      SupersetClient.get({\n        endpoint: `/api/v1/query/${id}`,\n      }).then(\n        ({ json = {} }) => {\n          setQueryCurrentlyPreviewing({ ...json.result });\n        },\n        createErrorHandler(errMsg =>\n          addDangerToast(\n            t('There was an issue previewing the selected query. %s', errMsg),\n          ),\n        ),\n      );\n    },\n    [addDangerToast],\n  );\n\n  const menuData: SubMenuProps = {\n    activeChild: 'Query history',\n    ...commonMenuData,\n  };\n\n  const initialSort = [{ id: QueryObjectColumns.start_time, desc: true }];\n  const columns = useMemo(\n    () => [\n      {\n        Cell: ({\n          row: {\n            original: { status },\n          },\n        }: any) => {\n          const statusConfig: {\n            name: ReactElement | null;\n            label: string;\n          } = {\n            name: null,\n            label: '',\n          };\n          if (status === 'success') {\n            statusConfig.name = (\n              <Icons.Check iconColor={theme.colors.success.base} />\n            );\n            statusConfig.label = t('Success');\n          } else if (status === 'failed' || status === 'stopped') {\n            statusConfig.name = (\n              <Icons.XSmall\n                iconColor={\n                  status === 'failed'\n                    ? theme.colors.error.base\n                    : theme.colors.grayscale.base\n                }\n              />\n            );\n            statusConfig.label = t('Failed');\n          } else if (status === 'running') {\n            statusConfig.name = (\n              <Icons.Running iconColor={theme.colors.primary.base} />\n            );\n            statusConfig.label = t('Running');\n          } else if (status === 'timed_out') {\n            statusConfig.name = (\n              <Icons.Offline iconColor={theme.colors.grayscale.light1} />\n            );\n            statusConfig.label = t('Offline');\n          } else if (status === 'scheduled' || status === 'pending') {\n            statusConfig.name = (\n              <Icons.Queued iconColor={theme.colors.grayscale.base} />\n            );\n            statusConfig.label = t('Scheduled');\n          }\n          return (\n            <Tooltip title={statusConfig.label} placement=\"bottom\">\n              <span>{statusConfig.name}</span>\n            </Tooltip>\n          );\n        },\n        accessor: QueryObjectColumns.status,\n        size: 'xs',\n        disableSortBy: true,\n      },\n      {\n        accessor: QueryObjectColumns.start_time,\n        Header: t('Time'),\n        size: 'xl',\n        Cell: ({\n          row: {\n            original: { start_time, end_time },\n          },\n        }: any) => {\n          const startMoment = moment.utc(start_time).local();\n          const formattedStartTimeData = startMoment\n            .format(DATETIME_WITH_TIME_ZONE)\n            .split(' ');\n\n          const formattedStartTime = (\n            <>\n              {formattedStartTimeData[0]} <br />\n              {formattedStartTimeData[1]}\n            </>\n          );\n\n          return end_time ? (\n            <Tooltip\n              title={t(\n                'Duration: %s',\n                moment(moment.utc(end_time - start_time)).format(TIME_WITH_MS),\n              )}\n              placement=\"bottom\"\n            >\n              <span>{formattedStartTime}</span>\n            </Tooltip>\n          ) : (\n            formattedStartTime\n          );\n        },\n      },\n      {\n        accessor: QueryObjectColumns.tab_name,\n        Header: t('Tab name'),\n        size: 'xl',\n      },\n      {\n        accessor: QueryObjectColumns.database_name,\n        Header: t('Database'),\n        size: 'xl',\n      },\n      {\n        accessor: QueryObjectColumns.database,\n        hidden: true,\n      },\n      {\n        accessor: QueryObjectColumns.schema,\n        Header: t('Schema'),\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { sql_tables: tables = [] },\n          },\n        }: any) => {\n          const names = tables.map((table: any) => table.table);\n          const main = names.length > 0 ? names.shift() : '';\n\n          if (names.length) {\n            return (\n              <StyledTableLabel>\n                <span>{main}</span>\n                <Popover\n                  placement=\"right\"\n                  title={t('TABLES')}\n                  trigger=\"click\"\n                  content={\n                    <>\n                      {names.map((name: string) => (\n                        <StyledPopoverItem key={name}>{name}</StyledPopoverItem>\n                      ))}\n                    </>\n                  }\n                >\n                  <span className=\"count\">(+{names.length})</span>\n                </Popover>\n              </StyledTableLabel>\n            );\n          }\n\n          return main;\n        },\n        accessor: QueryObjectColumns.sql_tables,\n        Header: t('Tables'),\n        size: 'xl',\n        disableSortBy: true,\n      },\n      {\n        accessor: QueryObjectColumns.user_first_name,\n        Header: t('User'),\n        size: 'xl',\n        Cell: ({\n          row: {\n            original: { user },\n          },\n        }: any) => (user ? `${user.first_name} ${user.last_name}` : ''),\n      },\n      {\n        accessor: QueryObjectColumns.user,\n        hidden: true,\n      },\n      {\n        accessor: QueryObjectColumns.rows,\n        Header: t('Rows'),\n        size: 'md',\n      },\n      {\n        accessor: QueryObjectColumns.sql,\n        Header: t('SQL'),\n        Cell: ({ row: { original, id } }: any) => (\n          <div\n            tabIndex={0}\n            role=\"button\"\n            data-test={`open-sql-preview-${id}`}\n            onClick={() => setQueryCurrentlyPreviewing(original)}\n          >\n            <StyledSyntaxHighlighter language=\"sql\" style={github}>\n              {shortenSQL(original.sql, SQL_PREVIEW_MAX_LINES)}\n            </StyledSyntaxHighlighter>\n          </div>\n        ),\n      },\n      {\n        Header: t('Actions'),\n        id: 'actions',\n        disableSortBy: true,\n        Cell: ({\n          row: {\n            original: { id },\n          },\n        }: any) => (\n          <Tooltip title={t('Open query in SQL Lab')} placement=\"bottom\">\n            <a href={`/superset/sqllab?queryId=${id}`}>\n              <Icons.Full iconColor={theme.colors.grayscale.base} />\n            </a>\n          </Tooltip>\n        ),\n      },\n    ],\n    [],\n  );\n\n  const filters: Filters = useMemo(\n    () => [\n      {\n        Header: t('Database'),\n        id: 'database',\n        input: 'select',\n        operator: FilterOperator.relationOneMany,\n        unfilteredLabel: 'All',\n        fetchSelects: createFetchRelated(\n          'query',\n          'database',\n          createErrorHandler(errMsg =>\n            addDangerToast(\n              t('An error occurred while fetching database values: %s', errMsg),\n            ),\n          ),\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('State'),\n        id: 'status',\n        input: 'select',\n        operator: FilterOperator.equals,\n        unfilteredLabel: 'All',\n        fetchSelects: createFetchDistinct(\n          'query',\n          'status',\n          createErrorHandler(errMsg =>\n            addDangerToast(\n              t('An error occurred while fetching schema values: %s', errMsg),\n            ),\n          ),\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('User'),\n        id: 'user',\n        input: 'select',\n        operator: FilterOperator.relationOneMany,\n        unfilteredLabel: 'All',\n        fetchSelects: createFetchRelated(\n          'query',\n          'user',\n          createErrorHandler(errMsg =>\n            addDangerToast(\n              t('An error occurred while fetching user values: %s', errMsg),\n            ),\n          ),\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Time range'),\n        id: 'start_time',\n        input: 'datetime_range',\n        operator: FilterOperator.between,\n      },\n      {\n        Header: t('Search by query text'),\n        id: 'sql',\n        input: 'search',\n        operator: FilterOperator.contains,\n      },\n    ],\n    [addDangerToast],\n  );\n\n  return (\n    <>\n      <SubMenu {...menuData} />\n      {queryCurrentlyPreviewing && (\n        <QueryPreviewModal\n          onHide={() => setQueryCurrentlyPreviewing(undefined)}\n          query={queryCurrentlyPreviewing}\n          queries={queries}\n          fetchData={handleQueryPreview}\n          openInSqlLab={(id: number) =>\n            window.location.assign(`/superset/sqllab?queryId=${id}`)\n          }\n          show\n        />\n      )}\n      <TopAlignedListView\n        className=\"query-history-list-view\"\n        columns={columns}\n        count={queryCount}\n        data={queries}\n        fetchData={fetchData}\n        filters={filters}\n        initialSort={initialSort}\n        loading={loading}\n        pageSize={PAGE_SIZE}\n        highlightRowId={queryCurrentlyPreviewing?.id}\n      />\n    </>\n  );\n}\n\nexport default withToasts(QueryList);\n"],"names":["commonMenuData","name","t","tabs","label","url","usesRouter","SyntaxHighlighterWrapper","theme","colors","grayscale","base","SyntaxHighlighterCopy","addDangerToast","addSuccessToast","children","syntaxHighlighterProps","tabIndex","role","onClick","e","textToCopy","preventDefault","currentTarget","blur","Promise","resolve","then","catch","style","useQueryPreviewState","queries","fetchData","currentQueryId","index","findIndex","query","id","currentIndex","setCurrentIndex","useState","disablePrevious","setDisablePrevious","disableNext","setDisableNext","checkIndex","length","handleDataChange","previous","useEffect","handleKeyPress","ev","key","QueryTitle","secondary","light2","typography","sizes","s","QueryLabel","dark2","m","QueryViewToggle","gridUnit","TabButton","dark1","light4","borderRadius","light5","StyledModal","Modal","xs","weights","normal","l","withToasts","onHide","openInSqlLab","show","currentTab","setCurrentTab","sql","executed_sql","onKeyUp","title","footer","Button","disabled","buttonStyle","tab_name","className","active","language","TopAlignedListView","ListView","StyledSyntaxHighlighter","StyledTableLabel","primary","StyledPopoverItem","state","loading","resourceCount","queryCount","resourceCollection","queryCurrentlyPreviewing","setQueryCurrentlyPreviewing","handleQueryPreview","useCallback","SupersetClient","endpoint","json","result","errMsg","menuData","activeChild","common","initialSort","desc","columns","useMemo","Cell","row","original","status","statusConfig","Icons","iconColor","success","error","light1","Tooltip","placement","accessor","size","disableSortBy","Header","start_time","end_time","formattedStartTimeData","local","format","split","formattedStartTime","hidden","sql_tables","tables","names","map","table","main","shift","Popover","trigger","content","user","first_name","last_name","github","href","filters","input","operator","unfilteredLabel","fetchSelects","paginate","SubMenu","undefined","window","location","assign","count","data","pageSize","highlightRowId"],"sourceRoot":""}